<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="degrees__result_8cpp" kind="file" language="C++">
    <compoundname>degrees_result.cpp</compoundname>
    <includes refid="degrees__result_8hpp" local="yes">c_api/degrees_result.hpp</includes>
    <includes refid="graph__functions_8h" local="no">cugraph_c/graph_functions.h</includes>
    <incdepgraph>
      <node id="4">
        <label>cugraph_c/array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cugraph_c/error.h</label>
        <link refid="error_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cugraph_c/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cugraph_c/graph_functions.h</label>
        <link refid="graph__functions_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cugraph_c/resource_handle.h</label>
        <link refid="resource__handle_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>c_api/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>degrees_result.cpp</label>
        <link refid="degrees__result_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>c_api/degrees_result.hpp</label>
        <link refid="degrees__result_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rmm/device_buffer.hpp</label>
      </node>
      <node id="10">
        <label>rmm/device_uvector.hpp</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="degrees__result_8cpp_1a4373ad15b5266cfa96fa96660692764d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
        <definition>cugraph_type_erased_device_array_view_t * cugraph_degrees_result_get_vertices</definition>
        <argsstring>(cugraph_degrees_result_t *degrees_result)</argsstring>
        <name>cugraph_degrees_result_get_vertices</name>
        <param>
          <type><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref> *</type>
          <declname>degrees_result</declname>
        </param>
        <briefdescription>
<para>Get the vertex ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees_result</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to degree result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type erased array view of vertex ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" line="21" column="52" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" bodystart="21" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="degrees__result_8cpp_1af1cbff61ca29f4c9af5bbe2a4aa585b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
        <definition>cugraph_type_erased_device_array_view_t * cugraph_degrees_result_get_in_degrees</definition>
        <argsstring>(cugraph_degrees_result_t *degrees_result)</argsstring>
        <name>cugraph_degrees_result_get_in_degrees</name>
        <param>
          <type><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref> *</type>
          <declname>degrees_result</declname>
        </param>
        <briefdescription>
<para>Get the in degrees. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees_result</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to degree result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type erased array view of vertex ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" line="30" column="52" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="degrees__result_8cpp_1adf747a6cd1a6afa1b98c1f07e9ee8965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
        <definition>cugraph_type_erased_device_array_view_t * cugraph_degrees_result_get_out_degrees</definition>
        <argsstring>(cugraph_degrees_result_t *degrees_result)</argsstring>
        <name>cugraph_degrees_result_get_out_degrees</name>
        <param>
          <type><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref> *</type>
          <declname>degrees_result</declname>
        </param>
        <briefdescription>
<para>Get the out degrees. </para>
        </briefdescription>
        <detaileddescription>
<para>If the graph is symmetric, in degrees and out degrees will be equal (and will be stored in the same memory).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees_result</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to degree result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type erased array view of vertex ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" line="41" column="52" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" bodystart="41" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="degrees__result_8cpp_1ac4409c4ec3f68d3880bd98dfa1ae8bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph_degrees_result_free</definition>
        <argsstring>(cugraph_degrees_result_t *degrees_result)</argsstring>
        <name>cugraph_degrees_result_free</name>
        <param>
          <type><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref> *</type>
          <declname>degrees_result</declname>
        </param>
        <briefdescription>
<para>Free degree result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees_result</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to degree result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" line="55" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp" bodystart="55" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/degrees_result.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph_c/graph_functions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>cugraph_degrees_result_get_vertices(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref>*<sp/>degrees_result)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__degrees__result__t" kindref="compound">cugraph::c_api::cugraph_degrees_result_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(degrees_result);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_pointer-&gt;vertex_ids_-&gt;view());</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>cugraph_degrees_result_get_in_degrees(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref>*<sp/>degrees_result)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__degrees__result__t" kindref="compound">cugraph::c_api::cugraph_degrees_result_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(degrees_result);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_pointer-&gt;in_degrees_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>nullptr</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_pointer-&gt;in_degrees_-&gt;view());</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>cugraph_degrees_result_get_out_degrees(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref>*<sp/>degrees_result)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__degrees__result__t" kindref="compound">cugraph::c_api::cugraph_degrees_result_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(degrees_result);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_pointer-&gt;out_degrees_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_pointer-&gt;out_degrees_-&gt;view())</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>internal_pointer-&gt;is_symmetric</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>reinterpret_cast&lt;<ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*&gt;(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_pointer-&gt;in_degrees_-&gt;view())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nullptr;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cugraph_degrees_result_free(<ref refid="structcugraph__degrees__result__t" kindref="compound">cugraph_degrees_result_t</ref>*<sp/>degrees_result)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__degrees__result__t" kindref="compound">cugraph::c_api::cugraph_degrees_result_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(degrees_result);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer-&gt;vertex_ids_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer-&gt;in_degrees_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer-&gt;out_degrees_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/degrees_result.cpp"/>
  </compounddef>
</doxygen>
