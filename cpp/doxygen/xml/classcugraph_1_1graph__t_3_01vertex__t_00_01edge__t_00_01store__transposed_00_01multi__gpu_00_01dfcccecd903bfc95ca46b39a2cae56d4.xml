<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4" kind="class" language="C++" prot="public">
    <compoundname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</compoundname>
    <basecompoundref refid="classcugraph_1_1detail_1_1graph__base__t" prot="public" virt="non-virtual">cugraph::detail::graph_base_t&lt; vertex_t, edge_t &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename vertex_t</type>
      </param>
      <param>
        <type>typename edge_t</type>
      </param>
      <param>
        <type>bool</type>
        <declname>store_transposed</declname>
        <defname>store_transposed</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>multi_gpu</declname>
        <defname>multi_gpu</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a5b79f5b1b4eb04eea378904272f43ebc" prot="public" static="no">
        <type>vertex_t</type>
        <definition>using cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::vertex_type =  vertex_t</definition>
        <argsstring></argsstring>
        <name>vertex_type</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::vertex_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="79" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ad5173fbfe6761d8a791b60229ba90694" prot="public" static="no">
        <type>edge_t</type>
        <definition>using cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_type =  edge_t</definition>
        <argsstring></argsstring>
        <name>edge_type</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="80" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a8c104d26c97c740e58f1ed1de764308c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::is_storage_transposed</definition>
        <argsstring></argsstring>
        <name>is_storage_transposed</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::is_storage_transposed</qualifiedname>
        <initializer>= store_transposed</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="81" column="25" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a5893d4660ffcf6c7e3e41ab5ac9a259e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::is_multi_gpu</definition>
        <argsstring></argsstring>
        <name>is_multi_gpu</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::is_multi_gpu</qualifiedname>
        <initializer>= multi_gpu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="82" column="25" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a8473e0a119de5125f13ca3777d71fbe9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; rmm::device_uvector&lt; edge_t &gt; &gt;</type>
        <definition>std::vector&lt;rmm::device_uvector&lt;edge_t&gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_offsets_</definition>
        <argsstring></argsstring>
        <name>edge_partition_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_offsets_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="221" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1af820be9efd10d08b8c1f81ed8efa1b3a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt;</type>
        <definition>std::vector&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_indices_</definition>
        <argsstring></argsstring>
        <name>edge_partition_indices_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_indices_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="222" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a8add676c92a0b5915a3c7b544add9462" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_dcs_nzd_vertices_</definition>
        <argsstring></argsstring>
        <name>edge_partition_dcs_nzd_vertices_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_dcs_nzd_vertices_</qualifiedname>
        <initializer>{
    std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="225" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="225" bodyend="226"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a29abd5b09c87402674d93ae3f084a116" prot="private" static="no" mutable="no">
        <type><ref refid="classcugraph_1_1partition__t" kindref="compound">partition_t</ref>&lt; vertex_t &gt;</type>
        <definition>partition_t&lt;vertex_t&gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::partition_</definition>
        <argsstring></argsstring>
        <name>partition_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::partition_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="227" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a37ae954fd78aa2b6facf6841e43db1f5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vertex_t &gt;</type>
        <definition>std::vector&lt;vertex_t&gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_segment_offsets_</definition>
        <argsstring></argsstring>
        <name>edge_partition_segment_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::edge_partition_segment_offsets_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="230" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a571287607e01e91144509d3ea598d3e3" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt; store_transposed, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt;, std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &gt;</type>
        <definition>std::conditional_t&lt;store_transposed, std::optional&lt;rmm::device_uvector&lt;vertex_t&gt; &gt;, std::optional&lt;std::vector&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_srcs_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_srcs_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_srcs_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="238" column="5" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a30dcfbdc6ad8e5bc6a3554dbc051abe9" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt; store_transposed, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt;, std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &gt;</type>
        <definition>std::conditional_t&lt;store_transposed, std::optional&lt;rmm::device_uvector&lt;vertex_t&gt; &gt;, std::optional&lt;std::vector&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_src_chunk_start_offsets_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_src_chunk_start_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_src_chunk_start_offsets_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="242" column="5" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1aaae812d49eb5fb23099f6a467ccb9c7f" prot="private" static="no" mutable="no">
        <type>std::optional&lt; vertex_t &gt;</type>
        <definition>std::optional&lt;vertex_t&gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_src_chunk_size_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_src_chunk_size_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_src_chunk_size_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="243" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ac8daa2df6c0804a24bd9e92691da4e76" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt; store_transposed, std::optional&lt; std::vector&lt; vertex_t &gt; &gt;, std::optional&lt; std::byte &gt; &gt;</type>
        <definition>std::conditional_t&lt;store_transposed, std::optional&lt;std::vector&lt;vertex_t&gt; &gt;, std::optional&lt;std::byte&gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_src_vertex_partition_offsets_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_src_vertex_partition_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_src_vertex_partition_offsets_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="247" column="5" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a871680c6e9658672e326f2c0f5aeeffa" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt; store_transposed, std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt;</type>
        <definition>std::conditional_t&lt;store_transposed, std::optional&lt;std::vector&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt;, std::optional&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dsts_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_dsts_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dsts_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="252" column="5" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1afa5b3a21366c7afd545fc880b84a1ee4" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt; store_transposed, std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt;</type>
        <definition>std::conditional_t&lt;store_transposed, std::optional&lt;std::vector&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt;, std::optional&lt;rmm::device_uvector&lt;vertex_t&gt; &gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dst_chunk_start_offsets_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_dst_chunk_start_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dst_chunk_start_offsets_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="256" column="5" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ade20d899f26aa9cf8de358a1a4556a05" prot="private" static="no" mutable="no">
        <type>std::optional&lt; vertex_t &gt;</type>
        <definition>std::optional&lt;vertex_t&gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dst_chunk_size_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_dst_chunk_size_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dst_chunk_size_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="257" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a10426234295338e5c3fa328e017678f7" prot="private" static="no" mutable="no">
        <type>std::conditional_t&lt;!store_transposed, std::optional&lt; std::vector&lt; vertex_t &gt; &gt;, std::optional&lt; std::byte &gt; &gt;</type>
        <definition>std::conditional_t&lt;!store_transposed, std::optional&lt;std::vector&lt;vertex_t&gt; &gt;, std::optional&lt;std::byte&gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dst_vertex_partition_offsets_</definition>
        <argsstring></argsstring>
        <name>local_sorted_unique_edge_dst_vertex_partition_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::local_sorted_unique_edge_dst_vertex_partition_offsets_</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="261" column="5" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="261" bodyend="261"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a17f1da939bf24c50bb7ab6a9e9080297" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::graph_t</definition>
        <argsstring>(raft::handle_t const &amp;handle)</argsstring>
        <name>graph_t</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::graph_t</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="84" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a63e85dfa0a1a7ec89a2c52de9f6aed2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::graph_t</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::vector&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_partition_offsets, std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &amp;&amp;edge_partition_indices, std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &amp;&amp;edge_partition_dcs_nzd_vertices, graph_meta_t&lt; vertex_t, edge_t, multi_gpu &gt; meta, bool do_expensive_check=false)</argsstring>
        <name>graph_t</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::graph_t</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::vector&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_partition_offsets</declname>
        </param>
        <param>
          <type>std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_partition_indices</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &amp;&amp;</type>
          <declname>edge_partition_dcs_nzd_vertices</declname>
        </param>
        <param>
          <type><ref refid="structcugraph_1_1graph__meta__t" kindref="compound">graph_meta_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>meta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="86" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/graph_impl.cuh" bodystart="384" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ab3bfa91e095f2b5be193bb92aab2348a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>edge_t</type>
        <definition>edge_t cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::number_of_edges</definition>
        <argsstring>() const</argsstring>
        <name>number_of_edges</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::number_of_edges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="94" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ace906da6ab28bb824296788dbb0efc78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;</type>
        <definition>graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="96" column="16" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="96" bodyend="218"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>cugraph::detail::graph_base_t&lt; vertex_t, edge_t &gt;</label>
        <link refid="classcugraph_1_1detail_1_1graph__base__t"/>
      </node>
      <node id="1">
        <label>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</label>
        <link refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>cugraph::detail::graph_base_t&lt; vertex_t, edge_t &gt;</label>
        <link refid="classcugraph_1_1detail_1_1graph__base__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>cugraph::graph_properties_t</label>
        <link refid="structcugraph_1_1graph__properties__t"/>
      </node>
      <node id="1">
        <label>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</label>
        <link refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="76" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="77" bodyend="262"/>
    <listofallmembers>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a8add676c92a0b5915a3c7b544add9462" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>edge_partition_dcs_nzd_vertices_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1af820be9efd10d08b8c1f81ed8efa1b3a" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>edge_partition_indices_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a8473e0a119de5125f13ca3777d71fbe9" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>edge_partition_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a37ae954fd78aa2b6facf6841e43db1f5" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>edge_partition_segment_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ad5173fbfe6761d8a791b60229ba90694" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>edge_type</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a7a9df91ee97968b4ac4a8c6e4e76322d" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>graph_base_t</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a92672d04b55c1567c6caab38ba99f2c8" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>graph_base_t</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a17f1da939bf24c50bb7ab6a9e9080297" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>graph_t</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a63e85dfa0a1a7ec89a2c52de9f6aed2a" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>graph_t</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a5893d4660ffcf6c7e3e41ab5ac9a259e" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>is_multi_gpu</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1aee46ec7b42f817d38b3a32c1aa6ef156" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>is_multigraph</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a8c104d26c97c740e58f1ed1de764308c" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>is_storage_transposed</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1af13d3ba658cdd243dcf228a101858e02" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>is_symmetric</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a9b1a0f1fe4e5e884d9c21763780c3113" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>is_valid_vertex</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a8773c2a6305511e304b94091b3d0e243" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>is_valid_vertex</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ade20d899f26aa9cf8de358a1a4556a05" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_dst_chunk_size_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1afa5b3a21366c7afd545fc880b84a1ee4" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_dst_chunk_start_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a10426234295338e5c3fa328e017678f7" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_dst_vertex_partition_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a871680c6e9658672e326f2c0f5aeeffa" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_dsts_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1aaae812d49eb5fb23099f6a467ccb9c7f" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_src_chunk_size_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a30dcfbdc6ad8e5bc6a3554dbc051abe9" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_src_chunk_start_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ac8daa2df6c0804a24bd9e92691da4e76" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_src_vertex_partition_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a571287607e01e91144509d3ea598d3e3" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>local_sorted_unique_edge_srcs_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ab3bfa91e095f2b5be193bb92aab2348a" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>number_of_edges</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a064e94604dad97e682ac6247f5564c0f" prot="protected" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>number_of_edges_</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1ae8c1be99c2769729aee7ad7bd240f757" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>number_of_vertices</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a29abd5b09c87402674d93ae3f084a116" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>partition_</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a83dfc840fcbc0905e964f97d917045f5" prot="protected" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>properties_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1a5b79f5b1b4eb04eea378904272f43ebc" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>vertex_type</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_01dfcccecd903bfc95ca46b39a2cae56d4_1ace906da6ab28bb824296788dbb0efc78" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt; multi_gpu &gt; &gt;</scope><name>view</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
