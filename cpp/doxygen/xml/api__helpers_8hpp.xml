<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="api__helpers_8hpp" kind="file" language="C++">
    <compoundname>api_helpers.hpp</compoundname>
    <includedby refid="algorithms_8hpp" local="no">algorithms.hpp</includedby>
    <includedby refid="rw__traversals_8hpp" local="no">rw_traversals.hpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>algorithms.hpp</label>
        <link refid="algorithms_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>api_helpers.hpp</label>
        <link refid="api__helpers_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>betweenness_centrality_impl.cuh</label>
        <link refid="betweenness__centrality__impl_8cuh_source"/>
      </node>
      <node id="9">
        <label>eigenvector_centrality_impl.cuh</label>
        <link refid="eigenvector__centrality__impl_8cuh_source"/>
      </node>
      <node id="16">
        <label>katz_centrality_impl.cuh</label>
        <link refid="katz__centrality__impl_8cuh_source"/>
      </node>
      <node id="3">
        <label>approx_weighted_matching_impl.cuh</label>
        <link refid="approx__weighted__matching__impl_8cuh_source"/>
      </node>
      <node id="7">
        <label>ecg_impl.cuh</label>
        <link refid="ecg__impl_8cuh_source"/>
      </node>
      <node id="8">
        <label>egonet_impl.cuh</label>
        <link refid="egonet__impl_8cuh_source"/>
      </node>
      <node id="15">
        <label>k_truss_impl.cuh</label>
        <link refid="k__truss__impl_8cuh_source"/>
      </node>
      <node id="28">
        <label>triangle_count_impl.cuh</label>
        <link refid="triangle__count__impl_8cuh_source"/>
      </node>
      <node id="17">
        <label>mis_impl.cuh</label>
        <link refid="mis__impl_8cuh_source"/>
      </node>
      <node id="29">
        <label>vertex_coloring_impl.cuh</label>
        <link refid="vertex__coloring__impl_8cuh_source"/>
      </node>
      <node id="30">
        <label>weakly_connected_components_impl.cuh</label>
        <link refid="weakly__connected__components__impl_8cuh_source"/>
      </node>
      <node id="6">
        <label>core_number_impl.cuh</label>
        <link refid="core__number__impl_8cuh_source"/>
      </node>
      <node id="13">
        <label>k_core_impl.cuh</label>
        <link refid="k__core__impl_8cuh_source"/>
      </node>
      <node id="11">
        <label>hits_impl.cuh</label>
        <link refid="hits__impl_8cuh_source"/>
      </node>
      <node id="20">
        <label>pagerank_impl.cuh</label>
        <link refid="pagerank__impl_8cuh_source"/>
      </node>
      <node id="12">
        <label>jaccard_impl.cuh</label>
        <link refid="jaccard__impl_8cuh_source"/>
      </node>
      <node id="19">
        <label>overlap_impl.cuh</label>
        <link refid="overlap__impl_8cuh_source"/>
      </node>
      <node id="26">
        <label>sorensen_impl.cuh</label>
        <link refid="sorensen__impl_8cuh_source"/>
      </node>
      <node id="21">
        <label>prepare_next_frontier_impl.cuh</label>
        <link refid="prepare__next__frontier__impl_8cuh_source"/>
      </node>
      <node id="24">
        <label>sampling_utils.hpp</label>
        <link refid="sampling__utils_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>random_walks.cuh</label>
        <link refid="random__walks_8cuh_source"/>
      </node>
      <node id="23">
        <label>random_walks_impl.cuh</label>
        <link refid="random__walks__impl_8cuh_source"/>
      </node>
      <node id="31">
        <label>rw_traversals.hpp</label>
        <link refid="rw__traversals_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>uniform_neighbor_sampling_impl.hpp</label>
        <link refid="uniform__neighbor__sampling__impl_8hpp_source"/>
      </node>
      <node id="5">
        <label>bfs_impl.cuh</label>
        <link refid="bfs__impl_8cuh_source"/>
      </node>
      <node id="10">
        <label>extract_bfs_paths_impl.cuh</label>
        <link refid="extract__bfs__paths__impl_8cuh_source"/>
      </node>
      <node id="14">
        <label>k_hop_nbrs_impl.cuh</label>
        <link refid="k__hop__nbrs__impl_8cuh_source"/>
      </node>
      <node id="18">
        <label>od_shortest_distances_impl.cuh</label>
        <link refid="od__shortest__distances__impl_8cuh_source"/>
      </node>
      <node id="27">
        <label>sssp_impl.cuh</label>
        <link refid="sssp__impl_8cuh_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcugraph_1_1sampling__params__t" prot="public">cugraph::sampling_params_t</innerclass>
    <innernamespace refid="namespacecugraph">cugraph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2022,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Andrei<sp/>Schaffer,<sp/>aschaffer@nvidia.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>collection<sp/>of<sp/>aggregates<sp/>used<sp/>by<sp/>(parts<sp/>of)<sp/>the<sp/>API<sp/>defined<sp/>in<sp/>algorithms.hpp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>aggregates<sp/>get<sp/>propagated<sp/>to<sp/>the<sp/>C-only<sp/>API<sp/>(which<sp/>is<sp/>why<sp/>they&apos;re<sp/>non-template<sp/>aggregates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cugraph<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>sampling_strategy_t<sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{<sp/>UNIFORM<sp/>=<sp/>0,<sp/>BIASED,<sp/>NODE2VEC<sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structcugraph_1_1sampling__params__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1sampling__params__t" kindref="compound">sampling_params_t</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1sampling__params__t" kindref="compound">sampling_params_t</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1sampling__params__t" kindref="compound">sampling_params_t</ref>(sampling_strategy_t<sp/>sampling_type,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_alpha_cache<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sampling_type_(sampling_type),<sp/>p_(p),<sp/>q_(q),<sp/>use_alpha_cache_(use_alpha_cache)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>The<sp/>new<sp/>C<sp/>API<sp/>uses<sp/>the<sp/>above<sp/>constructor,<sp/>this<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>only<sp/>used<sp/>by<sp/>the<sp/>legacy<sp/>python/cython<sp/>calls.<sp/><sp/>It<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removed<sp/>once<sp/>it<sp/>is<sp/>no<sp/>longer<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1sampling__params__t" kindref="compound">sampling_params_t</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sampling_type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_alpha_cache<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sampling_type_(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">sampling_strategy_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sampling_type)),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_(p),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q_(q),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>use_alpha_cache_(use_alpha_cache)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>sampling_strategy_t<sp/>sampling_type_{sampling_strategy_t::UNIFORM};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>node2vec<sp/>specific:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q_;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_alpha_cache_{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cugraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/api_helpers.hpp"/>
  </compounddef>
</doxygen>
