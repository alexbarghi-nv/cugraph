<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structcugraph_1_1detail_1_1random__walker__t" kind="struct" language="C++" prot="public">
    <compoundname>cugraph::detail::random_walker_t</compoundname>
    <templateparamlist>
      <param>
        <type>typename vertex_t</type>
      </param>
      <param>
        <type>typename edge_t</type>
      </param>
      <param>
        <type>typename weight_t</type>
      </param>
      <param>
        <type>typename random_engine_t</type>
        <defval><ref refid="structcugraph_1_1detail_1_1rrandom__gen__t" kindref="compound">rrandom_gen_t</ref>&lt;vertex_t, edge_t&gt;</defval>
      </param>
      <param>
        <type>typename index_t</type>
        <defval>edge_t</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcugraph_1_1detail_1_1random__walker__t_1a4f9767250154c3c89039b5d1873ef0e7" prot="public" static="no">
        <type>typename random_engine_t::seed_type</type>
        <definition>using cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::seed_t =  typename random_engine_t::seed_type</definition>
        <argsstring></argsstring>
        <name>seed_t</name>
        <qualifiedname>cugraph::detail::random_walker_t::seed_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="347" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcugraph_1_1detail_1_1random__walker__t_1a319c105322574dfbb3f3813f046ed2b2" prot="public" static="no">
        <type>typename random_engine_t::real_type</type>
        <definition>using cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::real_t =  typename random_engine_t::real_type</definition>
        <argsstring></argsstring>
        <name>real_t</name>
        <qualifiedname>cugraph::detail::random_walker_t::real_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="348" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcugraph_1_1detail_1_1random__walker__t_1a38fb11d878d169d604a0ed3c1f5e433e" prot="public" static="no">
        <type>random_engine_t</type>
        <definition>using cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::rnd_engine_t =  random_engine_t</definition>
        <argsstring></argsstring>
        <name>rnd_engine_t</name>
        <qualifiedname>cugraph::detail::random_walker_t::rnd_engine_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="349" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="349" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structcugraph_1_1detail_1_1random__walker__t_1a83bb5defbddd9a054aed6d168739e3e4" prot="private" static="no" mutable="no">
        <type>raft::handle_t const  &amp;</type>
        <definition>raft::handle_t const&amp; cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <qualifiedname>cugraph::detail::random_walker_t::handle_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="679" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcugraph_1_1detail_1_1random__walker__t_1ab1f9cca4988dbc3c029ca865c74a686f" prot="private" static="no" mutable="no">
        <type>index_t</type>
        <definition>index_t cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::num_paths_</definition>
        <argsstring></argsstring>
        <name>num_paths_</name>
        <qualifiedname>cugraph::detail::random_walker_t::num_paths_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="680" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcugraph_1_1detail_1_1random__walker__t_1aae41730f8c639ceeb1004b0c233f9080" prot="private" static="no" mutable="no">
        <type>index_t</type>
        <definition>index_t cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::max_depth_</definition>
        <argsstring></argsstring>
        <name>max_depth_</name>
        <qualifiedname>cugraph::detail::random_walker_t::max_depth_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="681" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcugraph_1_1detail_1_1random__walker__t_1a02e4e7fc91b52053de0a5c7fd18b9018" prot="private" static="no" mutable="no">
        <type>vertex_t const</type>
        <definition>vertex_t const cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::vertex_padding_value_</definition>
        <argsstring></argsstring>
        <name>vertex_padding_value_</name>
        <qualifiedname>cugraph::detail::random_walker_t::vertex_padding_value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="682" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcugraph_1_1detail_1_1random__walker__t_1a08e492cd38a9a9ac996deda66e6ba2e6" prot="private" static="no" mutable="no">
        <type>weight_t const</type>
        <definition>weight_t const cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::weight_padding_value_</definition>
        <argsstring></argsstring>
        <name>weight_padding_value_</name>
        <qualifiedname>cugraph::detail::random_walker_t::weight_padding_value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="683" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="683" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a7d59ec5c7f94f63a0a4074383997d1d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::random_walker_t</definition>
        <argsstring>(raft::handle_t const &amp;handle, vertex_t num_vertices, index_t num_paths, index_t max_depth, vertex_t v_padding_val=0, weight_t w_padding_val=0)</argsstring>
        <name>random_walker_t</name>
        <qualifiedname>cugraph::detail::random_walker_t::random_walker_t</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>num_vertices</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>num_paths</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>max_depth</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>v_padding_val</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>weight_t</type>
          <declname>w_padding_val</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="351" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="351" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1ace4ac6ca292da8bb6beeb8201d2d7482" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::start</definition>
        <argsstring>(original::device_const_vector_view&lt; vertex_t, index_t &gt; &amp;d_src_init_v, original::device_vec_t&lt; vertex_t &gt; &amp;d_paths_v_set, original::device_vec_t&lt; index_t &gt; &amp;d_sizes) const</argsstring>
        <name>start</name>
        <qualifiedname>cugraph::detail::random_walker_t::start</qualifiedname>
        <param>
          <type><ref refid="structcugraph_1_1detail_1_1original_1_1device__const__vector__view" kindref="compound">original::device_const_vector_view</ref>&lt; vertex_t, index_t &gt; &amp;</type>
          <declname>d_src_init_v</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_paths_v_set</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="368" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="368" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a404f00bc64665815510e2939c59eb07f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::start</definition>
        <argsstring>(original::device_vec_t&lt; vertex_t &gt; const &amp;d_start, original::device_vec_t&lt; vertex_t &gt; &amp;d_paths_v_set, original::device_vec_t&lt; index_t &gt; &amp;d_sizes) const</argsstring>
        <name>start</name>
        <qualifiedname>cugraph::detail::random_walker_t::start</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; const &amp;</type>
          <declname>d_start</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_paths_v_set</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="400" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="400" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1ab3c2c9105aa1f7b5dc40cda407aea6fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename selector_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::step</definition>
        <argsstring>(graph_view_t&lt; vertex_t, edge_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, selector_t const &amp;selector, seed_t seed, original::device_vec_t&lt; vertex_t &gt; &amp;d_coalesced_v, original::device_vec_t&lt; weight_t &gt; &amp;d_coalesced_w, original::device_vec_t&lt; index_t &gt; &amp;d_paths_sz, original::device_vec_t&lt; edge_t &gt; &amp;d_crt_out_degs, original::device_vec_t&lt; real_t &gt; &amp;d_random, original::device_vec_t&lt; vertex_t &gt; &amp;d_col_indx) const</argsstring>
        <name>step</name>
        <qualifiedname>cugraph::detail::random_walker_t::step</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>selector_t const &amp;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>seed_t</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_coalesced_v</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; weight_t &gt; &amp;</type>
          <declname>d_coalesced_w</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; &amp;</type>
          <declname>d_paths_sz</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; edge_t &gt; &amp;</type>
          <declname>d_crt_out_degs</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; real_t &gt; &amp;</type>
          <declname>d_random</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_col_indx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="418" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="418" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a64508ea4481ae509d8e4da34f9d5a01a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::all_paths_stopped</definition>
        <argsstring>(original::device_vec_t&lt; edge_t &gt; const &amp;d_crt_out_degs) const</argsstring>
        <name>all_paths_stopped</name>
        <qualifiedname>cugraph::detail::random_walker_t::all_paths_stopped</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; edge_t &gt; const &amp;</type>
          <declname>d_crt_out_degs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="473" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="473" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a646b0a6bf525219eee72e0616703ee0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::stop</definition>
        <argsstring>(original::device_vec_t&lt; vertex_t &gt; &amp;d_coalesced_v, original::device_vec_t&lt; weight_t &gt; &amp;d_coalesced_w, original::device_vec_t&lt; index_t &gt; const &amp;d_sizes) const</argsstring>
        <name>stop</name>
        <qualifiedname>cugraph::detail::random_walker_t::stop</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_coalesced_v</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; weight_t &gt; &amp;</type>
          <declname>d_coalesced_w</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; const &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="486" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="486" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a7116c8df964b1285aeb48aa3378763f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename src_vec_t</type>
            <defval>vertex_t</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::gather_from_coalesced</definition>
        <argsstring>(original::device_vec_t&lt; vertex_t &gt; const &amp;d_coalesced, original::device_vec_t&lt; src_vec_t &gt; const &amp;d_src, original::device_vec_t&lt; index_t &gt; const &amp;d_sizes, original::device_vec_t&lt; src_vec_t &gt; &amp;d_result, index_t stride, index_t nelems) const</argsstring>
        <name>gather_from_coalesced</name>
        <qualifiedname>cugraph::detail::random_walker_t::gather_from_coalesced</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; const &amp;</type>
          <declname>d_coalesced</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; src_vec_t &gt; const &amp;</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; const &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; src_vec_t &gt; &amp;</type>
          <declname>d_result</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>nelems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="531" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="531" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a81e6ebf2f3c0fe6656eb97c6605d5903" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename src_vec_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::scatter_to_coalesced</definition>
        <argsstring>(original::device_vec_t&lt; src_vec_t &gt; const &amp;d_src, original::device_vec_t&lt; src_vec_t &gt; &amp;d_coalesced, original::device_vec_t&lt; edge_t &gt; const &amp;d_crt_out_degs, original::device_vec_t&lt; index_t &gt; const &amp;d_sizes, index_t stride, index_t nelems, index_t adjust=0) const</argsstring>
        <name>scatter_to_coalesced</name>
        <qualifiedname>cugraph::detail::random_walker_t::scatter_to_coalesced</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; src_vec_t &gt; const &amp;</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; src_vec_t &gt; &amp;</type>
          <declname>d_coalesced</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; edge_t &gt; const &amp;</type>
          <declname>d_crt_out_degs</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; const &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>nelems</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>adjust</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="574" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="574" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1ac18a238a4c1ed580b5d86ec212813d2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::scatter_vertices</definition>
        <argsstring>(original::device_vec_t&lt; vertex_t &gt; const &amp;d_src, original::device_vec_t&lt; vertex_t &gt; &amp;d_coalesced, original::device_vec_t&lt; edge_t &gt; const &amp;d_crt_out_degs, original::device_vec_t&lt; index_t &gt; const &amp;d_sizes) const</argsstring>
        <name>scatter_vertices</name>
        <qualifiedname>cugraph::detail::random_walker_t::scatter_vertices</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; const &amp;</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_coalesced</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; edge_t &gt; const &amp;</type>
          <declname>d_crt_out_degs</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; const &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="618" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="618" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1af677ee18147f8ff450ee25435ff8d3bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::scatter_weights</definition>
        <argsstring>(original::device_vec_t&lt; weight_t &gt; const &amp;d_src, original::device_vec_t&lt; weight_t &gt; &amp;d_coalesced, original::device_vec_t&lt; edge_t &gt; const &amp;d_crt_out_degs, original::device_vec_t&lt; index_t &gt; const &amp;d_sizes) const</argsstring>
        <name>scatter_weights</name>
        <qualifiedname>cugraph::detail::random_walker_t::scatter_weights</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; weight_t &gt; const &amp;</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; weight_t &gt; &amp;</type>
          <declname>d_coalesced</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; edge_t &gt; const &amp;</type>
          <declname>d_crt_out_degs</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; const &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="626" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="626" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a255586024462de2dc35d5ea9a2905954" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::update_path_sizes</definition>
        <argsstring>(original::device_vec_t&lt; edge_t &gt; const &amp;d_crt_out_degs, original::device_vec_t&lt; index_t &gt; &amp;d_sizes) const</argsstring>
        <name>update_path_sizes</name>
        <qualifiedname>cugraph::detail::random_walker_t::update_path_sizes</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; edge_t &gt; const &amp;</type>
          <declname>d_crt_out_degs</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; index_t &gt; &amp;</type>
          <declname>d_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="639" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="639" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a7d4b01f2e310dd5c0e7373cef4f6148b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>original::device_vec_t&lt; edge_t &gt;</type>
        <definition>original::device_vec_t&lt; edge_t &gt; cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::get_out_degs</definition>
        <argsstring>(graph_view_t&lt; vertex_t, edge_t, false, false &gt; const &amp;graph_view) const</argsstring>
        <name>get_out_degs</name>
        <qualifiedname>cugraph::detail::random_walker_t::get_out_degs</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="652" column="26" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="652" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a22db3152a1d0b89f5a07c30fbd17b3b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vertex_t</type>
        <definition>vertex_t cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::get_vertex_padding_value</definition>
        <argsstring>(void) const</argsstring>
        <name>get_vertex_padding_value</name>
        <qualifiedname>cugraph::detail::random_walker_t::get_vertex_padding_value</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="658" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="658" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1ab931e1c652d23ff0d90a1258f6adcd83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>weight_t</type>
        <definition>weight_t cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::get_weight_padding_value</definition>
        <argsstring>(void) const</argsstring>
        <name>get_weight_padding_value</name>
        <qualifiedname>cugraph::detail::random_walker_t::get_weight_padding_value</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="660" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="660" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1a6a65ea2fba7fd7c15a66da9efba57f03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::init_padding</definition>
        <argsstring>(original::device_vec_t&lt; vertex_t &gt; &amp;d_coalesced_v, original::device_vec_t&lt; weight_t &gt; &amp;d_coalesced_w) const</argsstring>
        <name>init_padding</name>
        <qualifiedname>cugraph::detail::random_walker_t::init_padding</qualifiedname>
        <param>
          <type>original::device_vec_t&lt; vertex_t &gt; &amp;</type>
          <declname>d_coalesced_v</declname>
        </param>
        <param>
          <type>original::device_vec_t&lt; weight_t &gt; &amp;</type>
          <declname>d_coalesced_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="662" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="662" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="structcugraph_1_1detail_1_1random__walker__t_1ae1dd38145e1c58fe46742288db1d4790" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) cugraph::detail::random_walker_t&lt; vertex_t, edge_t, weight_t, random_engine_t, index_t &gt;::get_handle</definition>
        <argsstring>(void) const</argsstring>
        <name>get_handle</name>
        <qualifiedname>cugraph::detail::random_walker_t::get_handle</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="676" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="676" bodyend="676"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class abstracting the RW initialization, stepping, and stopping functionality The outline of the algorithm is as follows: </para>
    </briefdescription>
    <detaileddescription>
<para>(1) vertex sets are coalesced into d_coalesced_v, weight sets are coalesced into d_coalesced_w; i.e., the 2 coalesced vectors are allocated to num_paths * max_depth, and num_paths * (max_depth -1), respectively (since each path has a number of edges equal one less than the number of vertices); d_coalesced_v is initialized for each i*max_depth entry (i=0,,,,num_paths-1) to the corresponding starting vertices; (2) d_sizes maintains the current size is for each path; Note that a path may end prematurely if it reaches a sink vertex; (3) d_crt_out_degs maintains the out-degree of each of the latest vertices in the path; i.e., if N(v) := set of destination vertices from v, then this vector stores |N(v)| for last v in each path; i.e., d_crt_out_degs[i] = out-degree( d_coalesced_v[i*max_depth + d_sizes[i]-1] ), for i in {0,..., num_paths-1}; (4) a set of num_paths floating point numbers between [0,1] are generated at each step; then they get translated into <emphasis>indices</emphasis> k in {0,...d_crt_out_degs[i]-1}; (5) the next vertex v is then picked as the k-th out-neighbor: next(v) = N(v)[k]; (6) d_sizes are incremented accordingly; i.e., for those paths whose corresponding last vertex has out-degree &gt; 0; (7) then next(v) and corresponding weight of (v, next(v)) are stored at appropriate location in their corresponding coalesced vectors; (8) the client of this class (the random_walks() function) then repeats this process max_depth times or until all paths have reached sinks; i.e., d_crt_out_degs = {0, 0,...,0}, whichever comes first; (9) in the end some post-processing is done (stop()) to remove unused entries from the 2 coalesced vectors; (10) the triplet made of the 2 coalesced vectors and d_sizes is then returned; </para>
    </detaileddescription>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="346" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="346" bodyend="684"/>
    <listofallmembers>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a64508ea4481ae509d8e4da34f9d5a01a" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>all_paths_stopped</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a7116c8df964b1285aeb48aa3378763f7" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>gather_from_coalesced</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1ae1dd38145e1c58fe46742288db1d4790" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>get_handle</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a7d4b01f2e310dd5c0e7373cef4f6148b" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>get_out_degs</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a22db3152a1d0b89f5a07c30fbd17b3b7" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>get_vertex_padding_value</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1ab931e1c652d23ff0d90a1258f6adcd83" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>get_weight_padding_value</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a83bb5defbddd9a054aed6d168739e3e4" prot="private" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>handle_</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a6a65ea2fba7fd7c15a66da9efba57f03" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>init_padding</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1aae41730f8c639ceeb1004b0c233f9080" prot="private" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>max_depth_</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1ab1f9cca4988dbc3c029ca865c74a686f" prot="private" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>num_paths_</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a7d59ec5c7f94f63a0a4074383997d1d8" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>random_walker_t</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a319c105322574dfbb3f3813f046ed2b2" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>real_t</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a38fb11d878d169d604a0ed3c1f5e433e" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>rnd_engine_t</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a81e6ebf2f3c0fe6656eb97c6605d5903" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>scatter_to_coalesced</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1ac18a238a4c1ed580b5d86ec212813d2f" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>scatter_vertices</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1af677ee18147f8ff450ee25435ff8d3bc" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>scatter_weights</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a4f9767250154c3c89039b5d1873ef0e7" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>seed_t</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1ace4ac6ca292da8bb6beeb8201d2d7482" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>start</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a404f00bc64665815510e2939c59eb07f" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>start</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1ab3c2c9105aa1f7b5dc40cda407aea6fe" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>step</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a646b0a6bf525219eee72e0616703ee0b" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>stop</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a255586024462de2dc35d5ea9a2905954" prot="public" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>update_path_sizes</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a02e4e7fc91b52053de0a5c7fd18b9018" prot="private" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>vertex_padding_value_</name></member>
      <member refid="structcugraph_1_1detail_1_1random__walker__t_1a08e492cd38a9a9ac996deda66e6ba2e6" prot="private" virt="non-virtual"><scope>cugraph::detail::random_walker_t</scope><name>weight_padding_value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
