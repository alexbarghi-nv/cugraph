<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="namespacecugraph_1_1subgraph" kind="namespace" language="C++">
    <compoundname>cugraph::subgraph</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="algorithms_8hpp_1a0114622cb211b3f0c091f3ff035977a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VT</type>
          </param>
          <param>
            <type>typename ET</type>
          </param>
          <param>
            <type>typename WT</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="classcugraph_1_1legacy_1_1GraphCOO" kindref="compound">legacy::GraphCOO</ref>&lt; VT, ET, WT &gt; &gt;</type>
        <definition>std::unique_ptr&lt; legacy::GraphCOO&lt; VT, ET, WT &gt; &gt; cugraph::subgraph::extract_subgraph_vertex</definition>
        <argsstring>(legacy::GraphCOOView&lt; VT, ET, WT &gt; const &amp;graph, VT const *vertices, VT num_vertices)</argsstring>
        <name>extract_subgraph_vertex</name>
        <qualifiedname>cugraph::subgraph::extract_subgraph_vertex</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCOOView" kindref="compound">legacy::GraphCOOView</ref>&lt; VT, ET, WT &gt; const &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>VT const *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>VT</type>
          <declname>num_vertices</declname>
        </param>
        <briefdescription>
<para>Extract subgraph by vertices. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will identify all edges that connect pairs of vertices that are both contained in the vertices list and return a COO containing these edges.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structcugraph_1_1logic__error" kindref="compound">cugraph::logic_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when an error occurs.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VT</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Supported value : int (signed, 32-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ET</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Supported value : int (signed, 32-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WT</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Supported values : float or double.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>input graph object (COO) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>device pointer to an array of vertex ids </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertices in the array vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>a graph in COO format containing the edges in the subgraph </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/algorithms.hpp" line="859" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/algorithms.hpp" declline="859" declcolumn="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/algorithms.hpp" line="837" column="1"/>
  </compounddef>
</doxygen>
