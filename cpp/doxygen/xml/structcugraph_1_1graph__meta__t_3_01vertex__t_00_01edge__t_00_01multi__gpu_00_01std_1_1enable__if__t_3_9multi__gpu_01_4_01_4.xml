<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename vertex_t</type>
      </param>
      <param>
        <type>typename edge_t</type>
      </param>
      <param>
        <type>bool</type>
        <declname>multi_gpu</declname>
        <defname>multi_gpu</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4_1aecbebc43a9ee56dccd141f3a95be538f" prot="public" static="no" mutable="no">
        <type>vertex_t</type>
        <definition>vertex_t cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::number_of_vertices</definition>
        <argsstring></argsstring>
        <name>number_of_vertices</name>
        <qualifiedname>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::number_of_vertices</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="59" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="variable" id="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4_1a6b155f22443d2a89a6172daa986cb4cc" prot="public" static="no" mutable="no">
        <type><ref refid="structcugraph_1_1graph__properties__t" kindref="compound">graph_properties_t</ref></type>
        <definition>graph_properties_t cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::properties</definition>
        <argsstring></argsstring>
        <name>properties</name>
        <qualifiedname>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::properties</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="60" column="22" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="variable" id="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4_1ad4d03e3f5245dbf93515cd5e916048b9" prot="public" static="no" mutable="no">
        <type>std::optional&lt; std::vector&lt; vertex_t &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;vertex_t&gt; &gt; cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::segment_offsets</definition>
        <argsstring></argsstring>
        <name>segment_offsets</name>
        <qualifiedname>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::segment_offsets</qualifiedname>
        <initializer>{std::nullopt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="63" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</label>
        <link refid="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4"/>
        <childnode refid="2" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>cugraph::graph_properties_t</label>
        <link refid="structcugraph_1_1graph__properties__t"/>
      </node>
    </collaborationgraph>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="58" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="58" bodyend="64"/>
    <listofallmembers>
      <member refid="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4_1aecbebc43a9ee56dccd141f3a95be538f" prot="public" virt="non-virtual"><scope>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>number_of_vertices</name></member>
      <member refid="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4_1a6b155f22443d2a89a6172daa986cb4cc" prot="public" virt="non-virtual"><scope>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>properties</name></member>
      <member refid="structcugraph_1_1graph__meta__t_3_01vertex__t_00_01edge__t_00_01multi__gpu_00_01std_1_1enable__if__t_3_9multi__gpu_01_4_01_4_1ad4d03e3f5245dbf93515cd5e916048b9" prot="public" virt="non-virtual"><scope>cugraph::graph_meta_t&lt; vertex_t, edge_t, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>segment_offsets</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
