<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="reduce__op_8cuh" kind="file" language="C++">
    <compoundname>reduce_op.cuh</compoundname>
    <includes refid="property__op__utils_8cuh" local="yes">prims/property_op_utils.cuh</includes>
    <includes refid="edge__partition__endpoint__property__device__view_8cuh" local="no">cugraph/edge_partition_endpoint_property_device_view.cuh</includes>
    <includes refid="atomic__ops_8cuh" local="no">cugraph/utilities/atomic_ops.cuh</includes>
    <includes refid="thrust__tuple__utils_8hpp" local="no">cugraph/utilities/thrust_tuple_utils.hpp</includes>
    <includes local="no">raft/core/comms.hpp</includes>
    <includes local="no">thrust/functional.h</includes>
    <includes local="no">utility</includes>
    <includedby refid="approx__weighted__matching__impl_8cuh" local="yes">approx_weighted_matching_impl.cuh</includedby>
    <includedby refid="bfs__impl_8cuh" local="yes">bfs_impl.cuh</includedby>
    <includedby refid="common__methods_8cuh" local="yes">common_methods.cuh</includedby>
    <includedby refid="eigenvector__centrality__impl_8cuh" local="yes">eigenvector_centrality_impl.cuh</includedby>
    <includedby refid="graph__view__impl_8cuh" local="yes">graph_view_impl.cuh</includedby>
    <includedby refid="graph__weight__utils__impl_8cuh" local="yes">graph_weight_utils_impl.cuh</includedby>
    <includedby refid="hits__impl_8cuh" local="yes">hits_impl.cuh</includedby>
    <includedby refid="k__hop__nbrs__impl_8cuh" local="yes">k_hop_nbrs_impl.cuh</includedby>
    <includedby refid="katz__centrality__impl_8cuh" local="yes">katz_centrality_impl.cuh</includedby>
    <includedby refid="od__shortest__distances__impl_8cuh" local="yes">od_shortest_distances_impl.cuh</includedby>
    <includedby refid="pagerank__impl_8cuh" local="yes">pagerank_impl.cuh</includedby>
    <includedby refid="per__v__transform__reduce__incoming__outgoing__e_8cuh" local="yes">per_v_transform_reduce_incoming_outgoing_e.cuh</includedby>
    <includedby refid="reduce__v_8cuh" local="yes">reduce_v.cuh</includedby>
    <includedby refid="refine__impl_8cuh" local="yes">refine_impl.cuh</includedby>
    <includedby refid="sssp__impl_8cuh" local="yes">sssp_impl.cuh</includedby>
    <includedby refid="transform__reduce__v__frontier__outgoing__e__by__dst_8cuh" local="yes">transform_reduce_v_frontier_outgoing_e_by_dst.cuh</includedby>
    <incdepgraph>
      <node id="20">
        <label>cugraph/edge_partition_endpoint_property_device_view.cuh</label>
        <link refid="edge__partition__endpoint__property__device__view_8cuh_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cugraph/edge_src_dst_property.hpp</label>
        <link refid="edge__src__dst__property_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cugraph/utilities/atomic_ops.cuh</label>
        <link refid="atomic__ops_8cuh_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cugraph/utilities/dataframe_buffer.hpp</label>
        <link refid="dataframe__buffer_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>cugraph/utilities/device_functors.cuh</label>
        <link refid="device__functors_8cuh_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cugraph/utilities/error.hpp</label>
        <link refid="include_2cugraph_2utilities_2error_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cugraph/utilities/packed_bool_utils.hpp</label>
        <link refid="packed__bool__utils_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cugraph/utilities/thrust_tuple_utils.hpp</label>
        <link refid="thrust__tuple__utils_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>prims/property_op_utils.cuh</label>
        <link refid="property__op__utils_8cuh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reduce_op.cuh</label>
        <link refid="reduce__op_8cuh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>array</label>
      </node>
      <node id="33">
        <label>cstddef</label>
      </node>
      <node id="14">
        <label>cub/cub.cuh</label>
      </node>
      <node id="30">
        <label>optional</label>
      </node>
      <node id="11">
        <label>raft/core/comms.hpp</label>
      </node>
      <node id="12">
        <label>raft/core/device_span.hpp</label>
      </node>
      <node id="4">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="23">
        <label>raft/core/handle.hpp</label>
      </node>
      <node id="28">
        <label>raft/core/host_span.hpp</label>
      </node>
      <node id="13">
        <label>raft/util/device_atomics.cuh</label>
      </node>
      <node id="24">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="6">
        <label>rmm/device_uvector.hpp</label>
      </node>
      <node id="34">
        <label>thrust/binary_search.h</label>
      </node>
      <node id="15">
        <label>thrust/detail/type_traits/iterator/is_discard_iterator.h</label>
      </node>
      <node id="35">
        <label>thrust/distance.h</label>
      </node>
      <node id="36">
        <label>thrust/execution_policy.h</label>
      </node>
      <node id="37">
        <label>thrust/fill.h</label>
      </node>
      <node id="16">
        <label>thrust/functional.h</label>
      </node>
      <node id="17">
        <label>thrust/iterator/detail/any_assign.h</label>
      </node>
      <node id="18">
        <label>thrust/iterator/discard_iterator.h</label>
      </node>
      <node id="7">
        <label>thrust/iterator/iterator_traits.h</label>
      </node>
      <node id="25">
        <label>thrust/iterator/zip_iterator.h</label>
      </node>
      <node id="19">
        <label>thrust/memory.h</label>
      </node>
      <node id="29">
        <label>thrust/optional.h</label>
      </node>
      <node id="8">
        <label>thrust/tuple.h</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="27">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>betweenness_centrality_impl.cuh</label>
        <link refid="betweenness__centrality__impl_8cuh_source"/>
      </node>
      <node id="5">
        <label>eigenvector_centrality_impl.cuh</label>
        <link refid="eigenvector__centrality__impl_8cuh_source"/>
      </node>
      <node id="10">
        <label>katz_centrality_impl.cuh</label>
        <link refid="katz__centrality__impl_8cuh_source"/>
      </node>
      <node id="2">
        <label>approx_weighted_matching_impl.cuh</label>
        <link refid="approx__weighted__matching__impl_8cuh_source"/>
      </node>
      <node id="4">
        <label>common_methods.cuh</label>
        <link refid="common__methods_8cuh_source"/>
      </node>
      <node id="15">
        <label>maximal_independent_moves.cuh</label>
        <link refid="maximal__independent__moves_8cuh_source"/>
      </node>
      <node id="17">
        <label>refine_impl.cuh</label>
        <link refid="refine__impl_8cuh_source"/>
      </node>
      <node id="16">
        <label>mis_impl.cuh</label>
        <link refid="mis__impl_8cuh_source"/>
      </node>
      <node id="27">
        <label>weakly_connected_components_impl.cuh</label>
        <link refid="weakly__connected__components__impl_8cuh_source"/>
      </node>
      <node id="23">
        <label>core_number_impl.cuh</label>
        <link refid="core__number__impl_8cuh_source"/>
      </node>
      <node id="8">
        <label>hits_impl.cuh</label>
        <link refid="hits__impl_8cuh_source"/>
      </node>
      <node id="12">
        <label>pagerank_impl.cuh</label>
        <link refid="pagerank__impl_8cuh_source"/>
      </node>
      <node id="19">
        <label>jaccard_impl.cuh</label>
        <link refid="jaccard__impl_8cuh_source"/>
      </node>
      <node id="20">
        <label>overlap_impl.cuh</label>
        <link refid="overlap__impl_8cuh_source"/>
      </node>
      <node id="18">
        <label>similarity_impl.cuh</label>
        <link refid="similarity__impl_8cuh_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sorensen_impl.cuh</label>
        <link refid="sorensen__impl_8cuh_source"/>
      </node>
      <node id="13">
        <label>per_v_transform_reduce_incoming_outgoing_e.cuh</label>
        <link refid="per__v__transform__reduce__incoming__outgoing__e_8cuh_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reduce_op.cuh</label>
        <link refid="reduce__op_8cuh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>reduce_v.cuh</label>
        <link refid="reduce__v_8cuh_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>transform_reduce_v.cuh</label>
        <link refid="transform__reduce__v_8cuh_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>transform_reduce_v_frontier_outgoing_e_by_dst.cuh</label>
        <link refid="transform__reduce__v__frontier__outgoing__e__by__dst_8cuh_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>graph_view_impl.cuh</label>
        <link refid="graph__view__impl_8cuh_source"/>
      </node>
      <node id="7">
        <label>graph_weight_utils_impl.cuh</label>
        <link refid="graph__weight__utils__impl_8cuh_source"/>
      </node>
      <node id="3">
        <label>bfs_impl.cuh</label>
        <link refid="bfs__impl_8cuh_source"/>
      </node>
      <node id="9">
        <label>k_hop_nbrs_impl.cuh</label>
        <link refid="k__hop__nbrs__impl_8cuh_source"/>
      </node>
      <node id="11">
        <label>od_shortest_distances_impl.cuh</label>
        <link refid="od__shortest__distances__impl_8cuh_source"/>
      </node>
      <node id="25">
        <label>sssp_impl.cuh</label>
        <link refid="sssp__impl_8cuh_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcugraph_1_1reduce__op_1_1null" prot="public">cugraph::reduce_op::null</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1any" prot="public">cugraph::reduce_op::any</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1minimum_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is__arithmetic__v_3_01T_01_4_01_4_01_4" prot="public">cugraph::reduce_op::minimum&lt; T, std::enable_if_t&lt; std::is_arithmetic_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1minimum_3_01T_00_01std_1_1enable__if__t_3_01cugraph_1_1is__thrust53c2fecf2f74c49e53877e052bbec36c" prot="public">cugraph::reduce_op::minimum&lt; T, std::enable_if_t&lt; cugraph::is_thrust_tuple_of_arithmetic&lt; T &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1elementwise__minimum" prot="public">cugraph::reduce_op::elementwise_minimum</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1maximum_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is__arithmetic__v_3_01T_01_4_01_4_01_4" prot="public">cugraph::reduce_op::maximum&lt; T, std::enable_if_t&lt; std::is_arithmetic_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1maximum_3_01T_00_01std_1_1enable__if__t_3_01cugraph_1_1is__thrust3e0d24f20df9ee64d3ec81052623bfdd" prot="public">cugraph::reduce_op::maximum&lt; T, std::enable_if_t&lt; cugraph::is_thrust_tuple_of_arithmetic&lt; T &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1elementwise__maximum" prot="public">cugraph::reduce_op::elementwise_maximum</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1plus" prot="public">cugraph::reduce_op::plus</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op" prot="public">cugraph::reduce_op::has_compatible_raft_comms_op</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op_3_01ReduceOp_00_01std_1_1remove_1f273463ade79596110d5d9e3ecdfc08" prot="public">cugraph::reduce_op::has_compatible_raft_comms_op&lt; ReduceOp, std::remove_cv_t&lt; decltype(ReduceOp::compatible_raft_comms_op)&gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1has__identity__element" prot="public">cugraph::reduce_op::has_identity_element</innerclass>
    <innerclass refid="structcugraph_1_1reduce__op_1_1has__identity__element_3_01ReduceOp_00_01std_1_1remove__cv__t_3_0f5dcd80042ba5c73346538204e0c5680" prot="public">cugraph::reduce_op::has_identity_element&lt; ReduceOp, std::remove_cv_t&lt; decltype(ReduceOp::identity_element)&gt; &gt;</innerclass>
    <innernamespace refid="namespacecugraph">cugraph</innernamespace>
    <innernamespace refid="namespacecugraph_1_1reduce__op">cugraph::reduce_op</innernamespace>
    <innernamespace refid="namespacecugraph_1_1reduce__op_1_1detail">cugraph::reduce_op::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prims/property_op_utils.cuh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/edge_partition_endpoint_property_device_view.cuh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/utilities/atomic_ops.cuh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/utilities/thrust_tuple_utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/core/comms.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/functional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cugraph<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">reduce_op<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">__host__<sp/>__device__<sp/>std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>T&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">elementwise_thrust_min(T<sp/>lhs,<sp/>T<sp/>rhs,<sp/>std::index_sequence&lt;Is...&gt;)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thrust::make_tuple(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>(thrust::get&lt;Is&gt;(lhs)<sp/>&lt;<sp/>thrust::get&lt;Is&gt;(rhs)<sp/>?<sp/>thrust::get&lt;Is&gt;(lhs)<sp/>:<sp/>thrust::get&lt;Is&gt;(rhs))...);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">__host__<sp/>__device__<sp/>std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>T&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">elementwise_thrust_max(T<sp/>lhs,<sp/>T<sp/>rhs,<sp/>std::index_sequence&lt;Is...&gt;)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thrust::make_tuple(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>(thrust::get&lt;Is&gt;(lhs)<sp/>&lt;<sp/>thrust::get&lt;Is&gt;(rhs)<sp/>?<sp/>thrust::get&lt;Is&gt;(rhs)<sp/>:<sp/>thrust::get&lt;Is&gt;(lhs))...);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Guidance<sp/>on<sp/>writing<sp/>a<sp/>custom<sp/>reduction<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>It<sp/>is<sp/>required<sp/>to<sp/>add<sp/>an<sp/>&quot;using<sp/>value_type<sp/>=<sp/>type_of_the_reduced_values&quot;<sp/>statement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>A<sp/>custom<sp/>reduction<sp/>operator<sp/>MUST<sp/>be<sp/>side-effect<sp/>free.<sp/>We<sp/>use<sp/>thrust::reduce<sp/>internally<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implement<sp/>reductions<sp/>in<sp/>multiple<sp/>primitives.<sp/>The<sp/>current<sp/>(version<sp/>1.16)<sp/><sp/>implementation<sp/>of<sp/>thrust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reduce<sp/>rounds<sp/>up<sp/>the<sp/>number<sp/>of<sp/>invocations<sp/>based<sp/>on<sp/>the<sp/>CUDA<sp/>block<sp/>size<sp/>and<sp/>discards<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outside<sp/>the<sp/>valid<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>If<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>reduction<sp/>operator<sp/>is<sp/>solely<sp/>determined<sp/>by<sp/>input<sp/>argument<sp/>values,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>the<sp/>pure<sp/>function<sp/>static<sp/>member<sp/>variable<sp/>(i.e.<sp/>&quot;static<sp/>constexpr<sp/>pure_function<sp/>=<sp/>true;&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>enable<sp/>better<sp/>performance<sp/>in<sp/>multi-GPU<sp/>as<sp/>this<sp/>flag<sp/>indicates<sp/>that<sp/>the<sp/>reduction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>can<sp/>be<sp/>executed<sp/>in<sp/>any<sp/>GPU<sp/>(this<sp/>sometimes<sp/>enable<sp/>hierarchical<sp/>reduction<sp/>reducing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>communication<sp/>volume<sp/>&amp;<sp/>peak<sp/>memory<sp/>usage).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.<sp/>For<sp/>simple<sp/>reduction<sp/>operations<sp/>with<sp/>a<sp/>matching<sp/>raft::comms::op_t<sp/>value,<sp/>specify<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compatible_raft_comms_op<sp/>static<sp/>member<sp/>variable<sp/>(e.g.<sp/>&quot;static<sp/>constexpr<sp/>raft::comms::op_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compatible_raft_comms_op<sp/>=<sp/>raft::comms::op_t::MIN&quot;).<sp/>This<sp/>often<sp/>enables<sp/>direct<sp/>use<sp/>of<sp/>highly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>optimized<sp/>the<sp/>NCCL<sp/>reduce<sp/>functions<sp/>instead<sp/>of<sp/>relying<sp/>on<sp/>a<sp/>less<sp/>efficient<sp/>gather<sp/>based<sp/>reduction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mechanism<sp/>(we<sp/>may<sp/>implement<sp/>a<sp/>basic<sp/>tree-based<sp/>reduction<sp/>mechanism<sp/>in<sp/>the<sp/>future<sp/>to<sp/>improve<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>efficiency<sp/>but<sp/>this<sp/>is<sp/>still<sp/>expected<sp/>to<sp/>be<sp/>slower<sp/>than<sp/>the<sp/>NCCL<sp/>reduction).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.<sp/>Defining<sp/>the<sp/>identity_element<sp/>static<sp/>member<sp/>variable<sp/>(e.g.<sp/>&quot;inline<sp/>static<sp/>T<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>identity_element<sp/>=<sp/>T{}&quot;)<sp/>potentially<sp/>improves<sp/>performance<sp/>as<sp/>well<sp/>by<sp/>avoiding<sp/>special<sp/>treatments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>tricky<sp/>corner<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>See<sp/>the<sp/>pre-defined<sp/>reduction<sp/>operators<sp/>below<sp/>as<sp/>examples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>there<sp/>is<sp/>no<sp/>payload<sp/>to<sp/>reduce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structcugraph_1_1reduce__op_1_1null" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1null" kindref="compound">null</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/>=<sp/>void;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>any<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments,<sp/>T<sp/>should<sp/>be<sp/>an<sp/>arithmetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type<sp/>or<sp/>a<sp/>thrust<sp/>tuple<sp/>of<sp/>arithmetic<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="84" refid="structcugraph_1_1reduce__op_1_1any" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1any" kindref="compound">any</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>T<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="92" refid="structcugraph_1_1reduce__op_1_1minimum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1minimum" kindref="compound">minimum</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>the<sp/>minimum<sp/>element<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments<sp/>(using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>&lt;),<sp/>a<sp/>compatible<sp/>raft<sp/>comms<sp/>op<sp/>exists<sp/>if<sp/>T<sp/>is<sp/>an<sp/>arithmetic<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="97" refid="structcugraph_1_1reduce__op_1_1minimum_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is__arithmetic__v_3_01T_01_4_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1minimum" kindref="compound">minimum</ref>&lt;T,<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>raft::comms::op_t<sp/>compatible_raft_comms_op<sp/>=<sp/>raft::comms::op_t::MIN;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>max_identity_element&lt;T&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>T<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>lhs<sp/>:<sp/>rhs;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>the<sp/>minimum<sp/>element<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments<sp/>(using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>&lt;),<sp/>a<sp/>compatible<sp/>raft<sp/>comms<sp/>op<sp/>does<sp/>not<sp/>exist<sp/>when<sp/>T<sp/>is<sp/>a<sp/>thrust::tuple<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112" refid="structcugraph_1_1reduce__op_1_1minimum_3_01T_00_01std_1_1enable__if__t_3_01cugraph_1_1is__thrust53c2fecf2f74c49e53877e052bbec36c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1minimum" kindref="compound">minimum</ref>&lt;T,<sp/>std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/>=<sp/>max_identity_element&lt;T&gt;();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>T<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>lhs<sp/>:<sp/>rhs;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>the<sp/>minimum<sp/>element<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments<sp/>elementwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(using<sp/>operator<sp/>&lt;<sp/>for<sp/>each<sp/>element),<sp/>T<sp/>should<sp/>be<sp/>an<sp/>arithmetic<sp/>type<sp/>(this<sp/>is<sp/>identical<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reduce_op::minimum<sp/>if<sp/>T<sp/>is<sp/>an<sp/>arithmetic<sp/>type)<sp/>or<sp/>a<sp/>thrust<sp/>tuple<sp/>of<sp/>arithmetic<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127" refid="structcugraph_1_1reduce__op_1_1elementwise__minimum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1elementwise__minimum" kindref="compound">elementwise_minimum</ref><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="structcugraph_1_1is__arithmetic__or__thrust__tuple__of__arithmetic" kindref="compound">cugraph::is_arithmetic_or_thrust_tuple_of_arithmetic&lt;T&gt;::value</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>raft::comms::op_t<sp/>compatible_raft_comms_op<sp/>=<sp/>raft::comms::op_t::MIN;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>max_identity_element&lt;T&gt;();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;U&gt;,<sp/>T&gt;<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>lhs<sp/>:<sp/>rhs;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;U&gt;::value,<sp/>T&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="145"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::elementwise_thrust_min(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/>rhs,<sp/>std::make_index_sequence&lt;thrust::tuple_size&lt;T&gt;::value&gt;());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="152" refid="structcugraph_1_1reduce__op_1_1maximum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1maximum" kindref="compound">maximum</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>the<sp/>maximum<sp/>element<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments<sp/>(using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>&lt;),<sp/>a<sp/>compatible<sp/>raft<sp/>comms<sp/>op<sp/>exists<sp/>if<sp/>T<sp/>is<sp/>an<sp/>arithmetic<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="157" refid="structcugraph_1_1reduce__op_1_1maximum_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is__arithmetic__v_3_01T_01_4_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1maximum" kindref="compound">maximum</ref>&lt;T,<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>raft::comms::op_t<sp/>compatible_raft_comms_op<sp/>=<sp/>raft::comms::op_t::MAX;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>min_identity_element&lt;T&gt;();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>T<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>rhs<sp/>:<sp/>lhs;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>the<sp/>maximum<sp/>element<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments<sp/>(using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>&lt;),<sp/>a<sp/>compatible<sp/>raft<sp/>comms<sp/>op<sp/>does<sp/>not<sp/>exist<sp/>when<sp/>T<sp/>is<sp/>a<sp/>thrust::tuple<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="172" refid="structcugraph_1_1reduce__op_1_1maximum_3_01T_00_01std_1_1enable__if__t_3_01cugraph_1_1is__thrust3e0d24f20df9ee64d3ec81052623bfdd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1maximum" kindref="compound">maximum</ref>&lt;T,<sp/>std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/>=<sp/>min_identity_element&lt;T&gt;();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>T<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>rhs<sp/>:<sp/>lhs;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>selecting<sp/>the<sp/>maximum<sp/>element<sp/>of<sp/>the<sp/>two<sp/>input<sp/>arguments<sp/>elementwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(using<sp/>operator<sp/>&lt;<sp/>for<sp/>each<sp/>element),<sp/>T<sp/>should<sp/>be<sp/>an<sp/>arithmetic<sp/>type<sp/>(this<sp/>is<sp/>identical<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reduce_op::maximum<sp/>if<sp/>T<sp/>is<sp/>an<sp/>arithmetic<sp/>type)<sp/>or<sp/>a<sp/>thrust<sp/>tuple<sp/>of<sp/>arithmetic<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="187" refid="structcugraph_1_1reduce__op_1_1elementwise__maximum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1elementwise__maximum" kindref="compound">elementwise_maximum</ref><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="structcugraph_1_1is__arithmetic__or__thrust__tuple__of__arithmetic" kindref="compound">cugraph::is_arithmetic_or_thrust_tuple_of_arithmetic&lt;T&gt;::value</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>raft::comms::op_t<sp/>compatible_raft_comms_op<sp/>=<sp/>raft::comms::op_t::MAX;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>min_identity_element&lt;T&gt;();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;U&gt;,<sp/>T&gt;<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>rhs<sp/>:<sp/>lhs;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;U&gt;::value,<sp/>T&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::elementwise_thrust_max(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/>rhs,<sp/>std::make_index_sequence&lt;thrust::tuple_size&lt;T&gt;::value&gt;());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>reduction<sp/>operator<sp/>summing<sp/>the<sp/>two<sp/>input<sp/>arguments,<sp/>T<sp/>should<sp/>be<sp/>an<sp/>arithmetic<sp/>type<sp/>or<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>thrust<sp/>tuple<sp/>of<sp/>arithmetic<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="214" refid="structcugraph_1_1reduce__op_1_1plus" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1plus" kindref="compound">plus</ref><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="structcugraph_1_1is__arithmetic__or__thrust__tuple__of__arithmetic" kindref="compound">cugraph::is_arithmetic_or_thrust_tuple_of_arithmetic&lt;T&gt;::value</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pure_function<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>raft::comms::op_t<sp/>compatible_raft_comms_op<sp/>=<sp/>raft::comms::op_t::SUM;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identity_element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T{};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1property__op" kindref="compound">property_op&lt;T, thrust::plus&gt;</ref><sp/>op{};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>T<sp/>operator()(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op(lhs,<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>raft::comms::op_t&gt;</highlight></codeline>
<codeline lineno="227" refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op" kindref="compound">has_compatible_raft_comms_op</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp&gt;</highlight></codeline>
<codeline lineno="230" refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op_3_01ReduceOp_00_01std_1_1remove_1f273463ade79596110d5d9e3ecdfc08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op" kindref="compound">has_compatible_raft_comms_op</ref>&lt;ReduceOp,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_cv_t&lt;decltype(ReduceOp::compatible_raft_comms_op)&gt;&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_compatible_raft_comms_op_v<sp/>=</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1reduce__op_1_1has__compatible__raft__comms__op" kindref="compound">has_compatible_raft_comms_op&lt;ReduceOp&gt;::value</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp::value_type&gt;</highlight></codeline>
<codeline lineno="239" refid="structcugraph_1_1reduce__op_1_1has__identity__element" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1has__identity__element" kindref="compound">has_identity_element</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp&gt;</highlight></codeline>
<codeline lineno="242" refid="structcugraph_1_1reduce__op_1_1has__identity__element_3_01ReduceOp_00_01std_1_1remove__cv__t_3_0f5dcd80042ba5c73346538204e0c5680" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1reduce__op_1_1has__identity__element" kindref="compound">has_identity_element</ref>&lt;ReduceOp,<sp/>std::remove_cv_t&lt;decltype(ReduceOp::identity_element)&gt;&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_identity_element_v<sp/>=<sp/><ref refid="structcugraph_1_1reduce__op_1_1has__identity__element" kindref="compound">has_identity_element&lt;ReduceOp&gt;::value</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">__device__<sp/>std::enable_if_t&lt;has_compatible_raft_comms_op_v&lt;ReduceOp&gt;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/>atomic_reduce(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>Iterator<sp/>iter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>thrust::iterator_traits&lt;Iterator&gt;::value_type<sp/>value)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_same_v&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp::value_type,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>thrust::iterator_traits&lt;Iterator&gt;::value_type&gt;);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::SUM)<sp/>||</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::MIN)<sp/>||</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>raft::comms::op_t::MAX));<sp/><sp/></highlight><highlight class="comment">//<sp/>currently,<sp/>only<sp/>(element-wise)<sp/>sum,<sp/>min,<sp/>and<sp/>max<sp/>are<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::SUM)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_add(iter,<sp/>value);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::MIN)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>elementwise_atomic_min(iter,<sp/>value);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>elementwise_atomic_max(iter,<sp/>value);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EdgePartitionEndpo</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">PropertyValueWrapper&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">__device__<sp/>std::enable_if_t&lt;has_compatible_raft_comms_op_v&lt;ReduceOp&gt;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/>atomic_reduce(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>EdgePartitionEndpointPropertyValueWrapper<sp/>edge_partition_endpoint_property_value,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EdgePartitionEndpointPropertyValueWrapper::vertex_type<sp/>offset,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EdgePartitionEndpointPropertyValueWrapper::value_type<sp/>value)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_same_v&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReduceOp::value_type,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EdgePartitionEndpointPropertyValueWrapper::value_type&gt;);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::SUM)<sp/>||</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::MIN)<sp/>||</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>raft::comms::op_t::MAX));<sp/><sp/></highlight><highlight class="comment">//<sp/>currently,<sp/>only<sp/>(element-wise)<sp/>sum,<sp/>min,<sp/>and<sp/>max<sp/>are<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::SUM)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_partition_endpoint_property_value.atomic_add(offset,<sp/>value);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(ReduceOp::compatible_raft_comms_op<sp/>==<sp/>raft::comms::op_t::MIN)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_partition_endpoint_property_value.elementwise_atomic_min(offset,<sp/>value);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_partition_endpoint_property_value.elementwise_atomic_max(offset,<sp/>value);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reduce_op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cugraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/reduce_op.cuh"/>
  </compounddef>
</doxygen>
