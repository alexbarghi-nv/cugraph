<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="host__scalar__comm_8hpp" kind="file" language="C++">
    <compoundname>host_scalar_comm.hpp</compoundname>
    <includes refid="include_2cugraph_2utilities_2error_8hpp" local="no">cugraph/utilities/error.hpp</includes>
    <includes refid="thrust__tuple__utils_8hpp" local="no">cugraph/utilities/thrust_tuple_utils.hpp</includes>
    <includes local="no">raft/core/handle.hpp</includes>
    <includes local="no">rmm/device_uvector.hpp</includes>
    <includes local="no">thrust/tuple.h</includes>
    <includes local="no">numeric</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="collect__comm_8cuh" local="no">collect_comm.cuh</includedby>
    <includedby refid="count__if__v_8cuh" local="no">count_if_v.cuh</includedby>
    <includedby refid="create__graph__from__edgelist__impl_8cuh" local="no">create_graph_from_edgelist_impl.cuh</includedby>
    <includedby refid="edge__bucket_8cuh" local="no">edge_bucket.cuh</includedby>
    <includedby refid="egonet__impl_8cuh" local="no">egonet_impl.cuh</includedby>
    <includedby refid="error__check__utils_8cuh" local="no">error_check_utils.cuh</includedby>
    <includedby refid="extract__bfs__paths__impl_8cuh" local="no">extract_bfs_paths_impl.cuh</includedby>
    <includedby refid="extract__ego_8cpp" local="no">extract_ego.cpp</includedby>
    <includedby refid="extract__transform__v__frontier__e_8cuh" local="no">extract_transform_v_frontier_e.cuh</includedby>
    <includedby refid="graph__generators_8cpp" local="no">graph_generators.cpp</includedby>
    <includedby refid="graph__impl_8cuh" local="no">graph_impl.cuh</includedby>
    <includedby refid="graph__view__impl_8cuh" local="no">graph_view_impl.cuh</includedby>
    <includedby refid="groupby__and__count_8cu" local="no">groupby_and_count.cu</includedby>
    <includedby refid="maximal__independent__moves_8cuh" local="no">maximal_independent_moves.cuh</includedby>
    <includedby refid="mis__impl_8cuh" local="no">mis_impl.cuh</includedby>
    <includedby refid="nbr__intersection_8cuh" local="no">nbr_intersection.cuh</includedby>
    <includedby refid="partition__manager_8hpp" local="no">partition_manager.hpp</includedby>
    <includedby refid="partition__v__frontier_8cuh" local="no">partition_v_frontier.cuh</includedby>
    <includedby refid="per__v__random__select__transform__outgoing__e_8cuh" local="no">per_v_random_select_transform_outgoing_e.cuh</includedby>
    <includedby refid="per__v__transform__reduce__dst__key__aggregated__outgoing__e_8cuh" local="no">per_v_transform_reduce_dst_key_aggregated_outgoing_e.cuh</includedby>
    <includedby refid="per__v__transform__reduce__incoming__outgoing__e_8cuh" local="no">per_v_transform_reduce_incoming_outgoing_e.cuh</includedby>
    <includedby refid="permute__range_8cu" local="no">permute_range.cu</includedby>
    <includedby refid="random_8cpp" local="no">random.cpp</includedby>
    <includedby refid="random__walks__impl_8cuh" local="no">random_walks_impl.cuh</includedby>
    <includedby refid="reduce__v_8cuh" local="no">reduce_v.cuh</includedby>
    <includedby refid="renumber__edgelist__impl_8cuh" local="no">renumber_edgelist_impl.cuh</includedby>
    <includedby refid="renumber__utils__impl_8cuh" local="no">renumber_utils_impl.cuh</includedby>
    <includedby refid="sample__and__compute__local__nbr__indices_8cuh" local="no">sample_and_compute_local_nbr_indices.cuh</includedby>
    <includedby refid="select__random__vertices__impl_8hpp" local="no">select_random_vertices_impl.hpp</includedby>
    <includedby refid="shuffle__vertex__pairs_8cu" local="no">shuffle_vertex_pairs.cu</includedby>
    <includedby refid="transform__reduce__e_8cuh" local="no">transform_reduce_e.cuh</includedby>
    <includedby refid="transform__reduce__v_8cuh" local="no">transform_reduce_v.cuh</includedby>
    <includedby refid="transform__reduce__v__frontier__outgoing__e__by__dst_8cuh" local="no">transform_reduce_v_frontier_outgoing_e_by_dst.cuh</includedby>
    <includedby refid="triangle__count__impl_8cuh" local="no">triangle_count_impl.cuh</includedby>
    <includedby refid="update__edge__src__dst__property_8cuh" local="no">update_edge_src_dst_property.cuh</includedby>
    <includedby refid="utility__wrappers_8cu" local="no">utility_wrappers.cu</includedby>
    <includedby refid="vertex__frontier_8cuh" local="no">vertex_frontier.cuh</includedby>
    <incdepgraph>
      <node id="2">
        <label>cugraph/utilities/error.hpp</label>
        <link refid="include_2cugraph_2utilities_2error_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>host_scalar_comm.hpp</label>
        <link refid="host__scalar__comm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cugraph/utilities/thrust_tuple_utils.hpp</label>
        <link refid="thrust__tuple__utils_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="11">
        <label>numeric</label>
      </node>
      <node id="3">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="10">
        <label>raft/core/handle.hpp</label>
      </node>
      <node id="5">
        <label>rmm/device_uvector.hpp</label>
      </node>
      <node id="6">
        <label>thrust/iterator/iterator_traits.h</label>
      </node>
      <node id="7">
        <label>thrust/tuple.h</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="64">
        <label>algorithms.hpp</label>
        <link refid="algorithms_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>decompress_edge_partition.cuh</label>
        <link refid="decompress__edge__partition_8cuh_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>graph.hpp</label>
        <link refid="include_2cugraph_2graph_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>graph_functions.hpp</label>
        <link refid="include_2cugraph_2graph__functions_8hpp_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>graph_view.hpp</label>
        <link refid="graph__view_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>graph.hpp</label>
        <link refid="include_2cugraph_2mtmg_2graph_8hpp_source"/>
      </node>
      <node id="93">
        <label>graph_view.hpp</label>
        <link refid="mtmg_2graph__view_8hpp_source"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>resource_manager.hpp</label>
        <link refid="resource__manager_8hpp_source"/>
      </node>
      <node id="96">
        <label>vertex_pair_result.hpp</label>
        <link refid="vertex__pair__result_8hpp_source"/>
      </node>
      <node id="95">
        <label>vertex_pair_result_view.hpp</label>
        <link refid="vertex__pair__result__view_8hpp_source"/>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>vertex_result.hpp</label>
        <link refid="vertex__result_8hpp_source"/>
      </node>
      <node id="97">
        <label>vertex_result_view.hpp</label>
        <link refid="vertex__result__view_8hpp_source"/>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>partition_manager.hpp</label>
        <link refid="partition__manager_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>host_scalar_comm.hpp</label>
        <link refid="host__scalar__comm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>graph.hpp</label>
        <link refid="src_2c__api_2graph_8hpp_source"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>graph_helper_impl.cuh</label>
        <link refid="graph__helper__impl_8cuh_source"/>
      </node>
      <node id="79">
        <label>utils.hpp</label>
        <link refid="c__api_2utils_8hpp_source"/>
      </node>
      <node id="16">
        <label>betweenness_centrality_impl.cuh</label>
        <link refid="betweenness__centrality__impl_8cuh_source"/>
      </node>
      <node id="17">
        <label>eigenvector_centrality_impl.cuh</label>
        <link refid="eigenvector__centrality__impl_8cuh_source"/>
      </node>
      <node id="19">
        <label>katz_centrality_impl.cuh</label>
        <link refid="katz__centrality__impl_8cuh_source"/>
      </node>
      <node id="3">
        <label>approx_weighted_matching_impl.cuh</label>
        <link refid="approx__weighted__matching__impl_8cuh_source"/>
      </node>
      <node id="4">
        <label>common_methods.cuh</label>
        <link refid="common__methods_8cuh_source"/>
      </node>
      <node id="70">
        <label>common_methods.hpp</label>
        <link refid="common__methods_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>maximal_independent_moves.cuh</label>
        <link refid="maximal__independent__moves_8cuh_source"/>
      </node>
      <node id="99">
        <label>maximal_independent_moves.hpp</label>
        <link refid="maximal__independent__moves_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>refine.hpp</label>
        <link refid="refine_8hpp_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>refine_impl.cuh</label>
        <link refid="refine__impl_8cuh_source"/>
      </node>
      <node id="57">
        <label>ecg_impl.cuh</label>
        <link refid="ecg__impl_8cuh_source"/>
      </node>
      <node id="23">
        <label>edge_triangle_count_impl.cuh</label>
        <link refid="edge__triangle__count__impl_8cuh_source"/>
      </node>
      <node id="25">
        <label>egonet_impl.cuh</label>
        <link refid="egonet__impl_8cuh_source"/>
      </node>
      <node id="81">
        <label>flatten_dendrogram.hpp</label>
        <link refid="flatten__dendrogram_8hpp_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>k_truss_impl.cuh</label>
        <link refid="k__truss__impl_8cuh_source"/>
      </node>
      <node id="58">
        <label>leiden_impl.cuh</label>
        <link refid="leiden__impl_8cuh_source"/>
      </node>
      <node id="59">
        <label>louvain_impl.cuh</label>
        <link refid="louvain__impl_8cuh_source"/>
      </node>
      <node id="30">
        <label>triangle_count_impl.cuh</label>
        <link refid="triangle__count__impl_8cuh_source"/>
      </node>
      <node id="44">
        <label>mis_impl.cuh</label>
        <link refid="mis__impl_8cuh_source"/>
      </node>
      <node id="62">
        <label>vertex_coloring_impl.cuh</label>
        <link refid="vertex__coloring__impl_8cuh_source"/>
      </node>
      <node id="41">
        <label>weakly_connected_components_impl.cuh</label>
        <link refid="weakly__connected__components__impl_8cuh_source"/>
      </node>
      <node id="37">
        <label>core_number_impl.cuh</label>
        <link refid="core__number__impl_8cuh_source"/>
      </node>
      <node id="65">
        <label>k_core_impl.cuh</label>
        <link refid="k__core__impl_8cuh_source"/>
      </node>
      <node id="47">
        <label>graph_partition_utils.cuh</label>
        <link refid="graph__partition__utils_8cuh_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>hits_impl.cuh</label>
        <link refid="hits__impl_8cuh_source"/>
      </node>
      <node id="20">
        <label>pagerank_impl.cuh</label>
        <link refid="pagerank__impl_8cuh_source"/>
      </node>
      <node id="9">
        <label>jaccard_impl.cuh</label>
        <link refid="jaccard__impl_8cuh_source"/>
      </node>
      <node id="10">
        <label>overlap_impl.cuh</label>
        <link refid="overlap__impl_8cuh_source"/>
      </node>
      <node id="8">
        <label>similarity_impl.cuh</label>
        <link refid="similarity__impl_8cuh_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sorensen_impl.cuh</label>
        <link refid="sorensen__impl_8cuh_source"/>
      </node>
      <node id="71">
        <label>count_if_e.cuh</label>
        <link refid="count__if__e_8cuh_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>count_if_v.cuh</label>
        <link refid="count__if__v_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>extract_transform_v_frontier_e.cuh</label>
        <link refid="extract__transform__v__frontier__e_8cuh_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>nbr_intersection.cuh</label>
        <link refid="nbr__intersection_8cuh_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>partition_v_frontier.cuh</label>
        <link refid="partition__v__frontier_8cuh_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>sample_and_compute_local_nbr_indices.cuh</label>
        <link refid="sample__and__compute__local__nbr__indices_8cuh_source"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>transform_v_frontier_e.cuh</label>
        <link refid="transform__v__frontier__e_8cuh_source"/>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>edge_bucket.cuh</label>
        <link refid="edge__bucket_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>extract_transform_e.cuh</label>
        <link refid="extract__transform__e_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>extract_transform_v_frontier_outgoing_e.cuh</label>
        <link refid="extract__transform__v__frontier__outgoing__e_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>fill_edge_property.cuh</label>
        <link refid="fill__edge__property_8cuh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>fill_edge_src_dst_property.cuh</label>
        <link refid="fill__edge__src__dst__property_8cuh_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>kv_store.cuh</label>
        <link refid="kv__store_8cuh_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>per_v_pair_transform_dst_nbr_intersection.cuh</label>
        <link refid="per__v__pair__transform__dst__nbr__intersection_8cuh_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>per_v_random_select_transform_outgoing_e.cuh</label>
        <link refid="per__v__random__select__transform__outgoing__e_8cuh_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>per_v_transform_reduce_dst_key_aggregated_outgoing_e.cuh</label>
        <link refid="per__v__transform__reduce__dst__key__aggregated__outgoing__e_8cuh_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>per_v_transform_reduce_incoming_outgoing_e.cuh</label>
        <link refid="per__v__transform__reduce__incoming__outgoing__e_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>reduce_v.cuh</label>
        <link refid="reduce__v_8cuh_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>transform_e.cuh</label>
        <link refid="transform__e_8cuh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>transform_reduce_dst_nbr_intersection_of_e_endpoints_by_v.cuh</label>
        <link refid="transform__reduce__dst__nbr__intersection__of__e__endpoints__by__v_8cuh_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>transform_reduce_e.cuh</label>
        <link refid="transform__reduce__e_8cuh_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>transform_reduce_e_by_src_dst_key.cuh</label>
        <link refid="transform__reduce__e__by__src__dst__key_8cuh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>transform_reduce_v.cuh</label>
        <link refid="transform__reduce__v_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>transform_reduce_v_frontier_outgoing_e_by_dst.cuh</label>
        <link refid="transform__reduce__v__frontier__outgoing__e__by__dst_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>update_edge_src_dst_property.cuh</label>
        <link refid="update__edge__src__dst__property_8cuh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>update_v_frontier.cuh</label>
        <link refid="update__v__frontier_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>vertex_frontier.cuh</label>
        <link refid="vertex__frontier_8cuh_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>gather_one_hop_edgelist_impl.cuh</label>
        <link refid="gather__one__hop__edgelist__impl_8cuh_source"/>
      </node>
      <node id="66">
        <label>prepare_next_frontier_impl.cuh</label>
        <link refid="prepare__next__frontier__impl_8cuh_source"/>
      </node>
      <node id="60">
        <label>sample_edges.cuh</label>
        <link refid="sample__edges_8cuh_source"/>
      </node>
      <node id="68">
        <label>sampling_utils.hpp</label>
        <link refid="sampling__utils_8hpp_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>shuffle_and_organize_output_impl.cuh</label>
        <link refid="shuffle__and__organize__output__impl_8cuh_source"/>
      </node>
      <node id="67">
        <label>random_walks.cuh</label>
        <link refid="random__walks_8cuh_source"/>
      </node>
      <node id="51">
        <label>random_walks_impl.cuh</label>
        <link refid="random__walks__impl_8cuh_source"/>
      </node>
      <node id="86">
        <label>renumber_sampled_edgelist_impl.cuh</label>
        <link refid="renumber__sampled__edgelist__impl_8cuh_source"/>
      </node>
      <node id="89">
        <label>rw_traversals.hpp</label>
        <link refid="rw__traversals_8hpp_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>sampling_post_processing_impl.cuh</label>
        <link refid="sampling__post__processing__impl_8cuh_source"/>
      </node>
      <node id="69">
        <label>uniform_neighbor_sampling_impl.hpp</label>
        <link refid="uniform__neighbor__sampling__impl_8hpp_source"/>
      </node>
      <node id="48">
        <label>coarsen_graph_impl.cuh</label>
        <link refid="coarsen__graph__impl_8cuh_source"/>
      </node>
      <node id="21">
        <label>create_graph_from_edgelist_impl.cuh</label>
        <link refid="create__graph__from__edgelist__impl_8cuh_source"/>
      </node>
      <node id="46">
        <label>decompress_to_edgelist_impl.cuh</label>
        <link refid="decompress__to__edgelist__impl_8cuh_source"/>
      </node>
      <node id="90">
        <label>structure_utils.cuh</label>
        <link refid="structure__utils_8cuh_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>graph_impl.cuh</label>
        <link refid="graph__impl_8cuh_source"/>
      </node>
      <node id="27">
        <label>graph_view_impl.cuh</label>
        <link refid="graph__view__impl_8cuh_source"/>
      </node>
      <node id="50">
        <label>graph_weight_utils_impl.cuh</label>
        <link refid="graph__weight__utils__impl_8cuh_source"/>
      </node>
      <node id="6">
        <label>induced_subgraph_impl.cuh</label>
        <link refid="induced__subgraph__impl_8cuh_source"/>
      </node>
      <node id="52">
        <label>relabel_impl.cuh</label>
        <link refid="relabel__impl_8cuh_source"/>
      </node>
      <node id="91">
        <label>remove_multi_edges_impl.cuh</label>
        <link refid="remove__multi__edges__impl_8cuh_source"/>
      </node>
      <node id="92">
        <label>remove_self_loops_impl.cuh</label>
        <link refid="remove__self__loops__impl_8cuh_source"/>
      </node>
      <node id="53">
        <label>renumber_edgelist_impl.cuh</label>
        <link refid="renumber__edgelist__impl_8cuh_source"/>
      </node>
      <node id="14">
        <label>renumber_utils_impl.cuh</label>
        <link refid="renumber__utils__impl_8cuh_source"/>
      </node>
      <node id="54">
        <label>select_random_vertices_impl.hpp</label>
        <link refid="select__random__vertices__impl_8hpp_source"/>
      </node>
      <node id="82">
        <label>symmetrize_graph_impl.cuh</label>
        <link refid="symmetrize__graph__impl_8cuh_source"/>
      </node>
      <node id="83">
        <label>transpose_graph_impl.cuh</label>
        <link refid="transpose__graph__impl_8cuh_source"/>
      </node>
      <node id="84">
        <label>transpose_graph_storage_impl.cuh</label>
        <link refid="transpose__graph__storage__impl_8cuh_source"/>
      </node>
      <node id="36">
        <label>bfs_impl.cuh</label>
        <link refid="bfs__impl_8cuh_source"/>
      </node>
      <node id="5">
        <label>extract_bfs_paths_impl.cuh</label>
        <link refid="extract__bfs__paths__impl_8cuh_source"/>
      </node>
      <node id="38">
        <label>k_hop_nbrs_impl.cuh</label>
        <link refid="k__hop__nbrs__impl_8cuh_source"/>
      </node>
      <node id="39">
        <label>od_shortest_distances_impl.cuh</label>
        <link refid="od__shortest__distances__impl_8cuh_source"/>
      </node>
      <node id="40">
        <label>sssp_impl.cuh</label>
        <link refid="sssp__impl_8cuh_source"/>
      </node>
      <node id="2">
        <label>collect_comm.cuh</label>
        <link refid="collect__comm_8cuh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>cugraph_ops_utils.hpp</label>
        <link refid="cugraph__ops__utils_8hpp_source"/>
      </node>
      <node id="26">
        <label>error_check_utils.cuh</label>
        <link refid="error__check__utils_8cuh_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl" prot="public">cugraph::detail::update_vector_of_tuple_scalar_elements_from_tuple_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl" prot="public">cugraph::detail::update_tuple_from_vector_of_tuple_scalar_elements_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl" prot="public">cugraph::detail::host_allreduce_tuple_scalar_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::host_allreduce_tuple_scalar_element_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl" prot="public">cugraph::detail::host_reduce_tuple_scalar_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::host_reduce_tuple_scalar_element_impl&lt; TupleType, I, I &gt;</innerclass>
    <innernamespace refid="namespacecugraph">cugraph</innernamespace>
    <innernamespace refid="namespacecugraph_1_1detail">cugraph::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/utilities/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/utilities/thrust_tuple_utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/core/handle.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rmm/device_uvector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/tuple.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cugraph<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="35" refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl" kindref="compound">update_vector_of_tuple_scalar_elements_from_tuple_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(std::vector&lt;int64_t&gt;&amp;<sp/>tuple_scalar_elements,<sp/>TupleType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tuple)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="37"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">element_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>thrust::tuple_element&lt;I,<sp/>TupleType&gt;::type;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(element_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">element_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tuple_scalar_elements.data()<sp/>+<sp/>I);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/><sp/><sp/><sp/><sp/>=<sp/>thrust::get&lt;I&gt;(tuple);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl" kindref="compound">update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;TupleType, I + 1, N&gt;</ref>().update(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuple_scalar_elements,<sp/>tuple);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="48" refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl_3_01TupleType_00_01I_00_01I_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl" kindref="compound">update_vector_of_tuple_scalar_elements_from_tuple_impl</ref>&lt;TupleType,<sp/>I,<sp/>I&gt;<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(std::vector&lt;int64_t&gt;&amp;<sp/>tuple_scalar_elements,<sp/>TupleType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tuple)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="53" refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl" kindref="compound">update_tuple_from_vector_of_tuple_scalar_elements_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(TupleType&amp;<sp/>tuple,<sp/>std::vector&lt;int64_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tuple_scalar_elements)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">element_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>thrust::tuple_element&lt;I,<sp/>TupleType&gt;::type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(element_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">element_t<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tuple_scalar_elements.data()<sp/>+<sp/>I);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::get&lt;I&gt;(tuple)<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl" kindref="compound">update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;TupleType, I + 1, N&gt;</ref>().update(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuple,<sp/>tuple_scalar_elements);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="66" refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl_3_01TupleType_00_01I_00_01I_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl" kindref="compound">update_tuple_from_vector_of_tuple_scalar_elements_impl</ref>&lt;TupleType,<sp/>I,<sp/>I&gt;<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(TupleType&amp;<sp/>tuple,<sp/>std::vector&lt;int64_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tuple_scalar_elements)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="71" refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl" kindref="compound">host_allreduce_tuple_scalar_element_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;&amp;<sp/>tuple_scalar_elements,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::comms::op_t<sp/>op,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">element_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>thrust::tuple_element&lt;I,<sp/>TupleType&gt;::type;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(element_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">element_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tuple_scalar_elements.data()<sp/>+<sp/>I);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>comm.allreduce(ptr,<sp/>ptr,<sp/>1,<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl" kindref="compound">host_allreduce_tuple_scalar_element_impl&lt;TupleType, I + 1, N&gt;</ref>().run(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm,<sp/>tuple_scalar_elements,<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="87" refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl_3_01TupleType_00_01I_00_01I_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl" kindref="compound">host_allreduce_tuple_scalar_element_impl</ref>&lt;TupleType,<sp/>I,<sp/>I&gt;<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;&amp;<sp/>tuple_scalar_elements,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::comms::op_t<sp/>op,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="97" refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl" kindref="compound">host_reduce_tuple_scalar_element_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;&amp;<sp/>tuple_scalar_elements,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::comms::op_t<sp/>op,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">element_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>thrust::tuple_element&lt;I,<sp/>TupleType&gt;::type;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(element_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">element_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tuple_scalar_elements.data()<sp/>+<sp/>I);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>comm.reduce(ptr,<sp/>ptr,<sp/>1,<sp/>op,<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl" kindref="compound">host_reduce_tuple_scalar_element_impl&lt;TupleType, I + 1, N&gt;</ref>().run(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm,<sp/>tuple_scalar_elements,<sp/>op,<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TupleType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="114" refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl_3_01TupleType_00_01I_00_01I_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl" kindref="compound">host_reduce_tuple_scalar_element_impl</ref>&lt;TupleType,<sp/>I,<sp/>I&gt;<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;&amp;<sp/>tuple_scalar_elements,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::comms::op_t<sp/>op,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_allreduce(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/>raft::comms::op_t<sp/>op,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;T&gt;<sp/>d_input(1,<sp/>stream);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>raft::update_device(d_input.data(),<sp/>&amp;input,<sp/>1,<sp/>stream);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>comm.allreduce(d_input.data(),<sp/>d_input.data(),<sp/>1,<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>T<sp/>h_input{};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>raft::update_host(&amp;h_input,<sp/>d_input.data(),<sp/>1,<sp/>stream);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h_input;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_allreduce(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/>raft::comms::op_t<sp/>op,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple_size<sp/>=<sp/>thrust::tuple_size&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;<sp/>d_tuple_scalar_elements(tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>T<sp/>ret{};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().update(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tuple_scalar_elements,<sp/>input);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>raft::update_device(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>d_tuple_scalar_elements.data(),<sp/>h_tuple_scalar_elements.data(),<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>detail::host_allreduce_tuple_scalar_element_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().run(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>comm,<sp/>d_tuple_scalar_elements,<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>raft::update_host(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tuple_scalar_elements.data(),<sp/>d_tuple_scalar_elements.data(),<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().update(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ret,<sp/>h_tuple_scalar_elements);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>is<sp/>valid<sp/>only<sp/>in<sp/>root<sp/>(return<sp/>value<sp/>may<sp/>better<sp/>be<sp/>std::optional<sp/>in<sp/>C++17<sp/>or<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_reduce(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/>raft::comms::op_t<sp/>op,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;T&gt;<sp/>d_input(1,<sp/>stream);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>raft::update_device(d_input.data(),<sp/>&amp;input,<sp/>1,<sp/>stream);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>comm.reduce(d_input.data(),<sp/>d_input.data(),<sp/>1,<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>T<sp/>h_input{};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{<sp/>raft::update_host(&amp;h_input,<sp/>d_input.data(),<sp/>1,<sp/>stream);<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h_input;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>is<sp/>valid<sp/>only<sp/>in<sp/>root<sp/>(return<sp/>value<sp/>may<sp/>better<sp/>be<sp/>std::optional<sp/>in<sp/>C++17<sp/>or<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_reduce(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/>raft::comms::op_t<sp/>op,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple_size<sp/>=<sp/>thrust::tuple_size&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;<sp/>d_tuple_scalar_elements(tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>T<sp/>ret{};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().update(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tuple_scalar_elements,<sp/>input);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>raft::update_device(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>d_tuple_scalar_elements.data(),<sp/>h_tuple_scalar_elements.data(),<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>detail::host_reduce_tuple_scalar_element_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().run(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>comm,<sp/>d_tuple_scalar_elements,<sp/>op,<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::update_host(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h_tuple_scalar_elements.data(),<sp/>d_tuple_scalar_elements.data(),<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;()</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.update(ret,<sp/>h_tuple_scalar_elements);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_bcast(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;T&gt;<sp/>d_input(1,<sp/>stream);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{<sp/>raft::update_device(d_input.data(),<sp/>&amp;input,<sp/>1,<sp/>stream);<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>comm.bcast(d_input.data(),<sp/>1,<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h_input<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>!=<sp/>root)<sp/>{<sp/>raft::update_host(&amp;h_input,<sp/>d_input.data(),<sp/>1,<sp/>stream);<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h_input;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_bcast(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple_size<sp/>=<sp/>thrust::tuple_size&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;<sp/>d_tuple_scalar_elements(tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.update(h_tuple_scalar_elements,<sp/>input);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::update_device(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_tuple_scalar_elements.data(),<sp/>h_tuple_scalar_elements.data(),<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>comm.bcast(d_tuple_scalar_elements.data(),<sp/>d_tuple_scalar_elements.size(),<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>!=<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::update_host(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h_tuple_scalar_elements.data(),<sp/>d_tuple_scalar_elements.data(),<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>!=<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;()</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.update(ret,<sp/>h_tuple_scalar_elements);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value,<sp/>std::vector&lt;T&gt;&gt;<sp/>host_scalar_allgather(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;T&gt;<sp/>d_outputs(comm.get_size(),<sp/>stream);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>raft::update_device(d_outputs.data()<sp/>+<sp/>comm.get_rank(),<sp/>&amp;input,<sp/>1,<sp/>stream);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>comm.allgather(d_outputs.data()<sp/>+<sp/>comm.get_rank(),<sp/>d_outputs.data(),<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{1},<sp/>stream);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/>h_outputs(d_outputs.size());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>raft::update_host(h_outputs.data(),<sp/>d_outputs.data(),<sp/>d_outputs.size(),<sp/>stream);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h_outputs;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>std::vector&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">host_scalar_allgather(raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple_size<sp/>=<sp/>thrust::tuple_size&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;<sp/>d_allgathered_tuple_scalar_elements(comm.get_size()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().update(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tuple_scalar_elements,<sp/>input);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>raft::update_device(d_allgathered_tuple_scalar_elements.data()<sp/>+<sp/>comm.get_rank()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_size,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>comm.allgather(d_allgathered_tuple_scalar_elements.data()<sp/>+<sp/>comm.get_rank()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_allgathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_size,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_allgathered_tuple_scalar_elements(comm.get_size()<sp/>*<sp/>tuple_size);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>raft::update_host(h_allgathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_allgathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm.get_size()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/>ret(comm.get_size());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ret.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h_allgathered_tuple_scalar_elements.data()<sp/>+<sp/>i<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h_allgathered_tuple_scalar_elements.data()<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>tuple_size);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;()</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.update(ret[i],<sp/>h_tuple_scalar_elements);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_scatter(</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>inputs,<sp/><sp/></highlight><highlight class="comment">//<sp/>relevant<sp/>only<sp/>in<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>((comm.get_rank()<sp/>==<sp/>root)<sp/>&amp;&amp;<sp/>(inputs.size()<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(comm.get_size())))<sp/>||</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((comm.get_rank()<sp/>!=<sp/>root)<sp/>&amp;&amp;<sp/>(inputs.size()<sp/>==<sp/>0)),</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inputs.size()<sp/>should<sp/>match<sp/>with<sp/>comm.get_size()<sp/>in<sp/>root<sp/>and<sp/>should<sp/>be<sp/>0<sp/>otherwise.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;T&gt;<sp/>d_outputs(comm.get_size(),<sp/>stream);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::update_device(d_outputs.data(),<sp/>inputs.data(),<sp/>inputs.size(),<sp/>stream);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>comm.bcast(d_outputs.data(),<sp/>d_outputs.size(),<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>T<sp/>h_output{};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>raft::update_host(&amp;h_output,<sp/>d_outputs.data()<sp/>+<sp/>comm.get_rank(),<sp/>1,<sp/>stream);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h_output;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>T&gt;<sp/>host_scalar_scatter(</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>inputs,<sp/><sp/></highlight><highlight class="comment">//<sp/>relevant<sp/>only<sp/>in<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>((comm.get_rank()<sp/>==<sp/>root)<sp/>&amp;&amp;<sp/>(inputs.size()<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(comm.get_size())))<sp/>||</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((comm.get_rank()<sp/>!=<sp/>root)<sp/>&amp;&amp;<sp/>(inputs.size()<sp/>==<sp/>0)),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inputs.size()<sp/>should<sp/>match<sp/>with<sp/>comm.get_size()<sp/>in<sp/>root<sp/>and<sp/>should<sp/>be<sp/>0<sp/>otherwise.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple_size<sp/>=<sp/>thrust::tuple_size&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;<sp/>d_scatter_tuple_scalar_elements(comm.get_size()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>comm.get_size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.update(h_tuple_scalar_elements,<sp/>inputs[i]);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raft::update_device(d_scatter_tuple_scalar_elements.data()<sp/>+<sp/>i<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_size,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>comm.bcast(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>d_scatter_tuple_scalar_elements.data(),<sp/>d_scatter_tuple_scalar_elements.size(),<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>raft::update_host(h_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_scatter_tuple_scalar_elements.data()<sp/>+<sp/>comm.get_rank()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_size,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>T<sp/>ret{};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().update(</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ret,<sp/>h_tuple_scalar_elements);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>is<sp/>valid<sp/>only<sp/>in<sp/>root<sp/>(return<sp/>value<sp/>may<sp/>better<sp/>be<sp/>std::optional<sp/>in<sp/>C++17<sp/>or<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value,<sp/>std::vector&lt;T&gt;&gt;<sp/>host_scalar_gather(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;T&gt;<sp/>d_outputs(comm.get_rank()<sp/>==<sp/>root<sp/>?<sp/>comm.get_size()<sp/>:<sp/>int{1},<sp/>stream);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>raft::update_device(</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>comm.get_rank()<sp/>==<sp/>root<sp/>?<sp/>d_outputs.data()<sp/>+<sp/>comm.get_rank()<sp/>:<sp/>d_outputs.data(),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;input,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>comm.gather(comm.get_rank()<sp/>==<sp/>root<sp/>?<sp/>d_outputs.data()<sp/>+<sp/>comm.get_rank()<sp/>:<sp/>d_outputs.data(),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_outputs.data(),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t{1},</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/>h_outputs(comm.get_rank()<sp/>==<sp/>root<sp/>?<sp/>comm.get_size()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::update_host(h_outputs.data(),<sp/>d_outputs.data(),<sp/>comm.get_size(),<sp/>stream);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h_outputs;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>is<sp/>valid<sp/>only<sp/>in<sp/>root<sp/>(return<sp/>value<sp/>may<sp/>better<sp/>be<sp/>std::optional<sp/>in<sp/>C++17<sp/>or<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">std::enable_if_t&lt;cugraph::is_thrust_tuple_of_arithmetic&lt;T&gt;::value,<sp/>std::vector&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">host_scalar_gather(raft::comms::comms_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm,<sp/>T<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple_size<sp/>=<sp/>thrust::tuple_size&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(tuple_size);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>rmm::device_uvector&lt;int64_t&gt;<sp/>d_gathered_tuple_scalar_elements(</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>comm.get_rank()<sp/>==<sp/>root<sp/>?<sp/>comm.get_size()<sp/>*<sp/>tuple_size<sp/>:<sp/>tuple_size,<sp/>stream);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;().update(</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tuple_scalar_elements,<sp/>input);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>raft::update_device(comm.get_rank()<sp/>==<sp/>root</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>d_gathered_tuple_scalar_elements.data()<sp/>+<sp/>comm.get_rank()<sp/>*<sp/>tuple_size</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>d_gathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_size,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>comm.gather(comm.get_rank()<sp/>==<sp/>root</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>d_gathered_tuple_scalar_elements.data()<sp/>+<sp/>comm.get_rank()<sp/>*<sp/>tuple_size</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>d_gathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_gathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_size,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_gathered_tuple_scalar_elements(</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>comm.get_rank()<sp/>==<sp/>root<sp/>?<sp/>comm.get_size()<sp/>*<sp/>tuple_size<sp/>:<sp/>size_t{0});</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::update_host(h_gathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_gathered_tuple_scalar_elements.data(),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm.get_size()<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>comm.sync_stream(stream);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>CUGRAPH_EXPECTS(status<sp/>==<sp/>raft::comms::status_t::SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;sync_stream()<sp/>failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/>ret(comm.get_size());</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm.get_rank()<sp/>==<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ret.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>h_tuple_scalar_elements(</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_gathered_tuple_scalar_elements.data()<sp/>+<sp/>i<sp/>*<sp/>tuple_size,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_gathered_tuple_scalar_elements.data()<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>tuple_size);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt;T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{0},<sp/>tuple_size&gt;()</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.update(ret[i],<sp/>h_tuple_scalar_elements);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cugraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/host_scalar_comm.hpp"/>
  </compounddef>
</doxygen>
