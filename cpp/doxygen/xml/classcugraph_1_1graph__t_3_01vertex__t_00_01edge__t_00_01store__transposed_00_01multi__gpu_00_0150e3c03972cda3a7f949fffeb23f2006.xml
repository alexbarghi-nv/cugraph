<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006" kind="class" language="C++" prot="public">
    <compoundname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</compoundname>
    <basecompoundref refid="classcugraph_1_1detail_1_1graph__base__t" prot="public" virt="non-virtual">cugraph::detail::graph_base_t&lt; vertex_t, edge_t &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename vertex_t</type>
      </param>
      <param>
        <type>typename edge_t</type>
      </param>
      <param>
        <type>bool</type>
        <declname>store_transposed</declname>
        <defname>store_transposed</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>multi_gpu</declname>
        <defname>multi_gpu</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1ab4b30b410cf572ac3790ba20c61b60f4" prot="public" static="no">
        <type>vertex_t</type>
        <definition>using cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::vertex_type =  vertex_t</definition>
        <argsstring></argsstring>
        <name>vertex_type</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::vertex_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="269" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a2690d6a6b6742c503e4973e11352539b" prot="public" static="no">
        <type>edge_t</type>
        <definition>using cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::edge_type =  edge_t</definition>
        <argsstring></argsstring>
        <name>edge_type</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::edge_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="270" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a75e18d799c43bc3f20d743a2c6d1e2a0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::is_storage_transposed</definition>
        <argsstring></argsstring>
        <name>is_storage_transposed</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::is_storage_transposed</qualifiedname>
        <initializer>= store_transposed</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="271" column="25" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a6e2a5f61e63c32c895b824062a0b585b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::is_multi_gpu</definition>
        <argsstring></argsstring>
        <name>is_multi_gpu</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::is_multi_gpu</qualifiedname>
        <initializer>= multi_gpu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="272" column="25" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a13f8384f46c251c4af90e490114ddc48" prot="private" static="no" mutable="no">
        <type>rmm::device_uvector&lt; edge_t &gt;</type>
        <definition>rmm::device_uvector&lt;edge_t&gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::offsets_</definition>
        <argsstring></argsstring>
        <name>offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::offsets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="297" column="23" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1ade3b5c3ee5aae631f9f3947831936abb" prot="private" static="no" mutable="no">
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt;vertex_t&gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::indices_</definition>
        <argsstring></argsstring>
        <name>indices_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::indices_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="298" column="23" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1af9d5b1f500f47a5aab8661824524307e" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::vector&lt; vertex_t &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;vertex_t&gt; &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::segment_offsets_</definition>
        <argsstring></argsstring>
        <name>segment_offsets_</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::segment_offsets_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="301" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a4c4f3250b53314fb8c5f839fa5e249cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::graph_t</definition>
        <argsstring>(raft::handle_t const &amp;handle)</argsstring>
        <name>graph_t</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::graph_t</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="274" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1ae5721565c738027e9c1990d75d8f7fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::graph_t</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; edge_t &gt; &amp;&amp;offsets, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;indices, graph_meta_t&lt; vertex_t, edge_t, multi_gpu &gt; meta, bool do_expensive_check=false)</argsstring>
        <name>graph_t</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::graph_t</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; edge_t &gt; &amp;&amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="structcugraph_1_1graph__meta__t" kindref="compound">graph_meta_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>meta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="279" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/graph_impl.cuh" bodystart="445" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a9fdd756c8dd76e8be5fa09a0a734c82f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>edge_t</type>
        <definition>edge_t cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::number_of_edges</definition>
        <argsstring>() const</argsstring>
        <name>number_of_edges</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::number_of_edges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="285" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1af02042b873fec75e57bbced5e524c5ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;</type>
        <definition>graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <qualifiedname>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="287" column="16" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="287" bodyend="294"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>cugraph::detail::graph_base_t&lt; vertex_t, edge_t &gt;</label>
        <link refid="classcugraph_1_1detail_1_1graph__base__t"/>
      </node>
      <node id="1">
        <label>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</label>
        <link refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>cugraph::detail::graph_base_t&lt; vertex_t, edge_t &gt;</label>
        <link refid="classcugraph_1_1detail_1_1graph__base__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>cugraph::graph_properties_t</label>
        <link refid="structcugraph_1_1graph__properties__t"/>
      </node>
      <node id="1">
        <label>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</label>
        <link refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" line="266" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph.hpp" bodystart="267" bodyend="302"/>
    <listofallmembers>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a2690d6a6b6742c503e4973e11352539b" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>edge_type</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a7a9df91ee97968b4ac4a8c6e4e76322d" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>graph_base_t</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a92672d04b55c1567c6caab38ba99f2c8" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>graph_base_t</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a4c4f3250b53314fb8c5f839fa5e249cf" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>graph_t</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1ae5721565c738027e9c1990d75d8f7fc6" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>graph_t</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1ade3b5c3ee5aae631f9f3947831936abb" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>indices_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a6e2a5f61e63c32c895b824062a0b585b" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>is_multi_gpu</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1aee46ec7b42f817d38b3a32c1aa6ef156" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>is_multigraph</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a75e18d799c43bc3f20d743a2c6d1e2a0" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>is_storage_transposed</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1af13d3ba658cdd243dcf228a101858e02" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>is_symmetric</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a9b1a0f1fe4e5e884d9c21763780c3113" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>is_valid_vertex</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a8773c2a6305511e304b94091b3d0e243" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>is_valid_vertex</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a9fdd756c8dd76e8be5fa09a0a734c82f" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>number_of_edges</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a064e94604dad97e682ac6247f5564c0f" prot="protected" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>number_of_edges_</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1ae8c1be99c2769729aee7ad7bd240f757" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>number_of_vertices</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1a13f8384f46c251c4af90e490114ddc48" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>offsets_</name></member>
      <member refid="classcugraph_1_1detail_1_1graph__base__t_1a83dfc840fcbc0905e964f97d917045f5" prot="protected" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>properties_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1af9d5b1f500f47a5aab8661824524307e" prot="private" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>segment_offsets_</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1ab4b30b410cf572ac3790ba20c61b60f4" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>vertex_type</name></member>
      <member refid="classcugraph_1_1graph__t_3_01vertex__t_00_01edge__t_00_01store__transposed_00_01multi__gpu_00_0150e3c03972cda3a7f949fffeb23f2006_1af02042b873fec75e57bbced5e524c5ff" prot="public" virt="non-virtual"><scope>cugraph::graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu, std::enable_if_t&lt;!multi_gpu &gt; &gt;</scope><name>view</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
