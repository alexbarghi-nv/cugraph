<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="namespacecugraph_1_1detail" kind="namespace" language="C++">
    <compoundname>cugraph::detail</compoundname>
    <innerclass refid="structcugraph_1_1detail_1_1accumulate__vertex__property__t" prot="public">cugraph::detail::accumulate_vertex_property_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1axpy__functor" prot="public">cugraph::detail::axpy_functor</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1biased__selector" prot="public">cugraph::detail::biased_selector</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1call__e__op__t" prot="public">cugraph::detail::call_e_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1call__e__op__with__key__t" prot="public">cugraph::detail::call_e_op_with_key_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1call__intersection__op__t" prot="public">cugraph::detail::call_intersection_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1call__key__aggregated__e__op__t" prot="public">cugraph::detail::call_key_aggregated_e_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1check__bit__set__t" prot="public">cugraph::detail::check_bit_set_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1check__edge__src__and__dst__t" prot="public">cugraph::detail::check_edge_src_and_dst_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1check__in__range__t" prot="public">cugraph::detail::check_in_range_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1check__invalid__bucket__idx__t" prot="public">cugraph::detail::check_invalid_bucket_idx_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1check__invalid__t" prot="public">cugraph::detail::check_invalid_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1check__out__of__range__t" prot="public">cugraph::detail::check_out_of_range_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1cluster__update__op__t" prot="public">cugraph::detail::cluster_update_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1col__indx__extract__t" prot="public">cugraph::detail::col_indx_extract_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__chunk__id__t" prot="public">cugraph::detail::compute_chunk_id_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__edge__partition__id__from__ext__edge__endpoints__t" prot="public">cugraph::detail::compute_edge_partition_id_from_ext_edge_endpoints_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__edge__partition__id__from__int__edge__endpoints__t" prot="public">cugraph::detail::compute_edge_partition_id_from_int_edge_endpoints_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__gpu__id__from__ext__edge__endpoints__t" prot="public">cugraph::detail::compute_gpu_id_from_ext_edge_endpoints_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__gpu__id__from__ext__vertex__t" prot="public">cugraph::detail::compute_gpu_id_from_ext_vertex_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__gpu__id__from__int__edge__endpoints__t" prot="public">cugraph::detail::compute_gpu_id_from_int_edge_endpoints_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__gpu__id__from__int__vertex__t" prot="public">cugraph::detail::compute_gpu_id_from_int_vertex_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__group__id__count__pair__t" prot="public">cugraph::detail::compute_group_id_count_pair_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__edge__partition__id__from__ext__edge__endpoints__t" prot="public">cugraph::detail::compute_local_edge_partition_id_from_ext_edge_endpoints_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__edge__partition__id__from__int__edge__endpoints__t" prot="public">cugraph::detail::compute_local_edge_partition_id_from_int_edge_endpoints_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__edge__partition__id__t" prot="public">cugraph::detail::compute_local_edge_partition_id_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__edge__partition__major__range__vertex__partition__id__t" prot="public">cugraph::detail::compute_local_edge_partition_major_range_vertex_partition_id_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__edge__partition__minor__range__vertex__partition__id__t" prot="public">cugraph::detail::compute_local_edge_partition_minor_range_vertex_partition_id_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__nbr__count__per__rank__t" prot="public">cugraph::detail::compute_local_nbr_count_per_rank_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__local__value__displacements__and__global__value__t" prot="public">cugraph::detail::compute_local_value_displacements_and_global_value_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__max" prot="public">cugraph::detail::compute_max</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__max__distance" prot="public">cugraph::detail::compute_max_distance</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__thrust__tuple__element__sizes__impl" prot="public">cugraph::detail::compute_thrust_tuple_element_sizes_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__thrust__tuple__element__sizes__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::compute_thrust_tuple_element_sizes_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__vertex__partition__id__from__ext__vertex__t" prot="public">cugraph::detail::compute_vertex_partition_id_from_ext_vertex_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1compute__vertex__partition__id__from__int__vertex__t" prot="public">cugraph::detail::compute_vertex_partition_id_from_int_vertex_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1constant__e__bias__op__t" prot="public">cugraph::detail::constant_e_bias_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1convert__pair__to__quadruplet__t" prot="public">cugraph::detail::convert_pair_to_quadruplet_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1coo__convertor__t" prot="public">cugraph::detail::coo_convertor_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1copy__intersecting__nbrs__and__update__intersection__size__t" prot="public">cugraph::detail::copy_intersecting_nbrs_and_update_intersection_size_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1count__if__call__v__op__t" prot="public">cugraph::detail::count_if_call_v_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1count__t" prot="public">cugraph::detail::count_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1count__updown__moves__op__t" prot="public">cugraph::detail::count_updown_moves_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1count__valids__t" prot="public">cugraph::detail::count_valids_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1dangling__functor" prot="public">cugraph::detail::dangling_functor</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1decrement__position" prot="public">cugraph::detail::decrement_position</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__allgatherv__tuple__iterator__element__impl" prot="public">cugraph::detail::device_allgatherv_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__allgatherv__tuple__iterator__element__impl_3_01InputIterator_daf9abc0122b019bf39ddeee7a020c62" prot="public">cugraph::detail::device_allgatherv_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__allreduce__tuple__iterator__element__impl" prot="public">cugraph::detail::device_allreduce_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__allreduce__tuple__iterator__element__impl_3_01InputIterator_075e07e9e78db1a5b9be0c548a1cd9996" prot="public">cugraph::detail::device_allreduce_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__bcast__tuple__iterator__element__impl" prot="public">cugraph::detail::device_bcast_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__bcast__tuple__iterator__element__impl_3_01InputIterator_00_012c4a617cf0b2ad410e7bbfa21be007a8" prot="public">cugraph::detail::device_bcast_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__gatherv__tuple__iterator__element__impl" prot="public">cugraph::detail::device_gatherv_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__gatherv__tuple__iterator__element__impl_3_01InputIterator_00_adca5cd20a3e2125ac076f51c90a182f" prot="public">cugraph::detail::device_gatherv_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__irecv__tuple__iterator__element__impl" prot="public">cugraph::detail::device_irecv_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__irecv__tuple__iterator__element__impl_3_01InputIterator_00_01a091a261612361c386b6a3a3ce90d85f" prot="public">cugraph::detail::device_irecv_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__isend__tuple__iterator__element__impl" prot="public">cugraph::detail::device_isend_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__isend__tuple__iterator__element__impl_3_01InputIterator_00_0111bd8c4dcb90c3625daa6115c37feba9" prot="public">cugraph::detail::device_isend_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__multicast__sendrecv__tuple__iterator__element__impl" prot="public">cugraph::detail::device_multicast_sendrecv_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__multicast__sendrecv__tuple__iterator__element__impl_3_01Input210f8d1b2ec5d5542d03b7064de60271" prot="public">cugraph::detail::device_multicast_sendrecv_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__reduce__tuple__iterator__element__impl" prot="public">cugraph::detail::device_reduce_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__reduce__tuple__iterator__element__impl_3_01InputIterator_00_0e48bfdfa5f45c0bb58ba3514ccce34a9" prot="public">cugraph::detail::device_reduce_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__sendrecv__tuple__iterator__element__impl" prot="public">cugraph::detail::device_sendrecv_tuple_iterator_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1device__sendrecv__tuple__iterator__element__impl_3_01InputIterator_0093750449c15e1056f2a5a41d8e4e7078" prot="public">cugraph::detail::device_sendrecv_tuple_iterator_element_impl&lt; InputIterator, OutputIterator, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1divider__t" prot="public">cugraph::detail::divider_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__endpoint__dummy__property__view__t" prot="public">cugraph::detail::edge_endpoint_dummy_property_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__major__property__t" prot="public">cugraph::detail::edge_major_property_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__major__property__view__t" prot="public">cugraph::detail::edge_major_property_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__minor__property__t" prot="public">cugraph::detail::edge_minor_property_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__minor__property__view__t" prot="public">cugraph::detail::edge_minor_property_view_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1edge__op__result__type" prot="public">cugraph::detail::edge_op_result_type</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1edge__op__result__type_3_01key__t_00_01vertex__t_00_01src__value__t_0372bdb0a368f12eb301b801e68e6c8f8" prot="public">cugraph::detail::edge_op_result_type&lt; key_t, vertex_t, src_value_t, dst_value_t, e_value_t, EdgeOp, std::enable_if_t&lt; std::is_invocable_v&lt; EdgeOp, key_t, vertex_t, src_value_t, dst_value_t, e_value_t &gt; &gt; &gt;</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__partition__device__view__base__t" prot="public">cugraph::detail::edge_partition_device_view_base_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__partition__edge__dummy__property__device__view__t" prot="public">cugraph::detail::edge_partition_edge_dummy_property_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" prot="public">cugraph::detail::edge_partition_edge_property_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__partition__endpoint__dummy__property__device__view__t" prot="public">cugraph::detail::edge_partition_endpoint_dummy_property_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__partition__endpoint__property__device__view__t" prot="public">cugraph::detail::edge_partition_endpoint_property_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1edge__partition__view__base__t" prot="public">cugraph::detail::edge_partition_view_base_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1extract__p__r__q__r" prot="public">cugraph::detail::extract_p_r_q_r</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1extract__q__r" prot="public">cugraph::detail::extract_q_r</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1find__nth__valid__nbr__idx__t" prot="public">cugraph::detail::find_nth_valid_nbr_idx_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1find__unused__id__t" prot="public">cugraph::detail::find_unused_id_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1gatherv__indices__t" prot="public">cugraph::detail::gatherv_indices_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1graph__base__t" prot="public">cugraph::detail::graph_base_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1hash__src__dst__pair" prot="public">cugraph::detail::hash_src_dst_pair</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl" prot="public">cugraph::detail::host_allreduce_tuple_scalar_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__allreduce__tuple__scalar__element__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::host_allreduce_tuple_scalar_element_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl" prot="public">cugraph::detail::host_reduce_tuple_scalar_element_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1host__reduce__tuple__scalar__element__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::host_reduce_tuple_scalar_element_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1indirection__compare__less__t" prot="public">cugraph::detail::indirection_compare_less_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1indirection__if__idx__valid__t" prot="public">cugraph::detail::indirection_if_idx_valid_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1indirection__t" prot="public">cugraph::detail::indirection_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1induced__subgraph__unweighted__edge__op" prot="public">cugraph::detail::induced_subgraph_unweighted_edge_op</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1induced__subgraph__weighted__edge__op" prot="public">cugraph::detail::induced_subgraph_weighted_edge_op</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1intersection__op__result__type" prot="public">cugraph::detail::intersection_op_result_type</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1intersection__op__result__type_3_01vertex__t_00_01src__value__t_00_0157a520760241d19d29bd1b79d5e0ae93" prot="public">cugraph::detail::intersection_op_result_type&lt; vertex_t, src_value_t, dst_value_t, IntersectionOp, std::enable_if_t&lt; std::is_invocable_v&lt; IntersectionOp, vertex_t, vertex_t, src_value_t, dst_value_t, raft::device_span&lt; vertex_t const &gt; &gt; &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1invalidate__if__not__first__in__run__t" prot="public">cugraph::detail::invalidate_if_not_first_in_run_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__equal__t" prot="public">cugraph::detail::is_equal_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__first__in__run__t" prot="public">cugraph::detail::is_first_in_run_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__invalid__input__vertex__pair__t" prot="public">cugraph::detail::is_invalid_input_vertex_pair_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__not__equal__t" prot="public">cugraph::detail::is_not_equal_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__thrust__tuple__of__arithemetic__impl" prot="public">cugraph::detail::is_thrust_tuple_of_arithemetic_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__thrust__tuple__of__arithemetic__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::is_thrust_tuple_of_arithemetic_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__valid__vertex__t" prot="public">cugraph::detail::is_valid_vertex_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1is__zero" prot="public">cugraph::detail::is_zero</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1jaccard__functor__t" prot="public">cugraph::detail::jaccard_functor_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1key__aggregated__edge__op__t" prot="public">cugraph::detail::key_aggregated_edge_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1key__binary__search__contains__op__t" prot="public">cugraph::detail::key_binary_search_contains_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1key__binary__search__store__device__view__t" prot="public">cugraph::detail::key_binary_search_store_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1key__binary__search__store__t" prot="public">cugraph::detail::key_binary_search_store_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1key__binary__search__store__view__t" prot="public">cugraph::detail::key_binary_search_store_view_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1key__cuco__store__contains__device__view__t" prot="public">cugraph::detail::key_cuco_store_contains_device_view_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1key__cuco__store__insert__device__view__t" prot="public">cugraph::detail::key_cuco_store_insert_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1key__cuco__store__t" prot="public">cugraph::detail::key_cuco_store_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1key__cuco__store__view__t" prot="public">cugraph::detail::key_cuco_store_view_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1key__group__id__less__t" prot="public">cugraph::detail::key_group_id_less_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__binary__search__contains__op__t" prot="public">cugraph::detail::kv_binary_search_contains_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__binary__search__find__op__t" prot="public">cugraph::detail::kv_binary_search_find_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__binary__search__store__device__view__t" prot="public">cugraph::detail::kv_binary_search_store_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1kv__binary__search__store__t" prot="public">cugraph::detail::kv_binary_search_store_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1kv__binary__search__store__view__t" prot="public">cugraph::detail::kv_binary_search_store_view_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__cuco__insert__and__assign__t" prot="public">cugraph::detail::kv_cuco_insert_and_assign_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__cuco__insert__and__increment__t" prot="public">cugraph::detail::kv_cuco_insert_and_increment_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__cuco__insert__if__and__increment__t" prot="public">cugraph::detail::kv_cuco_insert_if_and_increment_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__cuco__store__find__device__view__t" prot="public">cugraph::detail::kv_cuco_store_find_device_view_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1kv__cuco__store__t" prot="public">cugraph::detail::kv_cuco_store_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1kv__cuco__store__view__t" prot="public">cugraph::detail::kv_cuco_store_view_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__pair__group__id__greater__equal__t" prot="public">cugraph::detail::kv_pair_group_id_greater_equal_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1kv__pair__group__id__less__t" prot="public">cugraph::detail::kv_pair_group_id_less_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1leiden__key__aggregated__edge__op__t" prot="public">cugraph::detail::leiden_key_aggregated_edge_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1local__degree__op__t" prot="public">cugraph::detail::local_degree_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1local__degree__with__mask__op__t" prot="public">cugraph::detail::local_degree_with_mask_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1major__to__group__idx__t" prot="public">cugraph::detail::major_to_group_idx_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1map__index__to__path__offset" prot="public">cugraph::detail::map_index_to_path_offset</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1minor__to__key__t" prot="public">cugraph::detail::minor_to_key_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1multiplier__t" prot="public">cugraph::detail::multiplier_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1multiply__and__add__t" prot="public">cugraph::detail::multiply_and_add_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1node2vec__selector" prot="public">cugraph::detail::node2vec_selector</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1optional__dataframe__buffer__value__type__t" prot="public">cugraph::detail::optional_dataframe_buffer_value_type_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1optional__dataframe__buffer__value__type__t_3_01Iterator_00_01std_1_1a22cf8228c1868ffc71be5d29ca2d806" prot="public">cugraph::detail::optional_dataframe_buffer_value_type_t&lt; Iterator, std::enable_if_t&lt; std::is_same_v&lt; Iterator, void * &gt; &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1optional__dataframe__buffer__value__type__t_3_01Iterator_00_01std_1_1c0607fdd3820a326e1b0e2fde6701bc9" prot="public">cugraph::detail::optional_dataframe_buffer_value_type_t&lt; Iterator, std::enable_if_t&lt;!std::is_same_v&lt; Iterator, void * &gt; &gt; &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1overlap__functor__t" prot="public">cugraph::detail::overlap_functor_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1pack__bool__t" prot="public">cugraph::detail::pack_bool_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1pair__to__binary__partition__id__t" prot="public">cugraph::detail::pair_to_binary_partition_id_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1pick__min__degree__t" prot="public">cugraph::detail::pick_min_degree_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1random__walker__t" prot="public">cugraph::detail::random_walker_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1rebase__offset__t" prot="public">cugraph::detail::rebase_offset_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1reduce__op__t" prot="public">cugraph::detail::reduce_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1reduce__with__init__t" prot="public">cugraph::detail::reduce_with_init_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1reorder__group__count__t" prot="public">cugraph::detail::reorder_group_count_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1return__edge__weight__t" prot="public">cugraph::detail::return_edge_weight_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1return__edges__with__properties__e__op" prot="public">cugraph::detail::return_edges_with_properties_e_op</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1return__one__t" prot="public">cugraph::detail::return_one_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1return__value__compute__offset__t" prot="public">cugraph::detail::return_value_compute_offset_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1rrandom__gen__t" prot="public">cugraph::detail::rrandom_gen_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1sample__edges__op__t" prot="public">cugraph::detail::sample_edges_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1search__and__increment__degree__t" prot="public">cugraph::detail::search_and_increment_degree_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1segmented__fill__t" prot="public">cugraph::detail::segmented_fill_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1sg__lookup__predecessor" prot="public">cugraph::detail::sg_lookup_predecessor</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1shift__left__t" prot="public">cugraph::detail::shift_left_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1shift__right__t" prot="public">cugraph::detail::shift_right_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1shuffle__index__compute__offset__t" prot="public">cugraph::detail::shuffle_index_compute_offset_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1shuffle__to__output__comm__rank__t" prot="public">cugraph::detail::shuffle_to_output_comm_rank_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1sorensen__functor__t" prot="public">cugraph::detail::sorensen_functor_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1square" prot="public">cugraph::detail::square</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1strided__accumulate__t" prot="public">cugraph::detail::strided_accumulate_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1strided__sum__t" prot="public">cugraph::detail::strided_sum_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1transform__and__atomic__reduce__t" prot="public">cugraph::detail::transform_and_atomic_reduce_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1transform__local__nbr__indices__t" prot="public">cugraph::detail::transform_local_nbr_indices_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1transform__reduce__call__v__op__t" prot="public">cugraph::detail::transform_reduce_call_v_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1transform__reduce__v__frontier__call__e__op__t" prot="public">cugraph::detail::transform_reduce_v_frontier_call_e_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1tuple__to__minor__comm__rank__t" prot="public">cugraph::detail::tuple_to_minor_comm_rank_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1typecast__t" prot="public">cugraph::detail::typecast_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1uniform__selector" prot="public">cugraph::detail::uniform_selector</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__e__value__t" prot="public">cugraph::detail::update_e_value_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__edges__p__r__q__r__num__triangles" prot="public">cugraph::detail::update_edges_p_r_q_r_num_triangles</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__paths" prot="public">cugraph::detail::update_paths</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__rx__major__local__degree__t" prot="public">cugraph::detail::update_rx_major_local_degree_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__rx__major__local__nbrs__t" prot="public">cugraph::detail::update_rx_major_local_nbrs_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl" prot="public">cugraph::detail::update_tuple_from_vector_of_tuple_scalar_elements_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__tuple__from__vector__of__tuple__scalar__elements__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::update_tuple_from_vector_of_tuple_scalar_elements_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__v__frontier__call__v__op__t" prot="public">cugraph::detail::update_v_frontier_call_v_op_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__v__frontier__call__v__op__t_3_01vertex__t_00_01VertexValueInpc991eb4351f1b215d3bb73296cffaad9" prot="public">cugraph::detail::update_v_frontier_call_v_op_t&lt; vertex_t, VertexValueInputIterator, VertexValueOutputIterator, VertexOp, key_t, void &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl" prot="public">cugraph::detail::update_vector_of_tuple_scalar_elements_from_tuple_impl</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1update__vector__of__tuple__scalar__elements__from__tuple__impl_3_01TupleType_00_01I_00_01I_01_4" prot="public">cugraph::detail::update_vector_of_tuple_scalar_elements_from_tuple_impl&lt; TupleType, I, I &gt;</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1value__group__id__greater__equal__t" prot="public">cugraph::detail::value_group_id_greater_equal_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1value__group__id__less__t" prot="public">cugraph::detail::value_group_id_less_t</innerclass>
    <innerclass refid="structcugraph_1_1detail_1_1vertex__local__offset__t" prot="public">cugraph::detail::vertex_local_offset_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1vertex__partition__device__view__base__t" prot="public">cugraph::detail::vertex_partition_device_view_base_t</innerclass>
    <innerclass refid="classcugraph_1_1detail_1_1vertex__partition__view__base__t" prot="public">cugraph::detail::vertex_partition_view_base_t</innerclass>
    <innernamespace refid="namespacecugraph_1_1detail_1_1original">cugraph::detail::original</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="key__store_8cuh_1acf18d050d89c144399e771ef511f1a69" prot="public" static="no">
        <type>cuco::storage&lt; 1 &gt;</type>
        <definition>typedef cuco::storage&lt; 1 &gt; cugraph::detail::cuco_storage_type =  cuco::storage&lt;1&gt;</definition>
        <argsstring></argsstring>
        <name>cuco_storage_type</name>
        <qualifiedname>cugraph::detail::cuco_storage_type</qualifiedname>
        <briefdescription>
<para>cuco window storage type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/key_store.cuh" line="39" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/key_store.cuh" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="bh__kernels_8cuh_1a21725036846abcd2a7e8d08f31287cd9" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict cugraph::detail::childd</definition>
        <argsstring></argsstring>
        <name>childd</name>
        <qualifiedname>cugraph::detail::childd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="72" column="82" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a54d18a7e3a167e9f781e63cf831b597a" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict cugraph::detail::massd</definition>
        <argsstring></argsstring>
        <name>massd</name>
        <qualifiedname>cugraph::detail::massd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="73" column="82" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ab05bfd30e9654457f8e56d53fc92c0d3" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict cugraph::detail::posxd</definition>
        <argsstring></argsstring>
        <name>posxd</name>
        <qualifiedname>cugraph::detail::posxd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="74" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae0d73dc1349aadd6fc4deb5c668c0745" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict cugraph::detail::posyd</definition>
        <argsstring></argsstring>
        <name>posyd</name>
        <qualifiedname>cugraph::detail::posyd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="75" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ab8ba6783c90fedc4279b9a5c62bd4406" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict</type>
        <definition>__global__ int* restrict int* restrict float* restrict float* restrict float* restrict cugraph::detail::maxxd</definition>
        <argsstring></argsstring>
        <name>maxxd</name>
        <qualifiedname>cugraph::detail::maxxd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="76" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a5fb20ce14602918744d6e1704af0603e" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict</type>
        <definition>__global__ int* restrict int* restrict float* restrict float* restrict float* restrict float* restrict cugraph::detail::maxyd</definition>
        <argsstring></argsstring>
        <name>maxyd</name>
        <qualifiedname>cugraph::detail::maxyd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="77" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a1f8366880e6e467de72bd417a0760842" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict</type>
        <definition>__global__ int* restrict int* restrict float* restrict float* restrict float* restrict float* restrict float* restrict cugraph::detail::minxd</definition>
        <argsstring></argsstring>
        <name>minxd</name>
        <qualifiedname>cugraph::detail::minxd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="78" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1abebbec88c03d7b0c59cc68e9094ce489" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict float *restrict</type>
        <definition>__global__ int* restrict int* restrict float* restrict float* restrict float* restrict float* restrict float* restrict float* restrict cugraph::detail::minyd</definition>
        <argsstring></argsstring>
        <name>minyd</name>
        <qualifiedname>cugraph::detail::minyd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="79" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a13151a785fb3925fc761b2e00f74d5eb" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict float *restrict const int</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict const float const int const int cugraph::detail::FOUR_NNODES</definition>
        <argsstring></argsstring>
        <name>FOUR_NNODES</name>
        <qualifiedname>cugraph::detail::FOUR_NNODES</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="80" column="79" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a98996afd69c9defcfa224598c43659a1" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict float *restrict const int const int</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict const float const int cugraph::detail::NNODES</definition>
        <argsstring></argsstring>
        <name>NNODES</name>
        <qualifiedname>cugraph::detail::NNODES</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="81" column="79" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a5593e72a128d4ec56702583bf2a8ee7e" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict float *restrict const int const int const int</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict const float const int const int const int cugraph::detail::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>cugraph::detail::N</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="82" column="79" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a3595712843ef5dd32597c9d3fe768acb" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict float *restrict const int const int const int unsigned *restrict</type>
        <definition>int cugraph::detail::limiter</definition>
        <argsstring></argsstring>
        <name>limiter</name>
        <qualifiedname>cugraph::detail::limiter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="83" column="87" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1aeab7ab1b96a894b8f206586f4e6fb8c5" prot="public" static="no" mutable="no">
        <type>__global__ int *restrict int *restrict float *restrict float *restrict float *restrict float *restrict float *restrict float *restrict const int const int const int unsigned *restrict float *restrict</type>
        <definition>static __global__ const float *restrict const float *restrict const int const int int *restrict int *restrict const float *restrict cugraph::detail::radiusd</definition>
        <argsstring></argsstring>
        <name>radiusd</name>
        <qualifiedname>cugraph::detail::radiusd</qualifiedname>
        <initializer>{
  float val, minx, maxx, miny, maxy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="84" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a04d2e0d323d692249ff8aad9cd847a57" prot="public" static="no" mutable="no">
        <type>__shared__ float</type>
        <definition>cugraph::detail::sminx[i]</definition>
        <argsstring>[THREADS1]</argsstring>
        <name>sminx</name>
        <qualifiedname>cugraph::detail::sminx</qualifiedname>
        <initializer>= minx</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="87" column="20" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae53f2c86c3a8483f40e643f4cc1f8b94" prot="public" static="no" mutable="no">
        <type>__shared__ float</type>
        <definition>cugraph::detail::smaxx[i]</definition>
        <argsstring>[THREADS1]</argsstring>
        <name>smaxx</name>
        <qualifiedname>cugraph::detail::smaxx</qualifiedname>
        <initializer>= maxx</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="87" column="26" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a57ecb8922b27c7c85fe45a11ce7ec463" prot="public" static="no" mutable="no">
        <type>__shared__ float</type>
        <definition>cugraph::detail::sminy[i]</definition>
        <argsstring>[THREADS1]</argsstring>
        <name>sminy</name>
        <qualifiedname>cugraph::detail::sminy</qualifiedname>
        <initializer>= miny</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="87" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a3f7cadba1c178ab7a7ec8a43fe6ee898" prot="public" static="no" mutable="no">
        <type>__shared__ float</type>
        <definition>cugraph::detail::smaxy[i]</definition>
        <argsstring>[THREADS1]</argsstring>
        <name>smaxy</name>
        <qualifiedname>cugraph::detail::smaxy</qualifiedname>
        <initializer>= maxy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="87" column="38" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1aaaf1de027a94b27385aaaee4fb117b9a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cugraph::detail::minx</definition>
        <argsstring></argsstring>
        <name>minx</name>
        <qualifiedname>cugraph::detail::minx</qualifiedname>
        <initializer>= maxx = posxd[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="90" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ac5447877e31157a6f97c8f19a5033adb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cugraph::detail::miny</definition>
        <argsstring></argsstring>
        <name>miny</name>
        <qualifiedname>cugraph::detail::miny</qualifiedname>
        <initializer>= maxy = posyd[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="91" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a963c2d9e8b785676f1b4db75507217e1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>int cugraph::detail::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <qualifiedname>cugraph::detail::i</qualifiedname>
        <initializer>= threadIdx.x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="94" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae3caa103a4daa227951d7c1920f74142" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::inc</definition>
        <argsstring></argsstring>
        <name>inc</name>
        <qualifiedname>cugraph::detail::inc</qualifiedname>
        <initializer>= THREADS1 * gridDim.x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="95" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae30c5045387d1dc1dccf5cdca312af57" prot="public" static="no" mutable="no">
        <type>__global__ const int const int</type>
        <definition>__global__ const int const int cugraph::detail::FOUR_N</definition>
        <argsstring></argsstring>
        <name>FOUR_N</name>
        <qualifiedname>cugraph::detail::FOUR_N</qualifiedname>
        <initializer>{
  const int inc = blockDim.x * gridDim.x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="164" column="74" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a966592016e51c7f5fa346f3ab90b5f1b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <qualifiedname>cugraph::detail::k</qualifiedname>
        <initializer>= (FOUR_N &amp; -32) + threadIdx.x + blockIdx.x * blockDim.x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="167" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a4e8feb6c48f01c5f5be8778a43a90144" prot="public" static="no" mutable="no">
        <type>__global__ const float *restrict const float *restrict const int const int int *restrict</type>
        <definition>static __global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict const float const int const int const int const float *restrict const int *restrict cugraph::detail::maxdepthd</definition>
        <argsstring></argsstring>
        <name>maxdepthd</name>
        <qualifiedname>cugraph::detail::maxdepthd</qualifiedname>
        <initializer>{
  __shared__ int pos[THREADS5], node[THREADS5]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="185" column="83" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a06f50393f898ca1838786236ed4269a9" prot="public" static="no" mutable="no">
        <type>__global__ const float *restrict const float *restrict const int const int int *restrict int *restrict</type>
        <definition>static __global__ const int *restrict volatile int *restrict int *restrict const int const int const int *restrict cugraph::detail::bottomd</definition>
        <argsstring></argsstring>
        <name>bottomd</name>
        <qualifiedname>cugraph::detail::bottomd</qualifiedname>
        <initializer>{
  const int bottom = bottomd[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="186" column="83" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a59ca52fdcb4d15ad070ea58e1922922b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float cugraph::detail::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>cugraph::detail::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="190" column="9" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ac732b81162833bdf8b6f065bd40cd9f1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float cugraph::detail::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>cugraph::detail::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="190" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ac9e8c172b04dd743d1b33121d38a9b72" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float cugraph::detail::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <qualifiedname>cugraph::detail::r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="190" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ab94568b5beb24ca13ca248ff32df90c3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float cugraph::detail::px</definition>
        <argsstring></argsstring>
        <name>px</name>
        <qualifiedname>cugraph::detail::px</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="191" column="9" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a157adc7dbc3230fc5959e00f96ee9d41" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float cugraph::detail::py</definition>
        <argsstring></argsstring>
        <name>py</name>
        <qualifiedname>cugraph::detail::py</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="191" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a0a9778f5101667dffa75deaac6eeeda1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::ch</definition>
        <argsstring></argsstring>
        <name>ch</name>
        <qualifiedname>cugraph::detail::ch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="192" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a38cc43ca13deb19df56d7625651d6eee" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>cugraph::detail::n</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="192" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a24585afae7257cb36b7d6da9c5fb1aaf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::locked</definition>
        <argsstring></argsstring>
        <name>locked</name>
        <qualifiedname>cugraph::detail::locked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="192" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a73635c8c0cee4163daf1a2057abac3a1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::patch</definition>
        <argsstring></argsstring>
        <name>patch</name>
        <qualifiedname>cugraph::detail::patch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="192" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ab95b1fb2acbb85c93e6a7b99001c74e5" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float cugraph::detail::radius</definition>
        <argsstring></argsstring>
        <name>radius</name>
        <qualifiedname>cugraph::detail::radius</qualifiedname>
        <initializer>= radiusd[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="195" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a5c1571bb40daf3cdf5e9c985f1bdf5b5" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float cugraph::detail::rootx</definition>
        <argsstring></argsstring>
        <name>rootx</name>
        <qualifiedname>cugraph::detail::rootx</qualifiedname>
        <initializer>= posxd[NNODES]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="196" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ad2d7a68f2501c88443b2bd4cfa51af8b" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float cugraph::detail::rooty</definition>
        <argsstring></argsstring>
        <name>rooty</name>
        <qualifiedname>cugraph::detail::rooty</qualifiedname>
        <initializer>= posyd[NNODES]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="197" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a9491a2ebbab8f7c2899ef3ff0c6ddf22" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::localmaxdepth</definition>
        <argsstring></argsstring>
        <name>localmaxdepth</name>
        <qualifiedname>cugraph::detail::localmaxdepth</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="199" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a93dd657e71b0b86a5ac9be8451bf9b84" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::skip</definition>
        <argsstring></argsstring>
        <name>skip</name>
        <qualifiedname>cugraph::detail::skip</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="200" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a2cb8f074e7a43cbd31b7ef9003551db6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float cugraph::detail::cm</definition>
        <argsstring></argsstring>
        <name>cm</name>
        <qualifiedname>cugraph::detail::cm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="332" column="9" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1af77ab17f76b0d07c4e8151b4c5848955" prot="public" static="no" mutable="no">
        <type>__shared__ int</type>
        <definition>__shared__ int cugraph::detail::child[THREADS3 *4]</definition>
        <argsstring>[THREADS3 *4]</argsstring>
        <name>child</name>
        <qualifiedname>cugraph::detail::child</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="333" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a0f21b4839f909b756fb399bb0e931126" prot="public" static="no" mutable="no">
        <type>__shared__ int</type>
        <definition>__shared__ int cugraph::detail::mass[THREADS3 *4]</definition>
        <argsstring>[THREADS3 *4]</argsstring>
        <name>mass</name>
        <qualifiedname>cugraph::detail::mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="334" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a51100ab5a924321f11dc1d7518998a10" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::bottom</definition>
        <argsstring></argsstring>
        <name>bottom</name>
        <qualifiedname>cugraph::detail::bottom</qualifiedname>
        <initializer>= bottomd[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="336" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a9a537bf536aecd4a96104d0d6c1b9e4b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::restart</definition>
        <argsstring></argsstring>
        <name>restart</name>
        <qualifiedname>cugraph::detail::restart</qualifiedname>
        <initializer>= k</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="341" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae66df1e82ac53e259bb2ad603dbcc688" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::j</definition>
        <argsstring></argsstring>
        <name>j</name>
        <qualifiedname>cugraph::detail::j</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="389" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a7851e78611b25d1c41a4a8a53a0b48e1" prot="public" static="no" mutable="no">
        <type>__global__ const int *restrict</type>
        <definition>__global__ const int* restrict cugraph::detail::countd</definition>
        <argsstring></argsstring>
        <name>countd</name>
        <qualifiedname>cugraph::detail::countd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="459" column="81" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a712a4aa1140506d1c9ad35b48989a881" prot="public" static="no" mutable="no">
        <type>__global__ const int *restrict volatile int *restrict</type>
        <definition>__global__ const int* restrict volatile int* restrict cugraph::detail::startd</definition>
        <argsstring></argsstring>
        <name>startd</name>
        <qualifiedname>cugraph::detail::startd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="460" column="84" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1af635acef92f3be82c341f85bdfde7534" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::dec</definition>
        <argsstring></argsstring>
        <name>dec</name>
        <qualifiedname>cugraph::detail::dec</qualifiedname>
        <initializer>= blockDim.x * gridDim.x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="467" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1afca892404f3d11d690b3357e29ed2426" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cugraph::detail::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>cugraph::detail::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="469" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a7325f9cf799a842538eaf081edddf5dd" prot="public" static="no" mutable="no">
        <type>__global__ const float</type>
        <definition>__global__ const float cugraph::detail::theta</definition>
        <argsstring></argsstring>
        <name>theta</name>
        <qualifiedname>cugraph::detail::theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="510" column="55" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a20b570147f814d4909dd5fa31e8e9d69" prot="public" static="no" mutable="no">
        <type>__global__ const float const float</type>
        <definition>__global__ const float const float cugraph::detail::epssqd</definition>
        <argsstring></argsstring>
        <name>epssqd</name>
        <qualifiedname>cugraph::detail::epssqd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="511" column="55" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1af162c51d1877947d99d8314b9400e701" prot="public" static="no" mutable="no">
        <type>__global__ const float const float const int *restrict</type>
        <definition>__global__ const float const float const int* restrict cugraph::detail::sortd</definition>
        <argsstring></argsstring>
        <name>sortd</name>
        <qualifiedname>cugraph::detail::sortd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="512" column="62" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1af44895ae66ad5bfde97076edf7797005" prot="public" static="no" mutable="no">
        <type>__global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict</type>
        <definition>__global__ const float const float const int* restrict const int* restrict const int* restrict const float* restrict const float* restrict float* restrict cugraph::detail::velxd</definition>
        <argsstring></argsstring>
        <name>velxd</name>
        <qualifiedname>cugraph::detail::velxd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="517" column="58" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a20bb5df7bb65c84c6e79c54fe77f744a" prot="public" static="no" mutable="no">
        <type>__global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict</type>
        <definition>__global__ const float const float const int* restrict const int* restrict const int* restrict const float* restrict const float* restrict float* restrict float* restrict cugraph::detail::velyd</definition>
        <argsstring></argsstring>
        <name>velyd</name>
        <qualifiedname>cugraph::detail::velyd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="518" column="58" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a91e090fbf082f321c092b3dd341adbde" prot="public" static="no" mutable="no">
        <type>__global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict const float</type>
        <definition>__global__ const float const float const int* restrict const int* restrict const int* restrict const float* restrict const float* restrict float* restrict float* restrict const float cugraph::detail::theta_squared</definition>
        <argsstring></argsstring>
        <name>theta_squared</name>
        <qualifiedname>cugraph::detail::theta_squared</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="519" column="55" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a2932fa347666238e154294fcb9a3bbb5" prot="public" static="no" mutable="no">
        <type>__global__ const float const float const int *restrict const int *restrict const int *restrict const float *restrict const float *restrict float *restrict float *restrict const float const int const int const int const float *restrict</type>
        <definition>__global__ const float const float const int* restrict const int* restrict const int* restrict const float* restrict const float* restrict float* restrict float* restrict const float const int const int const int const float* restrict cugraph::detail::radiusd_squared</definition>
        <argsstring></argsstring>
        <name>radiusd_squared</name>
        <qualifiedname>cugraph::detail::radiusd_squared</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="523" column="64" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1afa35c871c0773a2a40a58fa57101f9d1" prot="public" static="no" mutable="no">
        <type>__shared__ float</type>
        <definition>cugraph::detail::dq[diff+sbase]</definition>
        <argsstring>[THREADS5]</argsstring>
        <name>dq</name>
        <qualifiedname>cugraph::detail::dq</qualifiedname>
        <initializer>= dq[diff]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="527" column="20" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a5dfc284e586585909e465ff9ffee6c0e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::sbase</definition>
        <argsstring></argsstring>
        <name>sbase</name>
        <qualifiedname>cugraph::detail::sbase</qualifiedname>
        <initializer>= (threadIdx.x / 32) * 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="544" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ad7bd8e5270358e5fe67e1fab4d76ee12" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool cugraph::detail::SBASE_EQ_THREAD</definition>
        <argsstring></argsstring>
        <name>SBASE_EQ_THREAD</name>
        <qualifiedname>cugraph::detail::SBASE_EQ_THREAD</qualifiedname>
        <initializer>= (sbase == threadIdx.x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="545" column="14" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1aa152012e1bb3922039de0805a29953c9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::diff</definition>
        <argsstring></argsstring>
        <name>diff</name>
        <qualifiedname>cugraph::detail::diff</qualifiedname>
        <initializer>= threadIdx.x - sbase</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="547" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a375cf11dd72d4f1c3f1e8b706d97c72a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cugraph::detail::MAX_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_SIZE</name>
        <qualifiedname>cugraph::detail::MAX_SIZE</qualifiedname>
        <initializer>= FOUR_NNODES + 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="555" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae46954b73101ccb497ffa559dbc81374" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict</type>
        <definition>__global__ float* restrict cugraph::detail::Y_y</definition>
        <argsstring></argsstring>
        <name>Y_y</name>
        <qualifiedname>cugraph::detail::Y_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="619" column="82" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1ae79c8b2a91ea972ab8bb932ab1f83cbe" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict</type>
        <definition>__global__ float* restrict const float* restrict cugraph::detail::attract_x</definition>
        <argsstring></argsstring>
        <name>attract_x</name>
        <qualifiedname>cugraph::detail::attract_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="620" column="88" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a36c964646816686bbf287a76dc46db4a" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict cugraph::detail::attract_y</definition>
        <argsstring></argsstring>
        <name>attract_y</name>
        <qualifiedname>cugraph::detail::attract_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="621" column="88" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1afe807ca10d99e14d8cfd40592a23fa68" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict const float *restrict</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict const float* restrict cugraph::detail::repel_x</definition>
        <argsstring></argsstring>
        <name>repel_x</name>
        <qualifiedname>cugraph::detail::repel_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="622" column="88" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a99fc3e190e4c5b73aaba4ab60a8b2f8a" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict const float *restrict const float *restrict</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict const float* restrict const float* restrict cugraph::detail::repel_y</definition>
        <argsstring></argsstring>
        <name>repel_y</name>
        <qualifiedname>cugraph::detail::repel_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="623" column="88" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a78696ac47229002f78d2fde707d87f89" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict const float *restrict const float *restrict float *restrict</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict const float* restrict const float* restrict float* restrict cugraph::detail::old_dx</definition>
        <argsstring></argsstring>
        <name>old_dx</name>
        <qualifiedname>cugraph::detail::old_dx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="624" column="82" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a83e79c6077de458231480d904006d3a0" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict const float *restrict const float *restrict float *restrict float *restrict</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict const float* restrict const float* restrict float* restrict float* restrict cugraph::detail::old_dy</definition>
        <argsstring></argsstring>
        <name>old_dy</name>
        <qualifiedname>cugraph::detail::old_dy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="625" column="82" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1a0d766c3cb8ad0963ba5029bcbdad590f" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict const float *restrict const float *restrict float *restrict float *restrict const float *restrict</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict const float* restrict const float* restrict float* restrict float* restrict const float* restrict cugraph::detail::swinging</definition>
        <argsstring></argsstring>
        <name>swinging</name>
        <qualifiedname>cugraph::detail::swinging</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="626" column="88" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bh__kernels_8cuh_1aca6e2a98c857032840ae2f89a1720250" prot="public" static="no" mutable="no">
        <type>__global__ float *restrict const float *restrict const float *restrict const float *restrict const float *restrict float *restrict float *restrict const float *restrict const float</type>
        <definition>__global__ float* restrict const float* restrict const float* restrict const float* restrict const float* restrict float* restrict float* restrict const float* restrict const float cugraph::detail::speed</definition>
        <argsstring></argsstring>
        <name>speed</name>
        <qualifiedname>cugraph::detail::speed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="627" column="79" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="extract__transform__v__frontier__e_8cuh_1ac80032eddcc8c78bb6df63f89f37b023" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::extract_transform_v_frontier_e_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>extract_transform_v_frontier_e_kernel_block_size</name>
        <qualifiedname>cugraph::detail::extract_transform_v_frontier_e_kernel_block_size</qualifiedname>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="64" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample__and__compute__local__nbr__indices_8cuh_1ad28c19dc1af48cb84ee09a39a6cbd6d4" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::sample_and_compute_local_nbr_indices_block_size</definition>
        <argsstring></argsstring>
        <name>sample_and_compute_local_nbr_indices_block_size</name>
        <qualifiedname>cugraph::detail::sample_and_compute_local_nbr_indices_block_size</qualifiedname>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="61" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample__and__compute__local__nbr__indices_8cuh_1a8bef59288bb085dae645b622dc7549d9" prot="public" static="no" constexpr="yes" mutable="no">
        <type>size_t constexpr</type>
        <definition>size_t constexpr cugraph::detail::compute_valid_local_nbr_count_inclusive_sum_local_degree_threshold</definition>
        <argsstring></argsstring>
        <name>compute_valid_local_nbr_count_inclusive_sum_local_degree_threshold</name>
        <qualifiedname>cugraph::detail::compute_valid_local_nbr_count_inclusive_sum_local_degree_threshold</qualifiedname>
        <initializer>=
  packed_bools_per_word() *
  size_t{4}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="63" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="variable" id="sample__and__compute__local__nbr__indices_8cuh_1ad642611320a35a4af147b6ea6c2dc797" prot="public" static="no" constexpr="yes" mutable="no">
        <type>size_t constexpr</type>
        <definition>size_t constexpr cugraph::detail::compute_valid_local_nbr_count_inclusive_sum_mid_local_degree_threshold</definition>
        <argsstring></argsstring>
        <name>compute_valid_local_nbr_count_inclusive_sum_mid_local_degree_threshold</name>
        <qualifiedname>cugraph::detail::compute_valid_local_nbr_count_inclusive_sum_mid_local_degree_threshold</qualifiedname>
        <initializer>=
  packed_bools_per_word() * static_cast&lt;size_t&gt;(raft::warp_size()) *
  size_t{4}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="68" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="variable" id="sample__and__compute__local__nbr__indices_8cuh_1a22c5bbc00eea801553dca1ebb9435de3" prot="public" static="no" constexpr="yes" mutable="no">
        <type>size_t constexpr</type>
        <definition>size_t constexpr cugraph::detail::compute_valid_local_nbr_count_inclusive_sum_high_local_degree_threshold</definition>
        <argsstring></argsstring>
        <name>compute_valid_local_nbr_count_inclusive_sum_high_local_degree_threshold</name>
        <qualifiedname>cugraph::detail::compute_valid_local_nbr_count_inclusive_sum_high_local_degree_threshold</qualifiedname>
        <initializer>=
  packed_bools_per_word() * static_cast&lt;size_t&gt;(sample_and_compute_local_nbr_indices_block_size) *
  size_t{4}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="71" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="variable" id="transform__v__frontier__e_8cuh_1a5bb39f1e5a046ca7133631fcda640f18" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::transform_v_frontier_e_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>transform_v_frontier_e_kernel_block_size</name>
        <qualifiedname>cugraph::detail::transform_v_frontier_e_kernel_block_size</qualifiedname>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" line="44" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1a6b074a502f560a31ea2307bf45c49874" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::per_v_transform_reduce_e_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>per_v_transform_reduce_e_kernel_block_size</name>
        <qualifiedname>cugraph::detail::per_v_transform_reduce_e_kernel_block_size</qualifiedname>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="65" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transform__e_8cuh_1aea0c142cafe777ee7e2dfe125c381f06" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::transform_e_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>transform_e_kernel_block_size</name>
        <qualifiedname>cugraph::detail::transform_e_kernel_block_size</qualifiedname>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_e.cuh" line="44" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_e.cuh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transform__reduce__e_8cuh_1ae7501109d42f54b870c5ee8ba51d82f1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::transform_reduce_e_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>transform_reduce_e_kernel_block_size</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_kernel_block_size</qualifiedname>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" line="55" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transform__reduce__e__by__src__dst__key_8cuh_1a19f3ecb0c80c593f7a5f975994c9ebe5" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::transform_reduce_e_by_src_dst_key_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>transform_reduce_e_by_src_dst_key_kernel_block_size</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_by_src_dst_key_kernel_block_size</qualifiedname>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="49" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transform__reduce__v__frontier__outgoing__e__by__dst_8cuh_1a0d728e774ac202f190c567d54b6bb12e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::update_v_frontier_from_outgoing_e_kernel_block_size</definition>
        <argsstring></argsstring>
        <name>update_v_frontier_from_outgoing_e_kernel_block_size</name>
        <qualifiedname>cugraph::detail::update_v_frontier_from_outgoing_e_kernel_block_size</qualifiedname>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_v_frontier_outgoing_e_by_dst.cuh" line="75" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_v_frontier_outgoing_e_by_dst.cuh" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph__utils_8cuh_1a01cdfd67b23c0db54b93dff16eb629d9" prot="public" static="no" mutable="no">
        <type>index_t</type>
        <definition>index_t cugraph::detail::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <qualifiedname>cugraph::detail::v</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="378" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph__utils_8cuh_1ac9f273ee1adaef6afeff7cd65683e194" prot="public" static="no" mutable="no">
        <type>index_t index_t *</type>
        <definition>index_t index_t* cugraph::detail::indices</definition>
        <argsstring></argsstring>
        <name>indices</name>
        <qualifiedname>cugraph::detail::indices</qualifiedname>
        <initializer>{
  auto tid{threadIdx.x}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="378" column="29" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="379" bodyend="380"/>
      </memberdef>
      <memberdef kind="variable" id="graph__utils_8cuh_1a6f3c938f2ba7527dede0713919e3105b" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto cugraph::detail::ctaStart</definition>
        <argsstring></argsstring>
        <name>ctaStart</name>
        <qualifiedname>cugraph::detail::ctaStart</qualifiedname>
        <initializer>{blockIdx.x}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="381" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="381" bodyend="381"/>
      </memberdef>
      <memberdef kind="variable" id="decompress__edge__partition_8cuh_1adec921476678472e6430fb7fa9a4e45b" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int32_t constexpr</type>
        <definition>int32_t constexpr cugraph::detail::decompress_edge_partition_block_size</definition>
        <argsstring></argsstring>
        <name>decompress_edge_partition_block_size</name>
        <qualifiedname>cugraph::detail::decompress_edge_partition_block_size</qualifiedname>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" line="44" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph__view_8hpp_1a045724f6af18378f84ddb20b0f85ad59" prot="public" static="no" constexpr="yes" mutable="no">
        <type>double constexpr</type>
        <definition>double constexpr cugraph::detail::edge_partition_src_dst_property_values_kv_pair_fill_ratio_threshold</definition>
        <argsstring></argsstring>
        <name>edge_partition_src_dst_property_values_kv_pair_fill_ratio_threshold</name>
        <qualifiedname>cugraph::detail::edge_partition_src_dst_property_values_kv_pair_fill_ratio_threshold</qualifiedname>
        <initializer>= 0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" line="246" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph__view_8hpp_1ae4a273531cf9093f7429e1b32f5d8b2e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>double constexpr</type>
        <definition>double constexpr cugraph::detail::hypersparse_threshold_ratio</definition>
        <argsstring></argsstring>
        <name>hypersparse_threshold_ratio</name>
        <qualifiedname>cugraph::detail::hypersparse_threshold_ratio</qualifiedname>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" line="251" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph__view_8hpp_1a2b9fb7a415ad4596e325506ceed12cc9" prot="public" static="no" constexpr="yes" mutable="no">
        <type>size_t constexpr</type>
        <definition>size_t constexpr cugraph::detail::low_degree_threshold</definition>
        <argsstring></argsstring>
        <name>low_degree_threshold</name>
        <qualifiedname>cugraph::detail::low_degree_threshold</qualifiedname>
        <initializer>{raft::warp_size()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" line="252" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="variable" id="graph__view_8hpp_1a4c58862cc97f60524eb54e9327a0eb3a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>size_t constexpr</type>
        <definition>size_t constexpr cugraph::detail::mid_degree_threshold</definition>
        <argsstring></argsstring>
        <name>mid_degree_threshold</name>
        <qualifiedname>cugraph::detail::mid_degree_threshold</qualifiedname>
        <initializer>{1024}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" line="253" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" bodystart="253" bodyend="253"/>
      </memberdef>
      <memberdef kind="variable" id="graph__view_8hpp_1a4676f14bbbedfa5eb58fde035d5416c7" prot="public" static="no" constexpr="yes" mutable="no">
        <type>size_t constexpr</type>
        <definition>size_t constexpr cugraph::detail::num_sparse_segments_per_vertex_partition</definition>
        <argsstring></argsstring>
        <name>num_sparse_segments_per_vertex_partition</name>
        <qualifiedname>cugraph::detail::num_sparse_segments_per_vertex_partition</qualifiedname>
        <initializer>{3}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" line="254" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/graph_view.hpp" bodystart="254" bodyend="254"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="betweenness__centrality__impl_8cuh_1a3479df970271d9b78649c19d05b34675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; edge_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; edge_t &gt; &gt; cugraph::detail::brandes_bfs</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, vertex_frontier_t&lt; vertex_t, void, multi_gpu, true &gt; &amp;vertex_frontier, bool do_expensive_check)</argsstring>
        <name>brandes_bfs</name>
        <qualifiedname>cugraph::detail::brandes_bfs</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__frontier__t" kindref="compound">vertex_frontier_t</ref>&lt; vertex_t, void, multi_gpu, true &gt; &amp;</type>
          <declname>vertex_frontier</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" line="86" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" bodystart="86" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="betweenness__centrality__impl_8cuh_1a3aec11368c937f2b847b964169a30cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::accumulate_vertex_results</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, raft::device_span&lt; weight_t &gt; centralities, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;distances, rmm::device_uvector&lt; edge_t &gt; &amp;&amp;sigmas, bool with_endpoints, bool do_expensive_check)</argsstring>
        <name>accumulate_vertex_results</name>
        <qualifiedname>cugraph::detail::accumulate_vertex_results</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; weight_t &gt;</type>
          <declname>centralities</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; edge_t &gt; &amp;&amp;</type>
          <declname>sigmas</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_endpoints</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" line="172" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" bodystart="172" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="betweenness__centrality__impl_8cuh_1a32d1950f5304a96165629af95704e194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::accumulate_edge_results</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, edge_property_view_t&lt; edge_t, weight_t * &gt; centralities_view, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;distances, rmm::device_uvector&lt; edge_t &gt; &amp;&amp;sigmas, bool do_expensive_check)</argsstring>
        <name>accumulate_edge_results</name>
        <qualifiedname>cugraph::detail::accumulate_edge_results</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t * &gt;</type>
          <declname>centralities_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; edge_t &gt; &amp;&amp;</type>
          <declname>sigmas</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" line="292" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" bodystart="292" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="betweenness__centrality__impl_8cuh_1a0a73bfa38ec16dd9251649d7a6adf671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; weight_t &gt;</type>
        <definition>rmm::device_uvector&lt; weight_t &gt; cugraph::detail::betweenness_centrality</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, VertexIterator vertices_begin, VertexIterator vertices_end, bool const normalized, bool const include_endpoints, bool const do_expensive_check)</argsstring>
        <name>betweenness_centrality</name>
        <qualifiedname>cugraph::detail::betweenness_centrality</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertices_begin</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertices_end</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>include_endpoints</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" line="434" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" bodystart="434" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="betweenness__centrality__impl_8cuh_1a15f0d2b0ce294be2e66a8455749a0590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt;</type>
        <definition>edge_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; cugraph::detail::edge_betweenness_centrality</definition>
        <argsstring>(const raft::handle_t &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, VertexIterator vertices_begin, VertexIterator vertices_end, bool const normalized, bool const do_expensive_check)</argsstring>
        <name>edge_betweenness_centrality</name>
        <qualifiedname>cugraph::detail::edge_betweenness_centrality</qualifiedname>
        <param>
          <type>const raft::handle_t &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertices_begin</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertices_end</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" line="560" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" bodystart="560" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="eigenvector__centrality__impl_8cuh_1a4e45221f8ec6086b5fd91f3b284515bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; weight_t &gt;</type>
        <definition>rmm::device_uvector&lt; weight_t &gt; cugraph::detail::eigenvector_centrality</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, true, multi_gpu &gt; const &amp;pull_graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, std::optional&lt; raft::device_span&lt; weight_t const &gt; &gt; initial_centralities, weight_t epsilon, size_t max_iterations, bool do_expensive_check)</argsstring>
        <name>eigenvector_centrality</name>
        <qualifiedname>cugraph::detail::eigenvector_centrality</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, true, multi_gpu &gt; const &amp;</type>
          <declname>pull_graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; weight_t const &gt; &gt;</type>
          <declname>initial_centralities</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_iterations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/eigenvector_centrality_impl.cuh" line="47" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/eigenvector_centrality_impl.cuh" bodystart="47" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="katz__centrality__impl_8cuh_1ab245796f8f98c4dd146311694a087d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename result_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::katz_centrality</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;pull_graph_view, std::optional&lt; edge_property_view_t&lt; typename GraphViewType::edge_type, weight_t const * &gt; &gt; edge_weight_view, result_t const *betas, result_t *katz_centralities, result_t alpha, result_t beta, result_t epsilon, size_t max_iterations, bool has_initial_guess, bool normalize, bool do_expensive_check)</argsstring>
        <name>katz_centrality</name>
        <qualifiedname>cugraph::detail::katz_centrality</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>pull_graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; typename GraphViewType::edge_type, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>result_t const *</type>
          <declname>betas</declname>
        </param>
        <param>
          <type>result_t *</type>
          <declname>katz_centralities</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_iterations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_initial_guess</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/katz_centrality_impl.cuh" line="44" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/centrality/katz_centrality_impl.cuh" bodystart="44" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="approx__weighted__matching__impl_8cuh_1a209f42155bc2a28687cdbc4ccbc33d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, weight_t &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, weight_t &gt; cugraph::detail::approximate_weighted_matching</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, edge_property_view_t&lt; edge_t, weight_t const * &gt; edge_weight_view)</argsstring>
        <name>approximate_weighted_matching</name>
        <qualifiedname>cugraph::detail::approximate_weighted_matching</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/approx_weighted_matching_impl.cuh" line="38" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/approx_weighted_matching_impl.cuh" bodystart="38" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="common__methods_8cuh_1a4b5c1a6fcae2f11d5673adb324746645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>weight_t</type>
        <definition>weight_t cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; vertex_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; weight_t &gt; const &amp;cluster_weights, weight_t total_edge_weight, weight_t resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" line="160" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" bodystart="160" bodyend="215" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.hpp" declline="74" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="common__methods_8cuh_1a1a6ba9eac5e8f75d53e9b39774e09d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; cugraph::graph_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weights_view, raft::device_span&lt; vertex_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weights_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" line="221" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" bodystart="221" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="common__methods_8cuh_1ac9873312aa3b5175a228f60d21b27571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, weight_t total_edge_weight, weight_t resolution, rmm::device_uvector&lt; weight_t &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; weight_t &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" line="250" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" bodystart="250" bodyend="441" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.hpp" declline="97" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="common__methods_8cuh_1a814f292d38c61a0220ffb94d545a1b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; weight_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; weight_t &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; vertex_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, vertex_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" line="445" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" bodystart="445" bodyend="469" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.hpp" declline="117" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods_8hpp_1aae205e7dd7c55c72510e7bc3360f8ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">graph_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; graph_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, weight_t &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weights, raft::device_span&lt; vertex_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.hpp" line="91" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.cuh" bodystart="221" bodyend="247" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods.hpp" declline="91" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1aace334de078797677afad1c4c6019f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template float</type>
        <definition>template float cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; float &gt; const &amp;cluster_weights, float total_edge_weight, float resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="21" column="16" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="21" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a3f0467fb515107f70bf4abd06dec45cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template float</type>
        <definition>template float cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; float &gt; const &amp;cluster_weights, float total_edge_weight, float resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="34" column="16" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="34" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a9597039123fbeaed4438609947aae6ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template float</type>
        <definition>template float cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; float &gt; const &amp;cluster_weights, float total_edge_weight, float resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="47" column="16" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="47" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1ac5dabec16c76823991d14a1b730ca1f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template double</type>
        <definition>template double cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; double &gt; const &amp;cluster_weights, double total_edge_weight, double resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="60" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="60" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1acb052416a2f8a0cca0e2019ae1855301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template double</type>
        <definition>template double cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; double &gt; const &amp;cluster_weights, double total_edge_weight, double resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="73" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="73" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a21614d0ae42521642f39ce303060af68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template double</type>
        <definition>template double cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; double &gt; const &amp;cluster_weights, double total_edge_weight, double resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="86" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="86" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a56014afc267ae38102afcfa226bdea97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int32_t, false, true &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, float &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int32_t, false, true &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int32_t, false, true &gt;, float &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="102" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="102" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a91d5b7303ec89762c2fa987a1c484b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int64_t, false, true &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, float &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int64_t, false, true &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int64_t, false, true &gt;, float &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="110" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="110" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1adaae9b1c542acd98953c264475e4c6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int64_t, int64_t, false, true &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, float &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int64_t, int64_t, false, true &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int64_t, int64_t, false, true &gt;, float &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weights, raft::device_span&lt; int64_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="118" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a3ef49efeccadff7299ab6389e37f621a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int32_t, false, true &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, double &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int32_t, false, true &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int32_t, false, true &gt;, double &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="126" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="126" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a7ea33dfd444233569a6e8e4cec7beb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int64_t, false, true &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, double &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int64_t, false, true &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int64_t, false, true &gt;, double &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="134" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="134" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a8200f8e00703f9cdcf75f78996249c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int64_t, int64_t, false, true &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, double &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int64_t, int64_t, false, true &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int64_t, int64_t, false, true &gt;, double &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weights, raft::device_span&lt; int64_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="142" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="142" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a551e98a777913b58f6d1a803b7092bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="147" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="147" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a5319575fe3c53b0febaaa0b4d1cbfc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="165" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="165" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a99508480f6c5510cf365a91706addfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="183" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="183" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1affdeffa690030ac96750be1ca0cc3e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="201" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="201" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a23ec6dcdd63099ba957c1d2bf7fecca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="219" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="219" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1adf7319dd766fd828661b1bba7121992e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="237" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="237" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1adca1485ec3b2c5875582f3f882eaf822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="256" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="256" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a090f524a27caa0714155a1e5a08ef005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="265" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="265" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a1f6830ec3542a8b6c01c93adcbd0518e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="274" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="274" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a2c06325d2979ba807f0b8853e9019a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="283" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="283" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a086f70d0571ea2cef2c21f769b780524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="292" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="292" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__mg_8cu_1a52083b584ad30a34ef5531d846b3697e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" line="301" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_mg.cu" declline="301" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a04f4ac25067c2729330dd1074aa89abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template float</type>
        <definition>template float cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; float &gt; const &amp;cluster_weights, float total_edge_weight, float resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="21" column="16" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="21" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a10bbc4208682934c59c71129239876a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template float</type>
        <definition>template float cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; float &gt; const &amp;cluster_weights, float total_edge_weight, float resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="34" column="16" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="34" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a09ff2f0bfe1751c6b55031fa59ff1ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template float</type>
        <definition>template float cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; float &gt; const &amp;cluster_weights, float total_edge_weight, float resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="47" column="16" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="47" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1aa02783f1ee3443f9469dedc5e4f994a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template double</type>
        <definition>template double cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; double &gt; const &amp;cluster_weights, double total_edge_weight, double resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="60" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="60" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a2cdcc60e7f4ef652d3aebf6949d8246c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template double</type>
        <definition>template double cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; double &gt; const &amp;cluster_weights, double total_edge_weight, double resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="73" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="73" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a111f487bce820a34662df298fa5259e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template double</type>
        <definition>template double cugraph::detail::compute_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;dst_clusters_cache, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters, rmm::device_uvector&lt; double &gt; const &amp;cluster_weights, double total_edge_weight, double resolution)</argsstring>
        <name>compute_modularity</name>
        <qualifiedname>cugraph::detail::compute_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>cluster_weights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="86" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="86" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a84ff316dc8fedbd6a044055ef0caf5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int32_t, false, false &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, float &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int32_t, false, false &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int32_t, false, false &gt;, float &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="102" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="102" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ab2030ed9c562401340613835fb909440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int64_t, false, false &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, float &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int64_t, false, false &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int64_t, false, false &gt;, float &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="110" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="110" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a9f8a93ef1c86b92263a8e80de1be2423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int64_t, int64_t, false, false &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, float &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int64_t, int64_t, false, false &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int64_t, int64_t, false, false &gt;, float &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weights, raft::device_span&lt; int64_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="118" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1abd60822badebe4adf105105e8451ccf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int32_t, false, false &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, double &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int32_t, false, false &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int32_t, false, false &gt;, double &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="126" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="126" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ae0c81a72aceb1ac86c8ac10b756e9e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int32_t, int64_t, false, false &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, double &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int32_t, int64_t, false, false &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int32_t, int64_t, false, false &gt;, double &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weights, raft::device_span&lt; int32_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="134" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="134" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1aeb567e8c613207cee6aaa04ad7d23c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t</ref>&lt; int64_t, int64_t, false, false &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, double &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; cugraph::graph_t&lt; int64_t, int64_t, false, false &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; int64_t, int64_t, false, false &gt;, double &gt; &gt; &gt; cugraph::detail::graph_contraction</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weights, raft::device_span&lt; int64_t &gt; labels)</argsstring>
        <name>graph_contraction</name>
        <qualifiedname>cugraph::detail::graph_contraction</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weights</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="142" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="142" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ae59d7f86a62b41fd57502f33b0e8bd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="147" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="147" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a0b068716845a59822114a4d43dece6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="165" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="165" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1af84329519e3204507dcf090e97f82893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="183" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="183" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ab52a9e604b3e1d18852d7f2dbf405109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="201" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="201" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a1b4eb4aec477f0fd7f44ff508cf78712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="219" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="219" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a7f59ba0f835cc88f9ac11e2c5c53d662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::update_clustering_by_delta_modularity</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>update_clustering_by_delta_modularity</name>
        <qualifiedname>cugraph::detail::update_clustering_by_delta_modularity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="237" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="237" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ad047d5444d15a0c998a6b77b948b214f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="256" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="256" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1acdffb9eedbe382809d5438e4fb65062c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="265" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="265" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ab71739f90914c995262b71218525bbb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="274" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="274" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a993e99ef33043f29ccf716a6d5195732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="283" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="283" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1ab175a0cf2c3e31feddc2eee1f35eaf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int32_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="292" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="292" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="common__methods__sg_8cu_1a61d9f5481f53002914e676713636f490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::compute_cluster_keys_and_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, rmm::device_uvector&lt; int64_t &gt; const &amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache)</argsstring>
        <name>compute_cluster_keys_and_values</name>
        <qualifiedname>cugraph::detail::compute_cluster_keys_and_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" line="301" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/common_methods_sg.cu" declline="301" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves_8cuh_1a3f808b8c8a1352fd6a663a814f9524b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves.cuh" line="48" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves.cuh" bodystart="48" bodyend="310" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves.hpp" declline="29" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves__mg_8cu_1a9c08bd737fd1ff96d3c96baa53d38428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;decision_graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>decision_graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_mg.cu" line="21" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_mg.cu" declline="21" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves__mg_8cu_1a047411aef85c4f51bd945d1d234a7e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;decision_graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>decision_graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_mg.cu" line="26" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_mg.cu" declline="26" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves__mg_8cu_1a112f1bd4f587fca9a1bb59e250dd41d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;decision_graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>decision_graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_mg.cu" line="31" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_mg.cu" declline="31" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves__sg_8cu_1a3da3f4c8bb1bc55aa2bbf8a492ecba24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;decision_graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>decision_graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_sg.cu" line="21" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_sg.cu" declline="21" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves__sg_8cu_1a95f08f8cd898b15115ebd5d237bb1ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;decision_graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>decision_graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_sg.cu" line="26" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_sg.cu" declline="26" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="maximal__independent__moves__sg_8cu_1a1abc98bec9f14df303ac3109ba80c6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::maximal_independent_moves</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;decision_graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_moves</name>
        <qualifiedname>cugraph::detail::maximal_independent_moves</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>decision_graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_sg.cu" line="31" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/maximal_independent_moves_sg.cu" declline="31" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="refine_8hpp_1aae776d573bb254ce0ebc0c39b5ef7ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename graph_view_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt;, std::pair&lt; rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt;, rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt;, std::pair&lt; rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt;, rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, graph_view_t const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; typename graph_view_t::edge_type, weight_t const * &gt; &gt; edge_weight_view, weight_t total_edge_weight, weight_t resolution, weight_t theta, rmm::device_uvector&lt; weight_t &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; weight_t &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; graph_view_t, weight_t &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; graph_view_t, typename graph_view_t::vertex_type &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; graph_view_t, typename graph_view_t::vertex_type &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref> const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; typename graph_view_t::edge_type, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; typename graph_view_t::vertex_type &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>, weight_t &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>, typename graph_view_t::vertex_type &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>, typename graph_view_t::vertex_type &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine.hpp" line="34" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine.hpp" declline="34" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__impl_8cuh_1a8c57b35fe502a5b99d8115dccae109fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, std::pair&lt; rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, std::pair&lt; rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, GraphViewType const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; typename GraphViewType::edge_type, weight_t const * &gt; &gt; edge_weight_view, weight_t total_edge_weight, weight_t resolution, weight_t theta, rmm::device_uvector&lt; weight_t &gt; const &amp;weighted_degree_of_vertices, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &amp;&amp;louvain_cluster_keys, rmm::device_uvector&lt; weight_t &gt; &amp;&amp;louvain_cluster_weights, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &amp;&amp;louvain_assignment_of_vertices, edge_src_property_t&lt; GraphViewType, weight_t &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; GraphViewType, typename GraphViewType::vertex_type &gt; const &amp;src_louvain_assignment_cache, edge_dst_property_t&lt; GraphViewType, typename GraphViewType::vertex_type &gt; const &amp;dst_louvain_assignment_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; typename GraphViewType::edge_type, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; const &amp;</type>
          <declname>weighted_degree_of_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &amp;&amp;</type>
          <declname>louvain_cluster_keys</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; weight_t &gt; &amp;&amp;</type>
          <declname>louvain_cluster_weights</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &amp;&amp;</type>
          <declname>louvain_assignment_of_vertices</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; GraphViewType, weight_t &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; GraphViewType, typename GraphViewType::vertex_type &gt; const &amp;</type>
          <declname>src_louvain_assignment_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; GraphViewType, typename GraphViewType::vertex_type &gt; const &amp;</type>
          <declname>dst_louvain_assignment_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_impl.cuh" line="136" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_impl.cuh" bodystart="136" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="refine__mg_8cu_1a1d195a8bec0d352765183f353b46f20f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, float theta, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" line="23" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" declline="23" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__mg_8cu_1a7787ee84a3ea3d4058da734f97c11d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, float theta, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" line="45" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" declline="45" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__mg_8cu_1a2924ed6cf9fa559d45113d52c607eab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, float theta, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" line="67" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" declline="67" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__mg_8cu_1a5e6ccb1c3d11a351eb1ba9f791eec096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, double theta, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" line="89" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" declline="89" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__mg_8cu_1ac5a0a07261f761ce7c8c90b933455ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, double theta, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" line="111" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" declline="111" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__mg_8cu_1a6f772faeb693f231fd2678ffc0a25e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, double theta, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" line="133" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_mg.cu" declline="133" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__sg_8cu_1a39b857d174965ba852ea55917f1eb8cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, float theta, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" line="23" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" declline="23" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__sg_8cu_1ac6fe1bf1e58f3ca2916937341b0c159b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, float theta, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" line="45" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" declline="45" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__sg_8cu_1af5a7a9182b9c62cd943226de7f556ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, float total_edge_weight, float resolution, float theta, rmm::device_uvector&lt; float &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; float &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, float &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>float</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, float &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" line="67" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" declline="67" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__sg_8cu_1a21fefe20d3685d980776f56237a20652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, double theta, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" line="89" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" declline="89" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__sg_8cu_1ad42b7e664e0fd5de6dc44e7553e40611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::pair&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, double theta, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt;, int32_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" line="111" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" declline="111" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="refine__sg_8cu_1ab7410fc605a47a4419ae86321bdce227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::pair&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; &gt; cugraph::detail::refine_clustering</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, double total_edge_weight, double resolution, double theta, rmm::device_uvector&lt; double &gt; const &amp;vertex_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;cluster_keys_v, rmm::device_uvector&lt; double &gt; &amp;&amp;cluster_weights_v, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;next_clusters_v, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, double &gt; const &amp;src_vertex_weights_cache, edge_src_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;src_clusters_cache, edge_dst_property_t&lt; cugraph::graph_view_t&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;dst_clusters_cache, bool up_down)</argsstring>
        <name>refine_clustering</name>
        <qualifiedname>cugraph::detail::refine_clustering</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>double</type>
          <declname>total_edge_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; const &amp;</type>
          <declname>vertex_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>cluster_keys_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>cluster_weights_v</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>next_clusters_v</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, double &gt; const &amp;</type>
          <declname>src_vertex_weights_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__src__property__t" kindref="compound">edge_src_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>src_clusters_cache</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__dst__property__t" kindref="compound">edge_dst_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt;, int64_t &gt; const &amp;</type>
          <declname>dst_clusters_cache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" line="133" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/community/detail/refine_sg.cu" declline="133" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="ecg__impl_8cuh_1ab666944f74fe7587100328d061dcf72a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, size_t, weight_t &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, size_t, weight_t &gt; cugraph::detail::ecg</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, weight_t min_weight, size_t ensemble_size, size_t max_level, weight_t threshold, weight_t resolution)</argsstring>
        <name>ecg</name>
        <qualifiedname>cugraph::detail::ecg</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>min_weight</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ensemble_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_level</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/ecg_impl.cuh" line="39" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/ecg_impl.cuh" bodystart="39" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="edge__triangle__count__impl_8cuh_1a7fe36a719e7e36a043a2999273043691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt;, edge_t &gt;</type>
        <definition>edge_property_t&lt; graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt;, edge_t &gt; cugraph::detail::edge_triangle_count_impl</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;graph_view)</argsstring>
        <name>edge_triangle_count_impl</name>
        <qualifiedname>cugraph::detail::edge_triangle_count_impl</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/edge_triangle_count_impl.cuh" line="125" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/edge_triangle_count_impl.cuh" bodystart="125" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="louvain_8cu_1afe32173e6a9450adc09d61e27b0d73f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::check_clustering</definition>
        <argsstring>(legacy::GraphCSRView&lt; vertex_t, edge_t, weight_t &gt; const &amp;graph_view, vertex_t *clustering)</argsstring>
        <name>check_clustering</name>
        <qualifiedname>cugraph::detail::check_clustering</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCSRView" kindref="compound">legacy::GraphCSRView</ref>&lt; vertex_t, edge_t, weight_t &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>clustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/legacy/louvain.cu" line="31" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/legacy/louvain.cu" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="louvain_8cu_1a35f1b4ebc021851fed90dc0263ff2be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; std::unique_ptr&lt; <ref refid="classcugraph_1_1Dendrogram" kindref="compound">Dendrogram</ref>&lt; vertex_t &gt; &gt;, weight_t &gt;</type>
        <definition>std::pair&lt; std::unique_ptr&lt; Dendrogram&lt; vertex_t &gt; &gt;, weight_t &gt; cugraph::detail::louvain</definition>
        <argsstring>(raft::handle_t const &amp;handle, legacy::GraphCSRView&lt; vertex_t, edge_t, weight_t &gt; const &amp;graph_view, size_t max_level, weight_t resolution)</argsstring>
        <name>louvain</name>
        <qualifiedname>cugraph::detail::louvain</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCSRView" kindref="compound">legacy::GraphCSRView</ref>&lt; vertex_t, edge_t, weight_t &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_level</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/legacy/louvain.cu" line="38" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/legacy/louvain.cu" bodystart="38" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="louvain_8cu_1a31a8173161e77da7e1ed5f71889d9309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::flatten_dendrogram</definition>
        <argsstring>(raft::handle_t const &amp;handle, legacy::GraphCSRView&lt; vertex_t, edge_t, weight_t &gt; const &amp;graph_view, Dendrogram&lt; vertex_t &gt; const &amp;dendrogram, vertex_t *clustering)</argsstring>
        <name>flatten_dendrogram</name>
        <qualifiedname>cugraph::detail::flatten_dendrogram</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCSRView" kindref="compound">legacy::GraphCSRView</ref>&lt; vertex_t, edge_t, weight_t &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1Dendrogram" kindref="compound">Dendrogram</ref>&lt; vertex_t &gt; const &amp;</type>
          <declname>dendrogram</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>clustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/legacy/louvain.cu" line="54" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/legacy/louvain.cu" bodystart="54" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="leiden__impl_8cuh_1a81b2a45f240ecc63525d5ed2c937d252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::check_clustering</definition>
        <argsstring>(graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, vertex_t *clustering)</argsstring>
        <name>check_clustering</name>
        <qualifiedname>cugraph::detail::check_clustering</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>clustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" line="40" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="leiden__impl_8cuh_1aded675366a1ce8eabe24ac334f702519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>vertex_t</type>
        <definition>vertex_t cugraph::detail::remove_duplicates</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;input_array)</argsstring>
        <name>remove_duplicates</name>
        <qualifiedname>cugraph::detail::remove_duplicates</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;</type>
          <declname>input_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" line="47" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" bodystart="47" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="leiden__impl_8cuh_1a79b3f9b4689814dc4bc3872890b06889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
            <defval>false</defval>
          </param>
        </templateparamlist>
        <type>std::pair&lt; std::unique_ptr&lt; <ref refid="classcugraph_1_1Dendrogram" kindref="compound">Dendrogram</ref>&lt; vertex_t &gt; &gt;, weight_t &gt;</type>
        <definition>std::pair&lt; std::unique_ptr&lt; Dendrogram&lt; vertex_t &gt; &gt;, weight_t &gt; cugraph::detail::leiden</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, size_t max_level, weight_t resolution, weight_t theta=1.0)</argsstring>
        <name>leiden</name>
        <qualifiedname>cugraph::detail::leiden</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_level</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>theta</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" line="80" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" bodystart="80" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="leiden__impl_8cuh_1a3c5b48b3e14e9ad781d1dc50eb26e52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::relabel_cluster_ids</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;unique_cluster_ids, vertex_t *clustering, size_t num_nodes)</argsstring>
        <name>relabel_cluster_ids</name>
        <qualifiedname>cugraph::detail::relabel_cluster_ids</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;</type>
          <declname>unique_cluster_ids</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>clustering</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" line="591" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" bodystart="591" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="leiden__impl_8cuh_1a74c83f93fd987691f7d75106bc6f3afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::flatten_leiden_dendrogram</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, Dendrogram&lt; vertex_t &gt; const &amp;dendrogram, vertex_t *clustering)</argsstring>
        <name>flatten_leiden_dendrogram</name>
        <qualifiedname>cugraph::detail::flatten_leiden_dendrogram</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1Dendrogram" kindref="compound">Dendrogram</ref>&lt; vertex_t &gt; const &amp;</type>
          <declname>dendrogram</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>clustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" line="636" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/leiden_impl.cuh" bodystart="636" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="louvain__impl_8cuh_1a427f384f70a2376980a515ac5681c10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; std::unique_ptr&lt; <ref refid="classcugraph_1_1Dendrogram" kindref="compound">Dendrogram</ref>&lt; vertex_t &gt; &gt;, weight_t &gt;</type>
        <definition>std::pair&lt; std::unique_ptr&lt; Dendrogram&lt; vertex_t &gt; &gt;, weight_t &gt; cugraph::detail::louvain</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::optional&lt; std::reference_wrapper&lt; raft::random::RngState &gt; &gt; rng_state, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, size_t max_level, weight_t threshold, weight_t resolution)</argsstring>
        <name>louvain</name>
        <qualifiedname>cugraph::detail::louvain</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::optional&lt; std::reference_wrapper&lt; raft::random::RngState &gt; &gt;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_level</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/louvain_impl.cuh" line="49" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/louvain_impl.cuh" bodystart="49" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="louvain__impl_8cuh_1a093c930d03a7787cc8b767a69a6cba25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::flatten_dendrogram</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, Dendrogram&lt; vertex_t &gt; const &amp;dendrogram, vertex_t *clustering)</argsstring>
        <name>flatten_dendrogram</name>
        <qualifiedname>cugraph::detail::flatten_dendrogram</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1Dendrogram" kindref="compound">Dendrogram</ref>&lt; vertex_t &gt; const &amp;</type>
          <declname>dendrogram</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>clustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/community/louvain_impl.cuh" line="290" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/community/louvain_impl.cuh" bodystart="290" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="connectivity_8cu_1add8c257e34d641bdda446f1f5f2abf19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VT</type>
          </param>
          <param>
            <type>typename ET</type>
          </param>
          <param>
            <type>typename WT</type>
          </param>
          <param>
            <type>int</type>
            <declname>TPB_X</declname>
            <defname>TPB_X</defname>
            <defval>32</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_signed&lt; VT &gt;::value &gt;</type>
        <definition>std::enable_if_t&lt; std::is_signed&lt; VT &gt;::value &gt; cugraph::detail::connected_components_impl</definition>
        <argsstring>(legacy::GraphCSRView&lt; VT, ET, WT &gt; const &amp;graph, cugraph_cc_t connectivity_type, VT *labels, cudaStream_t stream)</argsstring>
        <name>connected_components_impl</name>
        <qualifiedname>cugraph::detail::connected_components_impl</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCSRView" kindref="compound">legacy::GraphCSRView</ref>&lt; VT, ET, WT &gt; const &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>cugraph_cc_t</type>
          <declname>connectivity_type</declname>
        </param>
        <param>
          <type>VT *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Compute connected components. The weak version has been eliminated in lieu of the primitive based implementation. </para>
        </briefdescription>
        <detaileddescription>
<para>The strong version (for directed or undirected graphs) is based on: [2] Gilbert, J. et al, 2011. &quot;Graph Algorithms in the Language of Linear Algebra&quot;</para>
<para>C = I | A | A^2 |...| A^k where matrix multiplication is via semi-ring: (combine, reduce) == (&amp;, |) (bitwise ops) Then: X = C &amp; transpose(C); and finally, apply get_labels(X);</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IndexT</parametername>
</parameternamelist>
<parameterdescription>
<para>the numeric type of non-floating point elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TPB_X</parametername>
</parameternamelist>
<parameterdescription>
<para>the threads to use per block when configuring the kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>input graph; assumed undirected for weakly CC [in] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connectivity_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored [in] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>the cuda stream [in] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/connectivity.cu" line="54" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/connectivity.cu" bodystart="54" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="mis__impl_8cuh_1a800e1ebffad8dbca368cd526c709a84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::maximal_independent_set</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>maximal_independent_set</name>
        <qualifiedname>cugraph::detail::maximal_independent_set</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/mis_impl.cuh" line="49" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/mis_impl.cuh" bodystart="49" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="vertex__coloring__impl_8cuh_1a903b68793d05f23f6272cbaf58afb4fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::vertex_coloring</definition>
        <argsstring>(raft::handle_t const &amp;handle, cugraph::graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, raft::random::RngState &amp;rng_state)</argsstring>
        <name>vertex_coloring</name>
        <qualifiedname>cugraph::detail::vertex_coloring</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">cugraph::graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/vertex_coloring_impl.cuh" line="32" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/vertex_coloring_impl.cuh" bodystart="32" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="COOtoCSR_8cuh_1a0c201b5a08429e78ea57c14d1c78d7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VT</type>
          </param>
          <param>
            <type>typename ET</type>
          </param>
          <param>
            <type>typename WT</type>
          </param>
        </templateparamlist>
        <type>VT</type>
        <definition>VT cugraph::detail::sort</definition>
        <argsstring>(legacy::GraphCOOView&lt; VT, ET, WT &gt; &amp;graph, rmm::cuda_stream_view stream_view)</argsstring>
        <name>sort</name>
        <qualifiedname>cugraph::detail::sort</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCOOView" kindref="compound">legacy::GraphCOOView</ref>&lt; VT, ET, WT &gt; &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
<para>Sort input graph and find the total number of vertices. </para>
        </briefdescription>
        <detaileddescription>
<para>Lexicographically sort a COO view and find the total number of vertices</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structcugraph_1_1logic__error" kindref="compound">cugraph::logic_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when an error occurs.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VT</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Supported value : int (signed, 32-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ET</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Supported value : int (signed, 32-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WT</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Supported value : float or double.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>The input graph object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stream_view</parametername>
</parameternamelist>
<parameterdescription>
<para>The cuda stream for kernel calls</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Total number of vertices </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh" line="68" column="4" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh" bodystart="68" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="COOtoCSR_8cuh_1a7952e4068cd4ed09fc549a97eaa27a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VT</type>
          </param>
          <param>
            <type>typename ET</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::fill_offset</definition>
        <argsstring>(VT *source, ET *offsets, VT number_of_vertices, ET number_of_edges, rmm::cuda_stream_view stream_view)</argsstring>
        <name>fill_offset</name>
        <qualifiedname>cugraph::detail::fill_offset</qualifiedname>
        <param>
          <type>VT *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ET *</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>VT</type>
          <declname>number_of_vertices</declname>
        </param>
        <param>
          <type>ET</type>
          <declname>number_of_edges</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh" line="105" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh" bodystart="105" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="COOtoCSR_8cuh_1a96ed7ec232ff6356376a24590b784d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VT</type>
          </param>
          <param>
            <type>typename ET</type>
          </param>
        </templateparamlist>
        <type>rmm::device_buffer</type>
        <definition>rmm::device_buffer cugraph::detail::create_offset</definition>
        <argsstring>(VT *source, VT number_of_vertices, ET number_of_edges, rmm::cuda_stream_view stream_view, rmm::device_async_resource_ref mr)</argsstring>
        <name>create_offset</name>
        <qualifiedname>cugraph::detail::create_offset</qualifiedname>
        <param>
          <type>VT *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>VT</type>
          <declname>number_of_vertices</declname>
        </param>
        <param>
          <type>ET</type>
          <declname>number_of_edges</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>rmm::device_async_resource_ref</type>
          <declname>mr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh" line="133" column="20" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh" bodystart="133" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="collect__comm__wrapper_8cu_1afd6feac01cc50e8d59ef3ffecbdaec35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; T &gt;</type>
        <definition>rmm::device_uvector&lt; T &gt; cugraph::detail::device_allgatherv</definition>
        <argsstring>(raft::handle_t const  &amp;handle, raft::comms::comms_t const  &amp;comm, raft::device_span&lt; T const  &gt; d_input)</argsstring>
        <name>device_allgatherv</name>
        <qualifiedname>cugraph::detail::device_allgatherv</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>raft::device_span&lt; T const &gt;</type>
          <declname>d_input</declname>
        </param>
        <briefdescription>
<para>Gather the span of data from all ranks and broadcast the combined data to all ranks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">comm</parametername>
</parameternamelist>
<parameterdescription>
<para>Raft comms that manages underlying NCCL comms handles across the ranks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_input</parametername>
</parameternamelist>
<parameterdescription>
<para>The span of data to perform the &apos;allgatherv&apos;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector containing the combined data of all ranks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" line="31" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" bodystart="31" bodyend="38" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/collect_comm_wrapper.hpp" declline="39" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="collect__comm__wrapper_8cu_1abb6658da8d1c92b55d9057639ee0183c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::device_allgatherv</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::comms::comms_t const &amp;comm, raft::device_span&lt; int32_t const &gt; d_input)</argsstring>
        <name>device_allgatherv</name>
        <qualifiedname>cugraph::detail::device_allgatherv</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>d_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" line="40" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" declline="40" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="collect__comm__wrapper_8cu_1a61a190b4eeabcf76c64e2477648b094f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::device_allgatherv</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::comms::comms_t const &amp;comm, raft::device_span&lt; int64_t const &gt; d_input)</argsstring>
        <name>device_allgatherv</name>
        <qualifiedname>cugraph::detail::device_allgatherv</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>d_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" line="44" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" declline="44" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="collect__comm__wrapper_8cu_1af8c817126d1cb309399b2b8c17abb8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; float &gt;</type>
        <definition>template rmm::device_uvector&lt; float &gt; cugraph::detail::device_allgatherv</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::comms::comms_t const &amp;comm, raft::device_span&lt; float const &gt; d_input)</argsstring>
        <name>device_allgatherv</name>
        <qualifiedname>cugraph::detail::device_allgatherv</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>raft::device_span&lt; float const &gt;</type>
          <declname>d_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" line="48" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" declline="48" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="collect__comm__wrapper_8cu_1a7c4891b0c6ed306f408124cae6a36701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; double &gt;</type>
        <definition>template rmm::device_uvector&lt; double &gt; cugraph::detail::device_allgatherv</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::comms::comms_t const &amp;comm, raft::device_span&lt; double const &gt; d_input)</argsstring>
        <name>device_allgatherv</name>
        <qualifiedname>cugraph::detail::device_allgatherv</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>raft::device_span&lt; double const &gt;</type>
          <declname>d_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" line="52" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_comm_wrapper.cu" declline="52" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a835bd8624c462903323f6f2757a2238a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename value_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; value_t &gt;</type>
        <definition>rmm::device_uvector&lt; value_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; value_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; vertex_t &gt; const  &amp;number_map, vertex_t local_vertex_first, vertex_t local_vertex_last, value_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; value_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>value_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
<para>Collect vertex values (represented as k/v pairs across cluster) and return local value arrays on the GPU responsible for each vertex. </para>
        </briefdescription>
        <detaileddescription>
<para>Data will be shuffled, renumbered and initialized with the default value, then: return_array[d_vertices[i]] = d_values[i]</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of value associated with the vertex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>multi_gpu flag</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertex IDs for the k/v pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_values</parametername>
</parameternamelist>
<parameterdescription>
<para>Values for the k/v pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">The</parametername>
</parameternamelist>
<parameterdescription>
<para>number map for performing renumbering </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">local_vertex_first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first vertex id assigned to the local GPU </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">local_vertex_last</parametername>
</parameternamelist>
<parameterdescription>
<para>The last vertex id assigned to the local GPU </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">default_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value the return array will be initialized by </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">do_expensive_check</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, enable expensive validation checks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>device vector of values, where return[i] is the value associated with vertex (i + local_vertex_first) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="28" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" bodystart="28" bodyend="83" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="265" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a37dc43aba651745203451668c6bc53b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; float &gt;</type>
        <definition>template rmm::device_uvector&lt; float &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, float, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; float &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, float default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, float, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, float, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>float</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="85" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="85" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a619e406d0d7b64e1dcf799cfe57aa260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; float &gt;</type>
        <definition>template rmm::device_uvector&lt; float &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, float, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; float &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int64_t &gt; const &amp;number_map, int64_t local_vertex_first, int64_t local_vertex_last, float default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, float, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, float, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>float</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="96" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="96" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1ad4279503b1ce23d9073550dbd8e4aafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; double &gt;</type>
        <definition>template rmm::device_uvector&lt; double &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, double, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; double &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, double default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, double, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, double, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>double</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="107" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="107" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1ab3d67d7b3026faddbf75500b4109eb36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; double &gt;</type>
        <definition>template rmm::device_uvector&lt; double &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, double, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; double &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int64_t &gt; const &amp;number_map, int64_t local_vertex_first, int64_t local_vertex_last, double default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, double, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, double, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>double</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="118" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1addef3398f8f4520161e09f408c786ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; float &gt;</type>
        <definition>template rmm::device_uvector&lt; float &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, float, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; float &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, float default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, float, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, float, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>float</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="129" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="129" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a0ef63bb1ae62938b6a9f3a0592d4c37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; float &gt;</type>
        <definition>template rmm::device_uvector&lt; float &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, float, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; float &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int64_t &gt; const &amp;number_map, int64_t local_vertex_first, int64_t local_vertex_last, float default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, float, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, float, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>float</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="140" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="140" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a54ae0d3f9a74e2a1ae0b8936614ee488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; double &gt;</type>
        <definition>template rmm::device_uvector&lt; double &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, double, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; double &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, double default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, double, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, double, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>double</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="151" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="151" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a2c0c79a81bf06915893458c2321ebc39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; double &gt;</type>
        <definition>template rmm::device_uvector&lt; double &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, double, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; double &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int64_t &gt; const &amp;number_map, int64_t local_vertex_first, int64_t local_vertex_last, double default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, double, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, double, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>double</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="162" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="162" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1aecae1103128ba385fc995cd9247d64c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int32_t, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, int32_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int32_t, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int32_t, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="173" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="173" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a46eef9f93bfc0fb05ed2b381030d8135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int64_t, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, int64_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int64_t, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int64_t, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="184" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="184" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a09f379d5ba4a5a5c36af9eb3f057bfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, int64_t, false &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int64_t &gt; const &amp;number_map, int64_t local_vertex_first, int64_t local_vertex_last, int64_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, int64_t, false &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, int64_t, false &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="195" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="195" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a1bf8b7f64e2eb8595978dd68674a605a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int32_t, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, int32_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int32_t, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int32_t, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="206" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="206" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a439e4803b139a4e1d7c7147681ecc221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int64_t, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int32_t &gt; const &amp;number_map, int32_t local_vertex_first, int32_t local_vertex_last, int64_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int64_t, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int32_t, int64_t, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="217" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="217" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="collect__local__vertex__values_8cu_1a24254c855024302cc0d19fb863ed1a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, int64_t, true &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_values, rmm::device_uvector&lt; int64_t &gt; const &amp;number_map, int64_t local_vertex_first, int64_t local_vertex_last, int64_t default_value, bool do_expensive_check)</argsstring>
        <name>collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, int64_t, true &gt;</name>
        <qualifiedname>cugraph::detail::collect_local_vertex_values_from_ext_vertex_value_pairs&lt; int64_t, int64_t, true &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; const &amp;</type>
          <declname>number_map</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_first</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_vertex_last</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>default_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" line="228" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/collect_local_vertex_values.cu" declline="228" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1a3ea8b8d9d2475518e28e914e0a909050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; size_t &gt;</type>
        <definition>rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; vertex_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_count_local_partition_by_minor=false)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_count_local_partition_by_minor</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Groupby and count edgelist using the key function which returns the target local partition ID for an edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Needs to be a floating point type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">d_edgelist_majors</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertex IDs for sources (if we are internally storing edges in the sparse 2D matrix using sources as major indices) or destinations (otherwise) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">d_edgelist_minors</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertex IDs for destinations (if we are internally storing edges in the sparse 2D matrix using sources as major indices) or sources (otherwise) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">d_edgelist_weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional edge weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">d_edgelist_id_type_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional edge (ID, type) pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">groupby_and_count_local_partition_by_minor</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to true, groupby and count edges based on (local partition ID, GPU ID) pairs (where GPU IDs are computed by applying the compute_gpu_id_from_vertex_t function to the minor vertex ID). If set to false, groupby and count edges by just local partition ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector containing the number of edges in each local partition (if groupby_and_count_local_partition is false) or in each segment with the same (local partition ID, GPU ID) pair. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="38" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" bodystart="38" bodyend="264" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="232" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1a6137c73b4e28a36049daddf1ac2bfc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; size_t &gt;</type>
        <definition>template rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_counts_local_partition)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_counts_local_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="266" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" declline="266" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1a27c70e0c94cf3879fb29e83d0b861e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; size_t &gt;</type>
        <definition>template rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_counts_local_partition)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_counts_local_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="275" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" declline="275" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1a77e203e0cb85959f40192b97ba8a9658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; size_t &gt;</type>
        <definition>template rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_counts_local_partition)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_counts_local_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="284" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" declline="284" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1ac4885010806dbc7d57dafd4782aad04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; size_t &gt;</type>
        <definition>template rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; int32_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_counts_local_partition)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_counts_local_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="293" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" declline="293" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1a53e0e9f03868ac4b2f6b178463962dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; size_t &gt;</type>
        <definition>template rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; int64_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_counts_local_partition)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_counts_local_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="302" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" declline="302" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="groupby__and__count_8cu_1af2b91c9a512fd6d06702f6c23683ec6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; size_t &gt;</type>
        <definition>template rmm::device_uvector&lt; size_t &gt; cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;d_edgelist_majors, rmm::device_uvector&lt; int64_t &gt; &amp;d_edgelist_minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;d_edgelist_weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;d_edgelist_edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;d_edgelist_edge_types, bool groupby_and_counts_local_partition)</argsstring>
        <name>groupby_and_count_edgelist_by_local_partition_id</name>
        <qualifiedname>cugraph::detail::groupby_and_count_edgelist_by_local_partition_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;</type>
          <declname>d_edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;</type>
          <declname>d_edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;</type>
          <declname>d_edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>d_edgelist_edge_types</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupby_and_counts_local_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" line="311" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/groupby_and_count.cu" declline="311" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="permute__range_8cu_1a580fa9cdd46d2737fe37793c44daba4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::permute_range</definition>
        <argsstring>(raft::handle_t const  &amp;handle, raft::random::RngState &amp;rng_state, vertex_t local_start, vertex_t local_range_size, bool multi_gpu=false, bool do_expensive_check=false)</argsstring>
        <name>permute_range</name>
        <qualifiedname>cugraph::detail::permute_range</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>local_start</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>local_range_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_gpu</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Permute a range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rng_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The RngState instance holding pseudo-random number generator state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">local_range_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of local range assigned to this process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">local_start</parametername>
</parameternamelist>
<parameterdescription>
<para>Start of local range assigned to this process.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>permuted range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/permute_range.cu" line="39" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/permute_range.cu" bodystart="39" bodyend="170" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="158" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="permute__range_8cu_1afb2141460fdc4799745f750cb04110f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::permute_range</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, int32_t local_range_start, int32_t local_range_size, bool multi_gpu, bool do_expensive_check)</argsstring>
        <name>permute_range</name>
        <qualifiedname>cugraph::detail::permute_range</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_range_start</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>local_range_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_gpu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/permute_range.cu" line="172" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/permute_range.cu" declline="172" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="permute__range_8cu_1afcfe607cbbf5833aca287932122efc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::permute_range</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::random::RngState &amp;rng_state, int64_t local_range_start, int64_t local_range_size, bool multi_gpu, bool do_expensive_check)</argsstring>
        <name>permute_range</name>
        <qualifiedname>cugraph::detail::permute_range</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_range_start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>local_range_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_gpu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/permute_range.cu" line="179" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/permute_range.cu" declline="179" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a8725c7f57b9cf92d0a1001cceee830d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::uniform_random_fill</definition>
        <argsstring>(rmm::cuda_stream_view const  &amp;stream_view, value_t *d_value, size_t size, value_t min_value, value_t max_value, raft::random::RngState &amp;rng_state)</argsstring>
        <name>uniform_random_fill</name>
        <qualifiedname>cugraph::detail::uniform_random_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>value_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>value_t</type>
          <declname>min_value</declname>
        </param>
        <param>
          <type>value_t</type>
          <declname>max_value</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
<para>Fill a buffer with uniformly distributed random values. </para>
        </briefdescription>
        <detaileddescription>
<para>Fills a buffer with uniformly distributed random values between the specified minimum and maximum values.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>value_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the value to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream_view</parametername>
</parameternamelist>
<parameterdescription>
<para>stream view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d_value</parametername>
</parameternamelist>
<parameterdescription>
<para>device array to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min_value</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value (inclusive) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_value</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value (exclusive) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rng_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The RngState instance holding pseudo-random number generator state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="41" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="41" bodyend="55" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a20c740cfe9c3e4b4880ccaeae90dce30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::uniform_random_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, int32_t *d_value, size_t size, int32_t min_value, int32_t max_value, raft::random::RngState &amp;rng_state)</argsstring>
        <name>uniform_random_fill</name>
        <qualifiedname>cugraph::detail::uniform_random_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>min_value</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>max_value</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="57" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="57" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a059ef2e2518263bf8e67b89ff0f159f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::uniform_random_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, int64_t *d_value, size_t size, int64_t min_value, int64_t max_value, raft::random::RngState &amp;rng_state)</argsstring>
        <name>uniform_random_fill</name>
        <qualifiedname>cugraph::detail::uniform_random_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>min_value</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>max_value</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="64" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="64" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1af2c3f82d947fea6fd59939f0856beee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::uniform_random_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, float *d_value, size_t size, float min_value, float max_value, raft::random::RngState &amp;rng_state)</argsstring>
        <name>uniform_random_fill</name>
        <qualifiedname>cugraph::detail::uniform_random_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min_value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max_value</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="71" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="71" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a244ff7d01f7b57d9e9205d82698be10e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::uniform_random_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, double *d_value, size_t size, double min_value, double max_value, raft::random::RngState &amp;rng_state)</argsstring>
        <name>uniform_random_fill</name>
        <qualifiedname>cugraph::detail::uniform_random_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_value</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="78" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="78" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a02fdb019a2f5d0c06df2c0b08f45d820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::scalar_fill</definition>
        <argsstring>(raft::handle_t const  &amp;handle, value_t *d_value, size_t size, value_t value)</argsstring>
        <name>scalar_fill</name>
        <qualifiedname>cugraph::detail::scalar_fill</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>value_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>value_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Fill a buffer with a constant value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>value_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the value to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d_value</parametername>
</parameternamelist>
<parameterdescription>
<para>device array to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="86" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="86" bodyend="89" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a32bb44f0e3ddc9fb06f2ac28f34faa36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::scalar_fill</definition>
        <argsstring>(raft::handle_t const &amp;handle, int32_t *d_value, size_t size, int32_t value)</argsstring>
        <name>scalar_fill</name>
        <qualifiedname>cugraph::detail::scalar_fill</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="91" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="91" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1aa28af437b011310a09924538129ea4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::scalar_fill</definition>
        <argsstring>(raft::handle_t const &amp;handle, int64_t *d_value, size_t size, int64_t value)</argsstring>
        <name>scalar_fill</name>
        <qualifiedname>cugraph::detail::scalar_fill</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="96" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="96" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1af7575aa01b6d38e21d0d22b80ab8c999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::scalar_fill</definition>
        <argsstring>(raft::handle_t const &amp;handle, size_t *d_value, size_t size, size_t value)</argsstring>
        <name>scalar_fill</name>
        <qualifiedname>cugraph::detail::scalar_fill</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="101" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="101" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a5e26c69034663ea57f90e78a0d4e6094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::scalar_fill</definition>
        <argsstring>(raft::handle_t const &amp;handle, float *d_value, size_t size, float value)</argsstring>
        <name>scalar_fill</name>
        <qualifiedname>cugraph::detail::scalar_fill</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="103" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="103" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1afbcd5ee7e56a3875514951d8042408a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::scalar_fill</definition>
        <argsstring>(raft::handle_t const &amp;handle, double *d_value, size_t size, double value)</argsstring>
        <name>scalar_fill</name>
        <qualifiedname>cugraph::detail::scalar_fill</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="105" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="105" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a2379d9375d824997bac73345314efe15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::sequence_fill</definition>
        <argsstring>(rmm::cuda_stream_view const  &amp;stream_view, value_t *d_value, size_t size, value_t start_value)</argsstring>
        <name>sequence_fill</name>
        <qualifiedname>cugraph::detail::sequence_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>value_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>value_t</type>
          <declname>start_value</declname>
        </param>
        <briefdescription>
<para>Fill a buffer with a sequence of values. </para>
        </briefdescription>
        <detaileddescription>
<para>Fills the buffer with the sequence: {start_value, start_value+1, start_value+2, ..., start_value+size-1}</para>
<para>Similar to the function std::iota, wraps the function thrust::sequence</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>value_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the value to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream_view</parametername>
</parameternamelist>
<parameterdescription>
<para>stream view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d_value</parametername>
</parameternamelist>
<parameterdescription>
<para>device array to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_value</parametername>
</parameternamelist>
<parameterdescription>
<para>starting value for sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="108" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="108" bodyend="114" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a844ac00fc22f6fb403007f346d563f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::sequence_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, int32_t *d_value, size_t size, int32_t start_value)</argsstring>
        <name>sequence_fill</name>
        <qualifiedname>cugraph::detail::sequence_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>start_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="116" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="116" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1ad5881982115c378ad969b6a73f7fd662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::sequence_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, int64_t *d_value, size_t size, int64_t start_value)</argsstring>
        <name>sequence_fill</name>
        <qualifiedname>cugraph::detail::sequence_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="121" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="121" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1ac57cccf41510ac372cdeab2ba8b42d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::sequence_fill</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, uint64_t *d_value, size_t size, uint64_t start_value)</argsstring>
        <name>sequence_fill</name>
        <qualifiedname>cugraph::detail::sequence_fill</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="126" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="126" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a8f92fbec28ff79f6fe5e9b739068c0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>vertex_t</type>
        <definition>vertex_t cugraph::detail::compute_maximum_vertex_id</definition>
        <argsstring>(rmm::cuda_stream_view const  &amp;stream_view, vertex_t const  *d_edgelist_srcs, vertex_t const  *d_edgelist_dsts, size_t num_edges)</argsstring>
        <name>compute_maximum_vertex_id</name>
        <qualifiedname>cugraph::detail::compute_maximum_vertex_id</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>d_edgelist_srcs</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>d_edgelist_dsts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_edges</declname>
        </param>
        <briefdescription>
<para>Compute the maximum vertex id of an edge list. </para>
        </briefdescription>
        <detaileddescription>
<para>max(d_edgelist_srcs.max(), d_edgelist_dsts.max())</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream_view</parametername>
</parameternamelist>
<parameterdescription>
<para>stream view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_edgelist_srcs</parametername>
</parameternamelist>
<parameterdescription>
<para>device array storing edge source IDs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_edgelist_dsts</parametername>
</parameternamelist>
<parameterdescription>
<para>device array storing edge destination IDs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_edges</parametername>
</parameternamelist>
<parameterdescription>
<para>number of edges in the input source &amp; destination arrays</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value occurring in the edge list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="132" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="132" bodyend="147" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="105" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1ada19713bea2a399c5237d9f31a82ec06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template int32_t</type>
        <definition>template int32_t cugraph::detail::compute_maximum_vertex_id</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, int32_t const *d_edgelist_srcs, int32_t const *d_edgelist_dsts, size_t num_edges)</argsstring>
        <name>compute_maximum_vertex_id</name>
        <qualifiedname>cugraph::detail::compute_maximum_vertex_id</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>int32_t const *</type>
          <declname>d_edgelist_srcs</declname>
        </param>
        <param>
          <type>int32_t const *</type>
          <declname>d_edgelist_dsts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="149" column="18" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="149" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a31c8a3af0265ebe6a475d1916132b6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template int64_t</type>
        <definition>template int64_t cugraph::detail::compute_maximum_vertex_id</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, int64_t const *d_edgelist_srcs, int64_t const *d_edgelist_dsts, size_t num_edges)</argsstring>
        <name>compute_maximum_vertex_id</name>
        <qualifiedname>cugraph::detail::compute_maximum_vertex_id</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>int64_t const *</type>
          <declname>d_edgelist_srcs</declname>
        </param>
        <param>
          <type>int64_t const *</type>
          <declname>d_edgelist_dsts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="154" column="18" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="154" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1aa690d6e022dd2898bb7df37fe1e23da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; edge_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; edge_t &gt; &gt; cugraph::detail::filter_degree_0_vertices</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; edge_t &gt; &amp;&amp;d_out_degs)</argsstring>
        <name>filter_degree_0_vertices</name>
        <qualifiedname>cugraph::detail::filter_degree_0_vertices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; edge_t &gt; &amp;&amp;</type>
          <declname>d_out_degs</declname>
        </param>
        <briefdescription>
<para>Filter zero degree vertices from this frontier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_t</parametername>
</parameternamelist>
<parameterdescription>
<para>edge type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>The input list of vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_out_degs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output degree of each vertex </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of device vectors the updated list of vertices and output degrees </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="160" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="160" bodyend="185" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="144" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a705a2e6ab86ddd6e7d3f2c6cee0bf55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; cugraph::detail::filter_degree_0_vertices</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_out_degs)</argsstring>
        <name>filter_degree_0_vertices</name>
        <qualifiedname>cugraph::detail::filter_degree_0_vertices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_out_degs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="188" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="188" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a3be37717a783f3b8937ea1c28fee98da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; cugraph::detail::filter_degree_0_vertices</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_out_degs)</argsstring>
        <name>filter_degree_0_vertices</name>
        <qualifiedname>cugraph::detail::filter_degree_0_vertices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_out_degs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="193" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="193" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a6e18059b36b8c4b42dfa0083b89f5efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; cugraph::detail::filter_degree_0_vertices</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_out_degs)</argsstring>
        <name>filter_degree_0_vertices</name>
        <qualifiedname>cugraph::detail::filter_degree_0_vertices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_out_degs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="198" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="198" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a8ad8c6357dd9bb9428c95955fe8ae54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename data_t</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cugraph::detail::is_sorted</definition>
        <argsstring>(raft::handle_t const  &amp;handle, raft::device_span&lt; data_t &gt; span)</argsstring>
        <name>is_sorted</name>
        <qualifiedname>cugraph::detail::is_sorted</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; data_t &gt;</type>
          <declname>span</declname>
        </param>
        <briefdescription>
<para>Check if device span is sorted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>data_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of data in span </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span</parametername>
</parameternamelist>
<parameterdescription>
<para>The span of data to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if sorted, false if not sorted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="203" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="203" bodyend="206" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a180fd4bb699336d5ecea98e25c7b9553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template bool</type>
        <definition>template bool cugraph::detail::is_sorted</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int32_t &gt; span)</argsstring>
        <name>is_sorted</name>
        <qualifiedname>cugraph::detail::is_sorted</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="208" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="208" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a964ba9338fd1e369968c47273fecdf68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template bool</type>
        <definition>template bool cugraph::detail::is_sorted</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int64_t &gt; span)</argsstring>
        <name>is_sorted</name>
        <qualifiedname>cugraph::detail::is_sorted</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="210" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="210" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1af33de3c6a653b24a968b1ff44a92feca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename data_t</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cugraph::detail::is_equal</definition>
        <argsstring>(raft::handle_t const  &amp;handle, raft::device_span&lt; data_t &gt; span1, raft::device_span&lt; data_t &gt; span2)</argsstring>
        <name>is_equal</name>
        <qualifiedname>cugraph::detail::is_equal</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; data_t &gt;</type>
          <declname>span1</declname>
        </param>
        <param>
          <type>raft::device_span&lt; data_t &gt;</type>
          <declname>span2</declname>
        </param>
        <briefdescription>
<para>Check if two device spans are equal. Returns true if every element in the spans are equal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>data_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of data in span </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span1</parametername>
</parameternamelist>
<parameterdescription>
<para>The span of data to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span2</parametername>
</parameternamelist>
<parameterdescription>
<para>The span of data to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if equal, false if not equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="214" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="214" bodyend="219" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a00118b02110129f71e3dbb3abf60b92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template bool</type>
        <definition>template bool cugraph::detail::is_equal</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int32_t &gt; span1, raft::device_span&lt; int32_t &gt; span2)</argsstring>
        <name>is_equal</name>
        <qualifiedname>cugraph::detail::is_equal</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>span1</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t &gt;</type>
          <declname>span2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="221" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="221" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a96541638d9675a33ba0d693d59620d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template bool</type>
        <definition>template bool cugraph::detail::is_equal</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int64_t &gt; span1, raft::device_span&lt; int64_t &gt; span2)</argsstring>
        <name>is_equal</name>
        <qualifiedname>cugraph::detail::is_equal</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>span1</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t &gt;</type>
          <declname>span2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="227" column="15" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="227" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a4add4a2823336d624dfd0209d5f9784d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename data_t</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t cugraph::detail::count_values</definition>
        <argsstring>(raft::handle_t const  &amp;handle, raft::device_span&lt; data_t const  &gt; span, data_t value)</argsstring>
        <name>count_values</name>
        <qualifiedname>cugraph::detail::count_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; data_t const &gt;</type>
          <declname>span</declname>
        </param>
        <param>
          <type>data_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Count the number of times a value appears in a span. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>data_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of data in span </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span</parametername>
</parameternamelist>
<parameterdescription>
<para>The span of data to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The count of how many instances of that value occur </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="235" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" bodystart="235" bodyend="240" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" declline="188" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1ab59fd6ab66075e5d2720aac29f24bd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template size_t</type>
        <definition>template size_t cugraph::detail::count_values&lt; int32_t &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int32_t const &gt; span, int32_t value)</argsstring>
        <name>count_values&lt; int32_t &gt;</name>
        <qualifiedname>cugraph::detail::count_values&lt; int32_t &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>span</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="242" column="10" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="242" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8cu_1a7d8bb22c888c858e6e9d0fd5b553c3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template size_t</type>
        <definition>template size_t cugraph::detail::count_values&lt; int64_t &gt;</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int64_t const &gt; span, int64_t value)</argsstring>
        <name>count_values&lt; int64_t &gt;</name>
        <qualifiedname>cugraph::detail::count_values&lt; int64_t &gt;</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>span</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" line="245" column="10" declfile="/home/nfs/abarghi/cugraph6/cpp/src/detail/utility_wrappers.cu" declline="245" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="generator__tools_8cu_1ac2b1b300d8d49798fb3c4bb8060fc21a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; T &gt;</type>
        <definition>rmm::device_uvector&lt; T &gt; cugraph::detail::append_all</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::vector&lt; rmm::device_uvector&lt; T &gt; &gt; &amp;&amp;input)</argsstring>
        <name>append_all</name>
        <qualifiedname>cugraph::detail::append_all</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::vector&lt; rmm::device_uvector&lt; T &gt; &gt; &amp;&amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/generators/generator_tools.cu" line="44" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/generators/generator_tools.cu" bodystart="44" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="scramble_8cuh_1aa906cd0d94ea2a8a0456d2daa65deeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename uvertex_t</type>
          </param>
        </templateparamlist>
        <type>__device__ std::enable_if_t&lt; sizeof(uvertex_t)==8, uvertex_t &gt;</type>
        <definition>__device__ std::enable_if_t&lt; sizeof(uvertex_t)==8, uvertex_t &gt; cugraph::detail::bitreversal</definition>
        <argsstring>(uvertex_t value)</argsstring>
        <name>bitreversal</name>
        <qualifiedname>cugraph::detail::bitreversal</qualifiedname>
        <param>
          <type>uvertex_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" line="34" column="29" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="scramble_8cuh_1aa84964380ede52bb39c98ba5e08dddae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename uvertex_t</type>
          </param>
        </templateparamlist>
        <type>__device__ std::enable_if_t&lt; sizeof(uvertex_t)==4, uvertex_t &gt;</type>
        <definition>__device__ std::enable_if_t&lt; sizeof(uvertex_t)==4, uvertex_t &gt; cugraph::detail::bitreversal</definition>
        <argsstring>(uvertex_t value)</argsstring>
        <name>bitreversal</name>
        <qualifiedname>cugraph::detail::bitreversal</qualifiedname>
        <param>
          <type>uvertex_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" line="40" column="29" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="scramble_8cuh_1aa5f187deed9a4a11e8188244491bdb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename uvertex_t</type>
          </param>
        </templateparamlist>
        <type>__device__ std::enable_if_t&lt; sizeof(uvertex_t)==2, uvertex_t &gt;</type>
        <definition>__device__ std::enable_if_t&lt; sizeof(uvertex_t)==2, uvertex_t &gt; cugraph::detail::bitreversal</definition>
        <argsstring>(uvertex_t value)</argsstring>
        <name>bitreversal</name>
        <qualifiedname>cugraph::detail::bitreversal</qualifiedname>
        <param>
          <type>uvertex_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" line="46" column="29" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="scramble_8cuh_1a7534db85e270aa24649b0b3d67f1d7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__device__ vertex_t</type>
        <definition>__device__ vertex_t cugraph::detail::scramble</definition>
        <argsstring>(vertex_t value, size_t lgN)</argsstring>
        <name>scramble</name>
        <qualifiedname>cugraph::detail::scramble</qualifiedname>
        <param>
          <type>vertex_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>lgN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" line="54" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/generators/scramble.cuh" bodystart="54" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="barnes__hut_8cuh_1a00ed99a35a429202db31927ed2fe1897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::barnes_hut</definition>
        <argsstring>(raft::handle_t const &amp;handle, legacy::GraphCOOView&lt; vertex_t, edge_t, weight_t &gt; &amp;graph, float *pos, const int max_iter=500, float *x_start=nullptr, float *y_start=nullptr, bool outbound_attraction_distribution=true, bool lin_log_mode=false, bool prevent_overlapping=false, const float edge_weight_influence=1.0, const float jitter_tolerance=1.0, const float theta=0.5, const float scaling_ratio=2.0, bool strong_gravity_mode=false, const float gravity=1.0, bool verbose=false, internals::GraphBasedDimRedCallback *callback=nullptr)</argsstring>
        <name>barnes_hut</name>
        <qualifiedname>cugraph::detail::barnes_hut</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCOOView" kindref="compound">legacy::GraphCOOView</ref>&lt; vertex_t, edge_t, weight_t &gt; &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>max_iter</declname>
          <defval>500</defval>
        </param>
        <param>
          <type>float *</type>
          <declname>x_start</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>float *</type>
          <declname>y_start</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>outbound_attraction_distribution</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lin_log_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>prevent_overlapping</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>edge_weight_influence</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>jitter_tolerance</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>theta</declname>
          <defval>0.5</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>scaling_ratio</declname>
          <defval>2.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>strong_gravity_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>gravity</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1internals_1_1GraphBasedDimRedCallback" kindref="compound">internals::GraphBasedDimRedCallback</ref> *</type>
          <declname>callback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/barnes_hut.cuh" line="40" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/barnes_hut.cuh" bodystart="40" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1ae923c30789dd32bd61db5a506b806c1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::InitializationKernel</definition>
        <argsstring>(unsigned *restrict limiter, int *restrict maxdepthd, float *restrict radiusd)</argsstring>
        <name>InitializationKernel</name>
        <qualifiedname>cugraph::detail::InitializationKernel</qualifiedname>
        <param>
          <type>unsigned *restrict</type>
          <declname>limiter</declname>
        </param>
        <param>
          <type>int *restrict</type>
          <declname>maxdepthd</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>radiusd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intializes the states of objects. This speeds the overall kernel up. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="45" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a05697fbac5f68c7f442cab0bfac44c0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::ResetKernel</definition>
        <argsstring>(float *restrict radiusd_squared, int *restrict bottomd, const int NNODES, const float *restrict radiusd)</argsstring>
        <name>ResetKernel</name>
        <qualifiedname>cugraph::detail::ResetKernel</qualifiedname>
        <param>
          <type>float *restrict</type>
          <declname>radiusd_squared</declname>
        </param>
        <param>
          <type>int *restrict</type>
          <declname>bottomd</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>NNODES</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>radiusd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset root. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="57" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a61fdd8f1718a5d34b481bc34f7958731" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(THREADS1, FACTOR1) void BoundingBoxKernel(int *restrict startd</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>THREADS1</type>
        </param>
        <param>
          <type>FACTOR1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Figures the bounding boxes for every point in the embedding. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="70" column="19"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a0c9e6c8df7df404619e6f2d82c85cee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::for</definition>
        <argsstring>(int j=i+blockIdx.x *THREADS1;j&lt; N;j+=inc)</argsstring>
        <name>for</name>
        <qualifiedname>cugraph::detail::for</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="96" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="96" bodyend="108" declfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" declline="172" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a2f13b914b4ec7e9c197b0d7576eea0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::for</definition>
        <argsstring>(int j=THREADS1/2;j &gt; i;j/=2)</argsstring>
        <name>for</name>
        <qualifiedname>cugraph::detail::for</qualifiedname>
        <param>
          <type>int</type>
          <declname>j</declname>
          <defval>THREADS1/2;j</defval>
        </param>
        <param>
          <type>i;j/</type>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="116" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a0c0fddab10e7d9272fdab39733cbc37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::if</definition>
        <argsstring>(i==0)</argsstring>
        <name>if</name>
        <qualifiedname>cugraph::detail::if</qualifiedname>
        <param>
          <type>i</type>
          <defval>=0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="125" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="125" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a07d52ac8cde27483dd5588f3372858e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(1024, 1) void ClearKernel1(int *restrict childd</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>1024</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear some of the state vectors up.</para>
<para>Clean more state vectors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="162" column="19"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a1964c8f16cc8ff283a9dcd9d7c836851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::if</definition>
        <argsstring>(k&lt; FOUR_N) k+</argsstring>
        <name>if</name>
        <qualifiedname>cugraph::detail::if</qualifiedname>
        <initializer>= inc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="168" column="3" declfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" declline="168" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a2a3992aa987fac28fc9e20e17b884ec2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(THREADS2, FACTOR2) void TreeBuildingKernel(int *restrict childd</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>THREADS2</type>
        </param>
        <param>
          <type>FACTOR2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build the actual KD Tree. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="179" column="19"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a27c8163051f73d6e40b1f69a7998e017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::while</definition>
        <argsstring>(i&lt; N)</argsstring>
        <name>while</name>
        <qualifiedname>cugraph::detail::while</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="205" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="205" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1aee6fd78a31d4a8211ad2cda0015b5514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::if</definition>
        <argsstring>(localmaxdepth &gt; 32) localmaxdepth</argsstring>
        <name>if</name>
        <qualifiedname>cugraph::detail::if</qualifiedname>
        <param>
          <type>localmaxdepth</type>
        </param>
        <param>
          <type>32</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="292" column="3" declfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" declline="292" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a6a340b8d4030b77542d1d3216d3d1c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::atomicMax</definition>
        <argsstring>(maxdepthd, localmaxdepth)</argsstring>
        <name>atomicMax</name>
        <qualifiedname>cugraph::detail::atomicMax</qualifiedname>
        <param>
          <type>maxdepthd</type>
        </param>
        <param>
          <type>localmaxdepth</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="294" column="3" declfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" declline="294" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a1e47e1ec491ffe8e362d9a9e6fb1fc02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(THREADS3, FACTOR3) void SummarizationKernel(int *restrict countd</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>THREADS3</type>
        </param>
        <param>
          <type>FACTOR3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Summarize the KD Tree via cell gathering </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="321" column="19"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1af1988badf659a55502eabd48a70531b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::while</definition>
        <argsstring>(k&lt;=NNODES)</argsstring>
        <name>while</name>
        <qualifiedname>cugraph::detail::while</qualifiedname>
        <param>
          <type>k&lt;=</type>
          <declname>NNODES</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="391" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="391" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a0609a49764314199ccbbebf840f95143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(THREADS4, FACTOR4) void SortKernel(int *restrict sortd</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>THREADS4</type>
        </param>
        <param>
          <type>FACTOR4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sort the cells </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="457" column="19"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a5f949b738262e6a3f14b1f6e79d4c220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::while</definition>
        <argsstring>(k &gt;=bottom)</argsstring>
        <name>while</name>
        <qualifiedname>cugraph::detail::while</qualifiedname>
        <param>
          <type>k &gt;=</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="473" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="473" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a66f48bc5565dd26c41b44537f31f723b" prot="public" static="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(THREADS5, FACTOR5) void RepulsionKernel(const float scaling_ratio</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>THREADS5</type>
        </param>
        <param>
          <type>FACTOR5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the repulsive forces using the KD Tree </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="507" column="19"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a354b954169662e3971047d161d68f0da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::if</definition>
        <argsstring>(threadIdx.x==0)</argsstring>
        <name>if</name>
        <qualifiedname>cugraph::detail::if</qualifiedname>
        <param>
          <type>threadIdx.</type>
          <declname>x</declname>
          <defval>=0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="529" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" bodystart="529" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a3b8cd929e54cc3e8babd8e2dff45881c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::__syncthreads</definition>
        <argsstring>()</argsstring>
        <name>__syncthreads</name>
        <qualifiedname>cugraph::detail::__syncthreads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="540" column="3" declfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" declline="540" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1a506339cbc691ec66cc67653f77758375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cugraph::detail::__threadfence_block</definition>
        <argsstring>()</argsstring>
        <name>__threadfence_block</name>
        <qualifiedname>cugraph::detail::__threadfence_block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="552" column="3" declfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" declline="552" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="bh__kernels_8cuh_1acf6abe016edc44f4768c54b53b524e34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__</type>
        <definition>static __global__ cugraph::detail::__launch_bounds__</definition>
        <argsstring>(THREADS6, FACTOR6) void apply_forces_bh(float *restrict Y_x</argsstring>
        <name>__launch_bounds__</name>
        <qualifiedname>cugraph::detail::__launch_bounds__</qualifiedname>
        <param>
          <type>THREADS6</type>
        </param>
        <param>
          <type>FACTOR6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/bh_kernels.cuh" line="617" column="19"/>
      </memberdef>
      <memberdef kind="function" id="exact__fa2_8cuh_1ad8d05a4a2ed1b843756a646352bcc25f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::exact_fa2</definition>
        <argsstring>(raft::handle_t const &amp;handle, legacy::GraphCOOView&lt; vertex_t, edge_t, weight_t &gt; &amp;graph, float *pos, const int max_iter=500, float *x_start=nullptr, float *y_start=nullptr, bool outbound_attraction_distribution=true, bool lin_log_mode=false, bool prevent_overlapping=false, const float edge_weight_influence=1.0, const float jitter_tolerance=1.0, const float scaling_ratio=2.0, bool strong_gravity_mode=false, const float gravity=1.0, bool verbose=false, internals::GraphBasedDimRedCallback *callback=nullptr)</argsstring>
        <name>exact_fa2</name>
        <qualifiedname>cugraph::detail::exact_fa2</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCOOView" kindref="compound">legacy::GraphCOOView</ref>&lt; vertex_t, edge_t, weight_t &gt; &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>max_iter</declname>
          <defval>500</defval>
        </param>
        <param>
          <type>float *</type>
          <declname>x_start</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>float *</type>
          <declname>y_start</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>outbound_attraction_distribution</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lin_log_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>prevent_overlapping</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>edge_weight_influence</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>jitter_tolerance</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>scaling_ratio</declname>
          <defval>2.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>strong_gravity_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>gravity</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1internals_1_1GraphBasedDimRedCallback" kindref="compound">internals::GraphBasedDimRedCallback</ref> *</type>
          <declname>callback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/exact_fa2.cuh" line="39" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/exact_fa2.cuh" bodystart="39" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="exact__repulsion_8cuh_1affd6a29794d104e5be00a215f7eb2b99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::repulsion_kernel</definition>
        <argsstring>(const float *restrict x_pos, const float *restrict y_pos, float *restrict repel_x, float *restrict repel_y, const int *restrict mass, const float scaling_ratio, const vertex_t n)</argsstring>
        <name>repulsion_kernel</name>
        <qualifiedname>cugraph::detail::repulsion_kernel</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>repel_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>repel_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>scaling_ratio</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/exact_repulsion.cuh" line="25" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/exact_repulsion.cuh" bodystart="25" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="exact__repulsion_8cuh_1aceb36e1417cbb612010128455048a357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>int</type>
            <declname>TPB_X</declname>
            <defname>TPB_X</defname>
            <defval>32</defval>
          </param>
          <param>
            <type>int</type>
            <declname>TPB_Y</declname>
            <defname>TPB_Y</defname>
            <defval>32</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::apply_repulsion</definition>
        <argsstring>(const float *restrict x_pos, const float *restrict y_pos, float *restrict repel_x, float *restrict repel_y, const int *restrict mass, const float scaling_ratio, const vertex_t n, cudaStream_t stream)</argsstring>
        <name>apply_repulsion</name>
        <qualifiedname>cugraph::detail::apply_repulsion</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>repel_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>repel_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>scaling_ratio</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/exact_repulsion.cuh" line="53" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/exact_repulsion.cuh" bodystart="53" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a5cc5a87901cafa6e182b86d4d40358f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::attraction_kernel</definition>
        <argsstring>(const vertex_t *restrict row, const vertex_t *restrict col, const weight_t *restrict v, const edge_t e, const float *restrict x_pos, const float *restrict y_pos, float *restrict attract_x, float *restrict attract_y, const int *restrict mass, bool outbound_attraction_distribution, bool lin_log_mode, const float edge_weight_influence, const float coef)</argsstring>
        <name>attraction_kernel</name>
        <qualifiedname>cugraph::detail::attraction_kernel</qualifiedname>
        <param>
          <type>const vertex_t *restrict</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const vertex_t *restrict</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const weight_t *restrict</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const edge_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>outbound_attraction_distribution</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lin_log_mode</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>edge_weight_influence</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>coef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="26" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="26" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a662adec38eb1b34b3481b83e5e713df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::apply_attraction</definition>
        <argsstring>(const vertex_t *restrict row, const vertex_t *restrict col, const weight_t *restrict v, const edge_t e, const float *restrict x_pos, const float *restrict y_pos, float *restrict attract_x, float *restrict attract_y, const int *restrict mass, bool outbound_attraction_distribution, bool lin_log_mode, const float edge_weight_influence, const float coef, cudaStream_t stream)</argsstring>
        <name>apply_attraction</name>
        <qualifiedname>cugraph::detail::apply_attraction</qualifiedname>
        <param>
          <type>const vertex_t *restrict</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const vertex_t *restrict</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const weight_t *restrict</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const edge_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>outbound_attraction_distribution</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lin_log_mode</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>edge_weight_influence</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="74" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="74" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a1422de803e20d67a0ee5d680f68c77ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::linear_gravity_kernel</definition>
        <argsstring>(const float *restrict x_pos, const float *restrict y_pos, float *restrict attract_x, float *restrict attract_y, const int *restrict mass, const float gravity, const vertex_t n)</argsstring>
        <name>linear_gravity_kernel</name>
        <qualifiedname>cugraph::detail::linear_gravity_kernel</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>gravity</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="119" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="119" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1aad7803ef01b7a3ac0aac467ce3f4a0e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::strong_gravity_kernel</definition>
        <argsstring>(const float *restrict x_pos, const float *restrict y_pos, float *restrict attract_x, float *restrict attract_y, const int *restrict mass, const float gravity, const float scaling_ratio, const vertex_t n)</argsstring>
        <name>strong_gravity_kernel</name>
        <qualifiedname>cugraph::detail::strong_gravity_kernel</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>gravity</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>scaling_ratio</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="139" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="139" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a9730e132c47f26c757b7f1e2d8ff9cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::apply_gravity</definition>
        <argsstring>(const float *restrict x_pos, const float *restrict y_pos, float *restrict attract_x, float *restrict attract_y, const int *restrict mass, const float gravity, bool strong_gravity_mode, const float scaling_ratio, const vertex_t n, cudaStream_t stream)</argsstring>
        <name>apply_gravity</name>
        <qualifiedname>cugraph::detail::apply_gravity</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>gravity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strong_gravity_mode</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>scaling_ratio</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="160" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="160" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1aec8f561000d5d514c0f41c7cd2268067" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::local_speed_kernel</definition>
        <argsstring>(const float *restrict repel_x, const float *restrict repel_y, const float *restrict attract_x, const float *restrict attract_y, const float *restrict old_dx, const float *restrict old_dy, const int *restrict mass, float *restrict swinging, float *restrict traction, const vertex_t n)</argsstring>
        <name>local_speed_kernel</name>
        <qualifiedname>cugraph::detail::local_speed_kernel</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>repel_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>repel_y</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>old_dx</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>old_dy</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>swinging</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>traction</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="190" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="190" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a285f2379038a9be915c1287e87987b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::compute_local_speed</definition>
        <argsstring>(const float *restrict repel_x, const float *restrict repel_y, const float *restrict attract_x, const float *restrict attract_y, float *restrict old_dx, float *restrict old_dy, const int *restrict mass, float *restrict swinging, float *restrict traction, const vertex_t n, cudaStream_t stream)</argsstring>
        <name>compute_local_speed</name>
        <qualifiedname>cugraph::detail::compute_local_speed</qualifiedname>
        <param>
          <type>const float *restrict</type>
          <declname>repel_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>repel_y</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>old_dx</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>old_dy</declname>
        </param>
        <param>
          <type>const int *restrict</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>swinging</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>traction</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="213" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="213" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a141f138d54d9b03310eee97a335b33e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::adapt_speed</definition>
        <argsstring>(const float jitter_tolerance, float *restrict jt, float *restrict speed, float *restrict speed_efficiency, const float s, const float t, const vertex_t n)</argsstring>
        <name>adapt_speed</name>
        <qualifiedname>cugraph::detail::adapt_speed</qualifiedname>
        <param>
          <type>const float</type>
          <declname>jitter_tolerance</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>jt</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>speed_efficiency</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="239" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="239" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1af2296e6ecf08c92ac359e58a21a25a7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::update_positions_kernel</definition>
        <argsstring>(float *restrict x_pos, float *restrict y_pos, const float *restrict repel_x, const float *restrict repel_y, const float *restrict attract_x, const float *restrict attract_y, float *restrict old_dx, float *restrict old_dy, const float *restrict swinging, const float speed, const vertex_t n)</argsstring>
        <name>update_positions_kernel</name>
        <qualifiedname>cugraph::detail::update_positions_kernel</qualifiedname>
        <param>
          <type>float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>repel_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>repel_y</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>old_dx</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>old_dy</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>swinging</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="275" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="275" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="fa2__kernels_8cuh_1a4b1b24cf963a6b80447697cd22de4dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::apply_forces</definition>
        <argsstring>(float *restrict x_pos, float *restrict y_pos, const float *restrict repel_x, const float *restrict repel_y, const float *restrict attract_x, const float *restrict attract_y, float *restrict old_dx, float *restrict old_dy, const float *restrict swinging, const float speed, const vertex_t n, cudaStream_t stream)</argsstring>
        <name>apply_forces</name>
        <qualifiedname>cugraph::detail::apply_forces</qualifiedname>
        <param>
          <type>float *restrict</type>
          <declname>x_pos</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>y_pos</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>repel_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>repel_y</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_x</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>attract_y</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>old_dx</declname>
        </param>
        <param>
          <type>float *restrict</type>
          <declname>old_dy</declname>
        </param>
        <param>
          <type>const float *restrict</type>
          <declname>swinging</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const vertex_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" line="301" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/fa2_kernels.cuh" bodystart="301" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="layout_2legacy_2utils_8hpp_1a1c8da4a1f18433ee37bea265093c3962" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int cugraph::detail::getMultiProcessorCount</definition>
        <argsstring>()</argsstring>
        <name>getMultiProcessorCount</name>
        <qualifiedname>cugraph::detail::getMultiProcessorCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper method to get multi-processor count parameter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/utils.hpp" line="25" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/layout/legacy/utils.hpp" bodystart="25" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="hungarian_8cu_1ad7c6073c002b5c6af66738170ca33456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>weight_t</type>
        <definition>weight_t cugraph::detail::default_epsilon</definition>
        <argsstring>()</argsstring>
        <name>default_epsilon</name>
        <qualifiedname>cugraph::detail::default_epsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" line="47" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="hungarian_8cu_1a1a25a65e19a64c0144a563d05adeb850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>float</type>
        <definition>float cugraph::detail::default_epsilon</definition>
        <argsstring>()</argsstring>
        <name>default_epsilon</name>
        <qualifiedname>cugraph::detail::default_epsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" line="53" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="hungarian_8cu_1a65eaee5e6de4b91aa7743772f69ba9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>double</type>
        <definition>double cugraph::detail::default_epsilon</definition>
        <argsstring>()</argsstring>
        <name>default_epsilon</name>
        <qualifiedname>cugraph::detail::default_epsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" line="59" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="hungarian_8cu_1a358fef40753cd2e66a0bf4ddefb998d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename index_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>weight_t</type>
        <definition>weight_t cugraph::detail::hungarian</definition>
        <argsstring>(raft::handle_t const &amp;handle, index_t num_rows, index_t num_cols, weight_t const *d_original_cost, index_t *d_assignment, weight_t epsilon)</argsstring>
        <name>hungarian</name>
        <qualifiedname>cugraph::detail::hungarian</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>num_rows</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>num_cols</declname>
        </param>
        <param>
          <type>weight_t const *</type>
          <declname>d_original_cost</declname>
        </param>
        <param>
          <type>index_t *</type>
          <declname>d_assignment</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" line="65" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" bodystart="65" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="hungarian_8cu_1a9fdc7b755c845aad73d6cb8399ea65c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>weight_t</type>
        <definition>weight_t cugraph::detail::hungarian_sparse</definition>
        <argsstring>(raft::handle_t const &amp;handle, legacy::GraphCOOView&lt; vertex_t, edge_t, weight_t &gt; const &amp;graph, vertex_t num_workers, vertex_t const *workers, vertex_t *assignment, weight_t epsilon)</argsstring>
        <name>hungarian_sparse</name>
        <qualifiedname>cugraph::detail::hungarian_sparse</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCOOView" kindref="compound">legacy::GraphCOOView</ref>&lt; vertex_t, edge_t, weight_t &gt; const &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>num_workers</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>workers</declname>
        </param>
        <param>
          <type>vertex_t *</type>
          <declname>assignment</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" line="125" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/linear_assignment/legacy/hungarian.cu" bodystart="125" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="hits__impl_8cuh_1adb95244cc102fe1e0e0d11acce9373b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename result_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::normalize</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, result_t *hubs, result_t init, ReduceOp reduce_op)</argsstring>
        <name>normalize</name>
        <qualifiedname>cugraph::detail::normalize</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>result_t *</type>
          <declname>hubs</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>init</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/link_analysis/hits_impl.cuh" line="41" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/link_analysis/hits_impl.cuh" bodystart="41" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="hits__impl_8cuh_1a30b926e583d8fcc49c8094f47060f828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename result_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; result_t, size_t &gt;</type>
        <definition>std::tuple&lt; result_t, size_t &gt; cugraph::detail::hits</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, result_t *const hubs, result_t *const authorities, result_t epsilon, size_t max_iterations, bool has_initial_hubs_guess, bool normalize, bool do_expensive_check)</argsstring>
        <name>hits</name>
        <qualifiedname>cugraph::detail::hits</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>result_t *const</type>
          <declname>hubs</declname>
        </param>
        <param>
          <type>result_t *const</type>
          <declname>authorities</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_iterations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_initial_hubs_guess</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/link_analysis/hits_impl.cuh" line="58" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/link_analysis/hits_impl.cuh" bodystart="58" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="pagerank__impl_8cuh_1a5f9a4f3491889332430613b5530afa3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename result_t</type>
          </param>
        </templateparamlist>
        <type><ref refid="structcugraph_1_1centrality__algorithm__metadata__t" kindref="compound">centrality_algorithm_metadata_t</ref></type>
        <definition>centrality_algorithm_metadata_t cugraph::detail::pagerank</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;pull_graph_view, std::optional&lt; edge_property_view_t&lt; typename GraphViewType::edge_type, weight_t const * &gt; &gt; edge_weight_view, std::optional&lt; raft::device_span&lt; weight_t const &gt; &gt; precomputed_vertex_out_weight_sums, std::optional&lt; std::tuple&lt; raft::device_span&lt; typename GraphViewType::vertex_type const &gt;, raft::device_span&lt; result_t const &gt; &gt; &gt; personalization, raft::device_span&lt; result_t &gt; pageranks, result_t alpha, result_t epsilon, size_t max_iterations, bool do_expensive_check)</argsstring>
        <name>pagerank</name>
        <qualifiedname>cugraph::detail::pagerank</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>pull_graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; typename GraphViewType::edge_type, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; weight_t const &gt; &gt;</type>
          <declname>precomputed_vertex_out_weight_sums</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; typename GraphViewType::vertex_type const &gt;, raft::device_span&lt; result_t const &gt; &gt; &gt;</type>
          <declname>personalization</declname>
        </param>
        <param>
          <type>raft::device_span&lt; result_t &gt;</type>
          <declname>pageranks</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_iterations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/link_analysis/pagerank_impl.cuh" line="51" column="33" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/link_analysis/pagerank_impl.cuh" bodystart="51" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="similarity__impl_8cuh_1a2d60ed698def73d0f1136575739daaa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>typename functor_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; weight_t &gt;</type>
        <definition>rmm::device_uvector&lt; weight_t &gt; cugraph::detail::similarity</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, std::tuple&lt; raft::device_span&lt; vertex_t const &gt;, raft::device_span&lt; vertex_t const &gt; &gt; vertex_pairs, functor_t functor, bool do_expensive_check=false)</argsstring>
        <name>similarity</name>
        <qualifiedname>cugraph::detail::similarity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::tuple&lt; raft::device_span&lt; vertex_t const &gt;, raft::device_span&lt; vertex_t const &gt; &gt;</type>
          <declname>vertex_pairs</declname>
        </param>
        <param>
          <type>functor_t</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/link_prediction/similarity_impl.cuh" line="40" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/link_prediction/similarity_impl.cuh" bodystart="40" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="similarity__impl_8cuh_1a26b72a196443d3d231b92c888788c9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>typename functor_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; weight_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; weight_t &gt; &gt; cugraph::detail::all_pairs_similarity</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, std::optional&lt; raft::device_span&lt; vertex_t const &gt; &gt; vertices, std::optional&lt; size_t &gt; topk, functor_t functor, bool do_expensive_check=false)</argsstring>
        <name>all_pairs_similarity</name>
        <qualifiedname>cugraph::detail::all_pairs_similarity</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; vertex_t const &gt; &gt;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>topk</declname>
        </param>
        <param>
          <type>functor_t</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/link_prediction/similarity_impl.cuh" line="171" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/link_prediction/similarity_impl.cuh" bodystart="171" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="extract__transform__v__frontier__e_8cuh_1aebdbb474d16709da288361032e5d1051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BufferKeyOutputIterator</type>
          </param>
          <param>
            <type>typename BufferValueOutputIterator</type>
          </param>
          <param>
            <type>typename e_op_result_t</type>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void cugraph::detail::push_buffer_element</definition>
        <argsstring>(BufferKeyOutputIterator buffer_key_output_first, BufferValueOutputIterator buffer_value_output_first, size_t buffer_idx, e_op_result_t e_op_result)</argsstring>
        <name>push_buffer_element</name>
        <qualifiedname>cugraph::detail::push_buffer_element</qualifiedname>
        <param>
          <type>BufferKeyOutputIterator</type>
          <declname>buffer_key_output_first</declname>
        </param>
        <param>
          <type>BufferValueOutputIterator</type>
          <declname>buffer_value_output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_idx</declname>
        </param>
        <param>
          <type>e_op_result_t</type>
          <declname>e_op_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="69" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="69" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="extract__transform__v__frontier__e_8cuh_1a6c1c7ba006429447cbbcecd3ca365673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BufferKeyOutputIterator</type>
          </param>
          <param>
            <type>typename BufferValueOutputIterator</type>
          </param>
          <param>
            <type>typename e_op_result_t</type>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void cugraph::detail::warp_push_buffer_elements</definition>
        <argsstring>(BufferKeyOutputIterator buffer_key_output_first, BufferValueOutputIterator buffer_value_output_first, cuda::atomic_ref&lt; size_t, cuda::thread_scope_device &gt; &amp;buffer_idx, int lane_id, e_op_result_t e_op_result)</argsstring>
        <name>warp_push_buffer_elements</name>
        <qualifiedname>cugraph::detail::warp_push_buffer_elements</qualifiedname>
        <param>
          <type>BufferKeyOutputIterator</type>
          <declname>buffer_key_output_first</declname>
        </param>
        <param>
          <type>BufferValueOutputIterator</type>
          <declname>buffer_value_output_first</declname>
        </param>
        <param>
          <type>cuda::atomic_ref&lt; size_t, cuda::thread_scope_device &gt; &amp;</type>
          <declname>buffer_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lane_id</declname>
        </param>
        <param>
          <type>e_op_result_t</type>
          <declname>e_op_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="95" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="95" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="extract__transform__v__frontier__e_8cuh_1ac6bf6ce42f09816eddf88b892e22b0af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>hypersparse</declname>
            <defname>hypersparse</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename BufferKeyOutputIterator</type>
          </param>
          <param>
            <type>typename BufferValueOutputIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::extract_transform_v_frontier_e_hypersparse_or_low_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, KeyIterator key_first, KeyIterator key_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, BufferKeyOutputIterator buffer_key_output_first, BufferValueOutputIterator buffer_value_output_first, size_t *buffer_idx_ptr, EdgeOp e_op)</argsstring>
        <name>extract_transform_v_frontier_e_hypersparse_or_low_degree</name>
        <qualifiedname>cugraph::detail::extract_transform_v_frontier_e_hypersparse_or_low_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>BufferKeyOutputIterator</type>
          <declname>buffer_key_output_first</declname>
        </param>
        <param>
          <type>BufferValueOutputIterator</type>
          <declname>buffer_value_output_first</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buffer_idx_ptr</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="130" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="130" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="extract__transform__v__frontier__e_8cuh_1adca9907ae775ccd2335a8bcd01b556f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename BufferKeyOutputIterator</type>
          </param>
          <param>
            <type>typename BufferValueOutputIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::extract_transform_v_frontier_e_mid_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, KeyIterator key_first, KeyIterator key_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, BufferKeyOutputIterator buffer_key_output_first, BufferValueOutputIterator buffer_value_output_first, size_t *buffer_idx_ptr, EdgeOp e_op)</argsstring>
        <name>extract_transform_v_frontier_e_mid_degree</name>
        <qualifiedname>cugraph::detail::extract_transform_v_frontier_e_mid_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>BufferKeyOutputIterator</type>
          <declname>buffer_key_output_first</declname>
        </param>
        <param>
          <type>BufferValueOutputIterator</type>
          <declname>buffer_value_output_first</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buffer_idx_ptr</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="296" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="296" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="extract__transform__v__frontier__e_8cuh_1a95adc673400891175413d07f7a772b51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename BufferKeyOutputIterator</type>
          </param>
          <param>
            <type>typename BufferValueOutputIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::extract_transform_v_frontier_e_high_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, KeyIterator key_first, KeyIterator key_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, BufferKeyOutputIterator buffer_key_output_first, BufferValueOutputIterator buffer_value_output_first, size_t *buffer_idx_ptr, EdgeOp e_op)</argsstring>
        <name>extract_transform_v_frontier_e_high_degree</name>
        <qualifiedname>cugraph::detail::extract_transform_v_frontier_e_high_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>BufferKeyOutputIterator</type>
          <declname>buffer_key_output_first</declname>
        </param>
        <param>
          <type>BufferValueOutputIterator</type>
          <declname>buffer_value_output_first</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buffer_idx_ptr</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="392" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="392" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="extract__transform__v__frontier__e_8cuh_1ab738e4a502f054238ad05c905b23e6da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>incoming</declname>
            <defname>incoming</defname>
          </param>
          <param>
            <type>typename OutputKeyT</type>
          </param>
          <param>
            <type>typename OutputValueT</type>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexFrontierBucketType</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; decltype(allocate_optional_dataframe_buffer&lt; OutputKeyT &gt;(size_t{0}, rmm::cuda_stream_view{})), decltype(allocate_optional_dataframe_buffer&lt; OutputValueT &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt;</type>
        <definition>std::tuple&lt; decltype(allocate_optional_dataframe_buffer&lt; OutputKeyT &gt;(size_t{0}, rmm::cuda_stream_view{})), decltype(allocate_optional_dataframe_buffer&lt; OutputValueT &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; cugraph::detail::extract_transform_v_frontier_e</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexFrontierBucketType const &amp;frontier, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeOp e_op, bool do_expensive_check=false)</argsstring>
        <name>extract_transform_v_frontier_e</name>
        <qualifiedname>cugraph::detail::extract_transform_v_frontier_e</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexFrontierBucketType const &amp;</type>
          <declname>frontier</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" line="491" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/extract_transform_v_frontier_e.cuh" bodystart="491" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="nbr__intersection_8cuh_1a851f096f0f92f89f1993e371e1c38eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>check_edge_mask</declname>
            <defname>check_edge_mask</defname>
          </param>
          <param>
            <type>typename InputKeyIterator0</type>
          </param>
          <param>
            <type>typename InputKeyIterator1</type>
          </param>
          <param>
            <type>typename InputValueIterator0</type>
          </param>
          <param>
            <type>typename InputValueIterator1</type>
          </param>
          <param>
            <type>typename MaskIterator</type>
          </param>
          <param>
            <type>typename OutputKeyIterator</type>
          </param>
          <param>
            <type>typename OutputValueIterator0</type>
          </param>
          <param>
            <type>typename OutputValueIterator1</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
        </templateparamlist>
        <type>__device__ edge_t</type>
        <definition>__device__ edge_t cugraph::detail::set_intersection_by_key_with_mask</definition>
        <argsstring>(InputKeyIterator0 input_key_first0, InputKeyIterator1 input_key_first1, InputValueIterator0 input_value_first0, InputValueIterator1 input_value_first1, MaskIterator mask_first, OutputKeyIterator output_key_first, OutputValueIterator0 output_value_first0, OutputValueIterator1 output_value_first1, edge_t input_start_offset0, edge_t input_size0, bool apply_mask0, edge_t input_start_offset1, edge_t input_size1, bool apply_mask1, size_t output_start_offset)</argsstring>
        <name>set_intersection_by_key_with_mask</name>
        <qualifiedname>cugraph::detail::set_intersection_by_key_with_mask</qualifiedname>
        <param>
          <type>InputKeyIterator0</type>
          <declname>input_key_first0</declname>
        </param>
        <param>
          <type>InputKeyIterator1</type>
          <declname>input_key_first1</declname>
        </param>
        <param>
          <type>InputValueIterator0</type>
          <declname>input_value_first0</declname>
        </param>
        <param>
          <type>InputValueIterator1</type>
          <declname>input_value_first1</declname>
        </param>
        <param>
          <type>MaskIterator</type>
          <declname>mask_first</declname>
        </param>
        <param>
          <type>OutputKeyIterator</type>
          <declname>output_key_first</declname>
        </param>
        <param>
          <type>OutputValueIterator0</type>
          <declname>output_value_first0</declname>
        </param>
        <param>
          <type>OutputValueIterator1</type>
          <declname>output_value_first1</declname>
        </param>
        <param>
          <type>edge_t</type>
          <declname>input_start_offset0</declname>
        </param>
        <param>
          <type>edge_t</type>
          <declname>input_size0</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>apply_mask0</declname>
        </param>
        <param>
          <type>edge_t</type>
          <declname>input_start_offset1</declname>
        </param>
        <param>
          <type>edge_t</type>
          <declname>input_size1</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>apply_mask1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_start_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/nbr_intersection.cuh" line="334" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/nbr_intersection.cuh" bodystart="334" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="nbr__intersection_8cuh_1a60e0b2255682bbfa11a9c386d8b235ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexPairIterator</type>
          </param>
          <param>
            <type>typename EdgeValueInputIterator</type>
          </param>
        </templateparamlist>
        <type>std::conditional_t&lt; !std::is_same_v&lt; typename EdgeValueInputIterator::value_type, thrust::nullopt_t &gt;, std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, rmm::device_uvector&lt; typename EdgeValueInputIterator::value_type &gt;, rmm::device_uvector&lt; typename EdgeValueInputIterator::value_type &gt; &gt;, std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &gt; &gt;</type>
        <definition>std::conditional_t&lt; !std::is_same_v&lt; typename EdgeValueInputIterator::value_type, thrust::nullopt_t &gt;, std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, rmm::device_uvector&lt; typename EdgeValueInputIterator::value_type &gt;, rmm::device_uvector&lt; typename EdgeValueInputIterator::value_type &gt; &gt;, std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &gt; &gt; cugraph::detail::nbr_intersection</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, EdgeValueInputIterator edge_value_input, VertexPairIterator vertex_pair_first, VertexPairIterator vertex_pair_last, std::array&lt; bool, 2 &gt; intersect_dst_nbr, bool do_expensive_check=false)</argsstring>
        <name>nbr_intersection</name>
        <qualifiedname>cugraph::detail::nbr_intersection</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>EdgeValueInputIterator</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>VertexPairIterator</type>
          <declname>vertex_pair_first</declname>
        </param>
        <param>
          <type>VertexPairIterator</type>
          <declname>vertex_pair_last</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 2 &gt;</type>
          <declname>intersect_dst_nbr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/nbr_intersection.cuh" line="673" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/nbr_intersection.cuh" bodystart="673" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a553b71eb596da7d7ea611b63e028d63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>std::byte</type>
        <definition>std::byte cugraph::detail::allocate_optional_dataframe_buffer</definition>
        <argsstring>(size_t size, rmm::cuda_stream_view stream)</argsstring>
        <name>allocate_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::allocate_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="44" column="11" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1ace11a4933808bc28e9b574408aa34758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::allocate_optional_dataframe_buffer</definition>
        <argsstring>(size_t size, rmm::cuda_stream_view stream)</argsstring>
        <name>allocate_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::allocate_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="50" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a9e9d771543ccfda177d237b7ff68e3fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>void * cugraph::detail::get_optional_dataframe_buffer_begin</definition>
        <argsstring>(std::byte &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_begin</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_begin</qualifiedname>
        <param>
          <type>std::byte &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="56" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1ad1f533ff948a1a2abab660cadd89f56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_optional_dataframe_buffer_begin</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_begin</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_begin</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="62" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1af1a289fa6f22505bd0ba12f3bb9af1ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>void * cugraph::detail::get_optional_dataframe_buffer_end</definition>
        <argsstring>(std::byte &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_end</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_end</qualifiedname>
        <param>
          <type>std::byte &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="70" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a08474b4f9e5d43e357320a889265fb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_optional_dataframe_buffer_end</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_end</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_end</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="76" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a62116dc56b7f356d6ad169314f17fc5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void const *</type>
        <definition>void const  * cugraph::detail::get_optional_dataframe_buffer_cbegin</definition>
        <argsstring>(std::byte const &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_cbegin</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_cbegin</qualifiedname>
        <param>
          <type>std::byte const &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="84" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1ac4d41fdf8bd09ef1a98de74250114431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_optional_dataframe_buffer_cbegin</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; const &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_cbegin</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_cbegin</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; const &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="90" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a9bb15000d41b68a4d089169396308481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void const *</type>
        <definition>void const  * cugraph::detail::get_optional_dataframe_buffer_cend</definition>
        <argsstring>(std::byte const &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_cend</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_cend</qualifiedname>
        <param>
          <type>std::byte const &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="98" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a24aba930d91ce3b699fe8e6c7ba63336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_optional_dataframe_buffer_cend</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; const &amp;optional_dataframe_buffer)</argsstring>
        <name>get_optional_dataframe_buffer_cend</name>
        <qualifiedname>cugraph::detail::get_optional_dataframe_buffer_cend</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; const &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="104" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a2d5c2b69988be24c05547a6073a7b26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::reserve_optional_dataframe_buffer</definition>
        <argsstring>(std::byte &amp;optional_dataframe_buffer, size_t new_buffer_capacity, rmm::cuda_stream_view stream_view)</argsstring>
        <name>reserve_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::reserve_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::byte &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_buffer_capacity</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="112" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="112" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a06c5fd570e0520a1e3e1d69934ae3686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::reserve_optional_dataframe_buffer</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;optional_dataframe_buffer, size_t new_buffer_capacity, rmm::cuda_stream_view stream_view)</argsstring>
        <name>reserve_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::reserve_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_buffer_capacity</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="120" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="120" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1aaf992e763734bb61592f067ec2455e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::resize_optional_dataframe_buffer</definition>
        <argsstring>(std::byte &amp;optional_dataframe_buffer, size_t new_buffer_size, rmm::cuda_stream_view stream_view)</argsstring>
        <name>resize_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::resize_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::byte &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_buffer_size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="130" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1aca90f80ae0b686d47e8f59eccdc4da6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::resize_optional_dataframe_buffer</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;optional_dataframe_buffer, size_t new_buffer_size, rmm::cuda_stream_view stream_view)</argsstring>
        <name>resize_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::resize_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_buffer_size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="138" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="138" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a188dda585ef3c142908f5fc41807a124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::shrink_to_fit_optional_dataframe_buffer</definition>
        <argsstring>(std::byte &amp;optional_dataframe_buffer, rmm::cuda_stream_view stream_view)</argsstring>
        <name>shrink_to_fit_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::shrink_to_fit_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::byte &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="148" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a87f97c133e842dda72b087822a477e43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::shrink_to_fit_optional_dataframe_buffer</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;optional_dataframe_buffer, rmm::cuda_stream_view stream_view)</argsstring>
        <name>shrink_to_fit_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::shrink_to_fit_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="155" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1a19feeae641d596f475732154b54c9633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t cugraph::detail::size_optional_dataframe_buffer</definition>
        <argsstring>(std::byte const &amp;optional_dataframe_buffer)</argsstring>
        <name>size_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::size_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::byte const &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="164" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="optional__dataframe__buffer_8hpp_1acff4f1bb14d50aecfa31033d0280e72c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_same_v&lt; T, void &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t cugraph::detail::size_optional_dataframe_buffer</definition>
        <argsstring>(std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; const &amp;optional_dataframe_buffer)</argsstring>
        <name>size_optional_dataframe_buffer</name>
        <qualifiedname>cugraph::detail::size_optional_dataframe_buffer</qualifiedname>
        <param>
          <type>std::decay_t&lt; decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; const &amp;</type>
          <declname>optional_dataframe_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" line="170" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/optional_dataframe_buffer.hpp" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="partition__v__frontier_8cuh_1ae04d22783c303e76db4d774d527a8c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, std::vector&lt; size_t &gt; &gt; cugraph::detail::partition_v_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, ValueIterator frontier_value_first, ValueIterator frontier_value_last, std::vector&lt; typename thrust::iterator_traits&lt; ValueIterator &gt;::value_type &gt; const &amp;thresholds)</argsstring>
        <name>partition_v_frontier</name>
        <qualifiedname>cugraph::detail::partition_v_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>frontier_value_first</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>frontier_value_last</declname>
        </param>
        <param>
          <type>std::vector&lt; typename thrust::iterator_traits&lt; ValueIterator &gt;::value_type &gt; const &amp;</type>
          <declname>thresholds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/partition_v_frontier.cuh" line="55" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/partition_v_frontier.cuh" bodystart="55" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1ad885a7031b34392c55b7993955450270" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::compute_valid_local_nbr_count_inclusive_sums_mid_local_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; edge_partition, edge_partition_edge_property_device_view_t&lt; edge_t, uint32_t const *, bool &gt; edge_partition_e_mask, vertex_t const *edge_partition_frontier_major_first, raft::device_span&lt; size_t const &gt; inclusive_sum_offsets, raft::device_span&lt; size_t const &gt; frontier_indices, raft::device_span&lt; edge_t &gt; inclusive_sums)</argsstring>
        <name>compute_valid_local_nbr_count_inclusive_sums_mid_local_degree</name>
        <qualifiedname>cugraph::detail::compute_valid_local_nbr_count_inclusive_sums_mid_local_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, uint32_t const *, bool &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>edge_partition_frontier_major_first</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>inclusive_sum_offsets</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>frontier_indices</declname>
        </param>
        <param>
          <type>raft::device_span&lt; edge_t &gt;</type>
          <declname>inclusive_sums</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="220" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="220" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1adef9a8dec1ec2dc5c64bb05a1fcd5ce4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::compute_valid_local_nbr_count_inclusive_sums_high_local_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; edge_partition, edge_partition_edge_property_device_view_t&lt; edge_t, uint32_t const *, bool &gt; edge_partition_e_mask, vertex_t const *edge_partition_frontier_major_first, raft::device_span&lt; size_t const &gt; inclusive_sum_offsets, raft::device_span&lt; size_t const &gt; frontier_indices, raft::device_span&lt; edge_t &gt; inclusive_sums)</argsstring>
        <name>compute_valid_local_nbr_count_inclusive_sums_high_local_degree</name>
        <qualifiedname>cugraph::detail::compute_valid_local_nbr_count_inclusive_sums_high_local_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, uint32_t const *, bool &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>edge_partition_frontier_major_first</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>inclusive_sum_offsets</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>frontier_indices</declname>
        </param>
        <param>
          <type>raft::device_span&lt; edge_t &gt;</type>
          <declname>inclusive_sums</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="274" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="274" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1a91158a325dc7f43f9b76b5c74b1147b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; value_t &gt;, rmm::device_uvector&lt; value_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; value_t &gt;, rmm::device_uvector&lt; value_t &gt; &gt; cugraph::detail::compute_frontier_value_sums_and_partitioned_local_value_sum_displacements</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; value_t const &gt; aggregate_local_frontier_local_value_sums, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes)</argsstring>
        <name>compute_frontier_value_sums_and_partitioned_local_value_sum_displacements</name>
        <qualifiedname>cugraph::detail::compute_frontier_value_sums_and_partitioned_local_value_sum_displacements</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; value_t const &gt;</type>
          <declname>aggregate_local_frontier_local_value_sums</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="331" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="331" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1a916307e3068175d7bc7459c606921f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::edge_type &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::edge_type &gt; &gt; &gt; cugraph::detail::compute_valid_local_nbr_count_inclusive_sums</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexIterator aggregate_local_frontier_major_first, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes)</argsstring>
        <name>compute_valid_local_nbr_count_inclusive_sums</name>
        <qualifiedname>cugraph::detail::compute_valid_local_nbr_count_inclusive_sums</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>aggregate_local_frontier_major_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="372" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="372" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1af9b4c4a039fb6b0afef4f055b7b31822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename edge_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; edge_t &gt;</type>
        <definition>rmm::device_uvector&lt; edge_t &gt; cugraph::detail::compute_uniform_sampling_index_without_replacement</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; edge_t &gt; &amp;&amp;frontier_degrees, raft::random::RngState &amp;rng_state, size_t K)</argsstring>
        <name>compute_uniform_sampling_index_without_replacement</name>
        <qualifiedname>cugraph::detail::compute_uniform_sampling_index_without_replacement</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; edge_t &gt; &amp;&amp;</type>
          <declname>frontier_degrees</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="514" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="514" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1a7e9921ec1d7e5e2eb910e18fa998bd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename bias_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::compute_biased_sampling_index_without_replacement</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::optional&lt; raft::device_span&lt; size_t const &gt; &gt; input_frontier_indices, raft::device_span&lt; size_t const &gt; input_degree_offsets, raft::device_span&lt; bias_t const &gt; input_biases, std::optional&lt; raft::device_span&lt; size_t const &gt; &gt; output_frontier_indices, raft::device_span&lt; edge_t &gt; output_nbr_indices, std::optional&lt; raft::device_span&lt; bias_t &gt; &gt; output_keys, raft::random::RngState &amp;rng_state, size_t K, bool jump)</argsstring>
        <name>compute_biased_sampling_index_without_replacement</name>
        <qualifiedname>cugraph::detail::compute_biased_sampling_index_without_replacement</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; size_t const &gt; &gt;</type>
          <declname>input_frontier_indices</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>input_degree_offsets</declname>
        </param>
        <param>
          <type>raft::device_span&lt; bias_t const &gt;</type>
          <declname>input_biases</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; size_t const &gt; &gt;</type>
          <declname>output_frontier_indices</declname>
        </param>
        <param>
          <type>raft::device_span&lt; edge_t &gt;</type>
          <declname>output_nbr_indices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; bias_t &gt; &gt;</type>
          <declname>output_keys</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>jump</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="905" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="905" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1a508592315dbf2047522457cee9e6311e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; typename GraphViewType::edge_type &gt;</type>
        <definition>rmm::device_uvector&lt; typename GraphViewType::edge_type &gt; cugraph::detail::compute_aggregate_local_frontier_local_degrees</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexIterator aggregate_local_frontier_major_first, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes)</argsstring>
        <name>compute_aggregate_local_frontier_local_degrees</name>
        <qualifiedname>cugraph::detail::compute_aggregate_local_frontier_local_degrees</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>aggregate_local_frontier_major_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="1131" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="1131" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1ac92eaf04da295b2942705e56619b92d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeBiasOp</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; typename <ref refid="structcugraph_1_1detail_1_1edge__op__result__type" kindref="compound">edge_op_result_type</ref>&lt; typename thrust::iterator_traits&lt; KeyIterator &gt;::value_type, typename GraphViewType::vertex_type, typename EdgeSrcValueInputWrapper::value_type, typename EdgeDstValueInputWrapper::value_type, typename EdgeValueInputWrapper::value_type, EdgeBiasOp &gt;::type &gt;, rmm::device_uvector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; typename edge_op_result_type&lt; typename thrust::iterator_traits&lt; KeyIterator &gt;::value_type, typename GraphViewType::vertex_type, typename EdgeSrcValueInputWrapper::value_type, typename EdgeDstValueInputWrapper::value_type, typename EdgeValueInputWrapper::value_type, EdgeBiasOp &gt;::type &gt;, rmm::device_uvector&lt; size_t &gt; &gt; cugraph::detail::compute_aggregate_local_frontier_biases</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, KeyIterator aggregate_local_frontier_key_first, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeBiasOp e_bias_op, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes, bool do_expensive_check)</argsstring>
        <name>compute_aggregate_local_frontier_biases</name>
        <qualifiedname>cugraph::detail::compute_aggregate_local_frontier_biases</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>aggregate_local_frontier_key_first</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeBiasOp</type>
          <declname>e_bias_op</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="1198" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="1198" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1ac3574ecfb28ccc22441a74827c10596b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; value_t &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; value_t &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, std::vector&lt; size_t &gt; &gt; cugraph::detail::shuffle_and_compute_local_nbr_values</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; value_t &gt; &amp;&amp;sample_nbr_values, std::optional&lt; raft::device_span&lt; value_t const &gt; &gt; frontier_partitioned_value_local_sum_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes, size_t K, value_t invalid_value)</argsstring>
        <name>shuffle_and_compute_local_nbr_values</name>
        <qualifiedname>cugraph::detail::shuffle_and_compute_local_nbr_values</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; value_t &gt; &amp;&amp;</type>
          <declname>sample_nbr_values</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; value_t const &gt; &gt;</type>
          <declname>frontier_partitioned_value_local_sum_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <param>
          <type>value_t</type>
          <declname>invalid_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="1255" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="1255" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1afe473d4c9a2ad8e54ed77aaeaaf9329d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; typename GraphViewType::edge_type &gt;</type>
        <definition>rmm::device_uvector&lt; typename GraphViewType::edge_type &gt; cugraph::detail::convert_to_unmasked_local_nbr_idx</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexIterator aggregate_local_frontier_major_first, rmm::device_uvector&lt; typename GraphViewType::edge_type &gt; &amp;&amp;local_nbr_indices, std::optional&lt; raft::device_span&lt; size_t const &gt; &gt; key_indices, std::vector&lt; size_t &gt; const &amp;local_frontier_sample_offsets, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes, size_t K)</argsstring>
        <name>convert_to_unmasked_local_nbr_idx</name>
        <qualifiedname>cugraph::detail::convert_to_unmasked_local_nbr_idx</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>aggregate_local_frontier_major_first</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; typename GraphViewType::edge_type &gt; &amp;&amp;</type>
          <declname>local_nbr_indices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; size_t const &gt; &gt;</type>
          <declname>key_indices</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sample_offsets</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="1366" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="1366" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1ac16a2997399d6f6f6ac59162068967ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::edge_type &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::edge_type &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, std::vector&lt; size_t &gt; &gt; cugraph::detail::uniform_sample_and_compute_local_nbr_indices</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, KeyIterator aggregate_local_frontier_key_first, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes, raft::random::RngState &amp;rng_state, size_t K, bool with_replacement)</argsstring>
        <name>uniform_sample_and_compute_local_nbr_indices</name>
        <qualifiedname>cugraph::detail::uniform_sample_and_compute_local_nbr_indices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>aggregate_local_frontier_key_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="1444" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="1444" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="sample__and__compute__local__nbr__indices_8cuh_1aafb0c67ffb28f678a07ed7b2dee935c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeBiasOp</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::edge_type &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::edge_type &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, std::vector&lt; size_t &gt; &gt; cugraph::detail::biased_sample_and_compute_local_nbr_indices</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, KeyIterator aggregate_local_frontier_key_first, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeBiasOp e_bias_op, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes, raft::random::RngState &amp;rng_state, size_t K, bool with_replacement, bool do_expensive_check)</argsstring>
        <name>biased_sample_and_compute_local_nbr_indices</name>
        <qualifiedname>cugraph::detail::biased_sample_and_compute_local_nbr_indices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>aggregate_local_frontier_key_first</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeBiasOp</type>
          <declname>e_bias_op</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" line="1566" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/sample_and_compute_local_nbr_indices.cuh" bodystart="1566" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="transform__v__frontier__e_8cuh_1a5c55f6ba6812e2968318d0f68a6a7446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename key_t</type>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void cugraph::detail::transform_v_frontier_e_update_buffer_element</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; &amp;edge_partition, key_t key, typename GraphViewType::vertex_type major_offset, typename GraphViewType::vertex_type minor, typename GraphViewType::edge_type edge_offset, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgeOp e_op, ValueIterator value_iter)</argsstring>
        <name>transform_v_frontier_e_update_buffer_element</name>
        <qualifiedname>cugraph::detail::transform_v_frontier_e_update_buffer_element</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; &amp;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>key_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_offset</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>typename GraphViewType::edge_type</type>
          <declname>edge_offset</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" line="53" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" bodystart="53" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="transform__v__frontier__e_8cuh_1a99ae778e0de58993485031dfb9dd3383" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>hypersparse</declname>
            <defname>hypersparse</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename IndexIterator</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_v_frontier_e_hypersparse_or_low_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, KeyIterator edge_partition_frontier_key_first, IndexIterator edge_partition_frontier_key_index_first, IndexIterator edge_partition_frontier_key_index_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, raft::device_span&lt; size_t const &gt; edge_partition_frontier_local_degree_offsets, EdgeOp e_op, ValueIterator value_first)</argsstring>
        <name>transform_v_frontier_e_hypersparse_or_low_degree</name>
        <qualifiedname>cugraph::detail::transform_v_frontier_e_hypersparse_or_low_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>edge_partition_frontier_key_first</declname>
        </param>
        <param>
          <type>IndexIterator</type>
          <declname>edge_partition_frontier_key_index_first</declname>
        </param>
        <param>
          <type>IndexIterator</type>
          <declname>edge_partition_frontier_key_index_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>edge_partition_frontier_local_degree_offsets</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" line="99" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" bodystart="99" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="transform__v__frontier__e_8cuh_1aac8745295d72c66d3d6081a003899332" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename IndexIterator</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_v_frontier_e_mid_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, KeyIterator edge_partition_frontier_key_first, IndexIterator edge_partition_frontier_key_index_first, IndexIterator edge_partition_frontier_key_index_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, raft::device_span&lt; size_t const &gt; edge_partition_frontier_local_degree_offsets, EdgeOp e_op, ValueIterator value_first)</argsstring>
        <name>transform_v_frontier_e_mid_degree</name>
        <qualifiedname>cugraph::detail::transform_v_frontier_e_mid_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>edge_partition_frontier_key_first</declname>
        </param>
        <param>
          <type>IndexIterator</type>
          <declname>edge_partition_frontier_key_index_first</declname>
        </param>
        <param>
          <type>IndexIterator</type>
          <declname>edge_partition_frontier_key_index_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>edge_partition_frontier_local_degree_offsets</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" line="188" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" bodystart="188" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="transform__v__frontier__e_8cuh_1aba66fcb5855998f43770236e458336b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename IndexIterator</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_v_frontier_e_high_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, KeyIterator edge_partition_frontier_key_first, IndexIterator edge_partition_frontier_key_index_first, IndexIterator edge_partition_frontier_key_index_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, raft::device_span&lt; size_t const &gt; edge_partition_frontier_local_degree_offsets, EdgeOp e_op, ValueIterator value_first)</argsstring>
        <name>transform_v_frontier_e_high_degree</name>
        <qualifiedname>cugraph::detail::transform_v_frontier_e_high_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>edge_partition_frontier_key_first</declname>
        </param>
        <param>
          <type>IndexIterator</type>
          <declname>edge_partition_frontier_key_index_first</declname>
        </param>
        <param>
          <type>IndexIterator</type>
          <declname>edge_partition_frontier_key_index_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>raft::device_span&lt; size_t const &gt;</type>
          <declname>edge_partition_frontier_local_degree_offsets</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" line="280" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" bodystart="280" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="transform__v__frontier__e_8cuh_1ab8277ddd907c063be601c0ca7fc9ecd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::transform_v_frontier_e</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, KeyIterator aggregate_local_frontier_key_first, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeOp e_op, std::vector&lt; size_t &gt; const &amp;local_frontier_displacements, std::vector&lt; size_t &gt; const &amp;local_frontier_sizes)</argsstring>
        <name>transform_v_frontier_e</name>
        <qualifiedname>cugraph::detail::transform_v_frontier_e</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>aggregate_local_frontier_key_first</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_displacements</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>local_frontier_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" line="367" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/detail/transform_v_frontier_e.cuh" bodystart="367" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="fill__edge__property_8cuh_1a5bfcf283c4a527c3bac2b7e10dc1bdf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename EdgePropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::fill_edge_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, T input, EdgePropertyOutputWrapper edge_property_output)</argsstring>
        <name>fill_edge_property</name>
        <qualifiedname>cugraph::detail::fill_edge_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>T</type>
          <declname>input</declname>
        </param>
        <param>
          <type>EdgePropertyOutputWrapper</type>
          <declname>edge_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/fill_edge_property.cuh" line="37" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/fill_edge_property.cuh" bodystart="37" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="fill__edge__src__dst__property_8cuh_1aa132ce8d0eb19c505e335be620422752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename EdgeMajorPropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::fill_edge_major_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, T input, EdgeMajorPropertyOutputWrapper edge_major_property_output)</argsstring>
        <name>fill_edge_major_property</name>
        <qualifiedname>cugraph::detail::fill_edge_major_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>T</type>
          <declname>input</declname>
        </param>
        <param>
          <type>EdgeMajorPropertyOutputWrapper</type>
          <declname>edge_major_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/fill_edge_src_dst_property.cuh" line="35" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/fill_edge_src_dst_property.cuh" bodystart="35" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="fill__edge__src__dst__property_8cuh_1ab3d61f7fcf912a96d9b8c40f16135d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename EdgeMinorPropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::fill_edge_minor_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, T input, EdgeMinorPropertyOutputWrapper edge_minor_property_output)</argsstring>
        <name>fill_edge_minor_property</name>
        <qualifiedname>cugraph::detail::fill_edge_minor_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>T</type>
          <declname>input</declname>
        </param>
        <param>
          <type>EdgeMinorPropertyOutputWrapper</type>
          <declname>edge_minor_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/fill_edge_src_dst_property.cuh" line="73" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/fill_edge_src_dst_property.cuh" bodystart="73" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="per__v__random__select__transform__outgoing__e_8cuh_1a2bcff939882e4307f3e1d6002e8a83a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>incoming</declname>
            <defname>incoming</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexFrontierBucketType</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeBiasOp</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt;</type>
        <definition>std::tuple&lt; std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt;, decltype(allocate_dataframe_buffer&lt; T &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; cugraph::detail::per_v_random_select_transform_e</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexFrontierBucketType const &amp;frontier, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeBiasOp e_bias_op, EdgeOp e_op, raft::random::RngState &amp;rng_state, size_t K, bool with_replacement, std::optional&lt; T &gt; invalid_value, bool do_expensive_check)</argsstring>
        <name>per_v_random_select_transform_e</name>
        <qualifiedname>cugraph::detail::per_v_random_select_transform_e</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexFrontierBucketType const &amp;</type>
          <declname>frontier</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeBiasOp</type>
          <declname>e_bias_op</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>K</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <param>
          <type>std::optional&lt; T &gt;</type>
          <declname>invalid_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_random_select_transform_outgoing_e.cuh" line="217" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_random_select_transform_outgoing_e.cuh" bodystart="217" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1af9fa934b327e528c7957b0e5675a714b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>update_major</declname>
            <defname>update_major</defname>
          </param>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>typename result_t</type>
          </param>
          <param>
            <type>typename TransformOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename ResultValueOutputIteratorOrWrapper</type>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void cugraph::detail::update_result_value_output</definition>
        <argsstring>(edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; const &amp;edge_partition, vertex_t const *indices, edge_t local_degree, TransformOp const &amp;transform_op, result_t init, ReduceOp const &amp;reduce_op, size_t output_idx, result_t identity_element, ResultValueOutputIteratorOrWrapper &amp;result_value_output)</argsstring>
        <name>update_result_value_output</name>
        <qualifiedname>cugraph::detail::update_result_value_output</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt; const &amp;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>edge_t</type>
          <declname>local_degree</declname>
        </param>
        <param>
          <type>TransformOp const &amp;</type>
          <declname>transform_op</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>init</declname>
        </param>
        <param>
          <type>ReduceOp const &amp;</type>
          <declname>reduce_op</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_idx</declname>
        </param>
        <param>
          <type>result_t</type>
          <declname>identity_element</declname>
        </param>
        <param>
          <type>ResultValueOutputIteratorOrWrapper &amp;</type>
          <declname>result_value_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="104" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="104" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1af976e6553fb437e1655645e2771132f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>update_major</declname>
            <defname>update_major</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultValueOutputIteratorOrWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::per_v_transform_reduce_e_hypersparse</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultValueOutputIteratorOrWrapper result_value_output, EdgeOp e_op, T init, T identity_element, ReduceOp reduce_op)</argsstring>
        <name>per_v_transform_reduce_e_hypersparse</name>
        <qualifiedname>cugraph::detail::per_v_transform_reduce_e_hypersparse</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultValueOutputIteratorOrWrapper</type>
          <declname>result_value_output</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>T</type>
          <declname>identity_element</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="152" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="152" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1a4de09e8e7ec126d16153dc0fbc49e11b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>update_major</declname>
            <defname>update_major</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultValueOutputIteratorOrWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::per_v_transform_reduce_e_low_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultValueOutputIteratorOrWrapper result_value_output, EdgeOp e_op, T init, T identity_element, ReduceOp reduce_op)</argsstring>
        <name>per_v_transform_reduce_e_low_degree</name>
        <qualifiedname>cugraph::detail::per_v_transform_reduce_e_low_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultValueOutputIteratorOrWrapper</type>
          <declname>result_value_output</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>T</type>
          <declname>identity_element</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="254" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="254" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1a478b288a35f5642a188100697cf3800d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>update_major</declname>
            <defname>update_major</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultValueOutputIteratorOrWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::per_v_transform_reduce_e_mid_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultValueOutputIteratorOrWrapper result_value_output, EdgeOp e_op, T init, T identity_element, ReduceOp reduce_op)</argsstring>
        <name>per_v_transform_reduce_e_mid_degree</name>
        <qualifiedname>cugraph::detail::per_v_transform_reduce_e_mid_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultValueOutputIteratorOrWrapper</type>
          <declname>result_value_output</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>T</type>
          <declname>identity_element</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="353" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="353" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1a53ab1fd91c7c55dcabc58c08f73ebd09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>update_major</declname>
            <defname>update_major</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultValueOutputIteratorOrWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::per_v_transform_reduce_e_high_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultValueOutputIteratorOrWrapper result_value_output, EdgeOp e_op, T init, T identity_element, ReduceOp reduce_op)</argsstring>
        <name>per_v_transform_reduce_e_high_degree</name>
        <qualifiedname>cugraph::detail::per_v_transform_reduce_e_high_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultValueOutputIteratorOrWrapper</type>
          <declname>result_value_output</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>T</type>
          <declname>identity_element</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="469" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="469" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="per__v__transform__reduce__incoming__outgoing__e_8cuh_1a44979924526126eac59d206f929c657d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>incoming</declname>
            <defname>incoming</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename VertexValueOutputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::per_v_transform_reduce_e</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeOp e_op, T init, ReduceOp reduce_op, VertexValueOutputIterator vertex_value_output_first)</argsstring>
        <name>per_v_transform_reduce_e</name>
        <qualifiedname>cugraph::detail::per_v_transform_reduce_e</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <param>
          <type>VertexValueOutputIterator</type>
          <declname>vertex_value_output_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" line="577" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/per_v_transform_reduce_incoming_outgoing_e.cuh" bodystart="577" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="transform__e_8cuh_1a649fcc872bcab2f60e52601c1e98960c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>check_edge_mask</declname>
            <defname>check_edge_mask</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueOutputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_e_packed_bool</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, EdgePartitionEdgeValueOutputWrapper edge_partition_e_value_output, EdgeOp e_op)</argsstring>
        <name>transform_e_packed_bool</name>
        <qualifiedname>cugraph::detail::transform_e_packed_bool</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueOutputWrapper</type>
          <declname>edge_partition_e_value_output</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_e.cuh" line="54" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_e.cuh" bodystart="54" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__dst__nbr__intersection__of__e__endpoints__by__v_8cuh_1a1753a2667a6836800b33b8ba3ce8b127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename ValueBuffer</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, ValueBuffer &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, ValueBuffer &gt; cugraph::detail::sort_and_reduce_by_vertices</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;vertices, ValueBuffer &amp;&amp;value_buffer)</argsstring>
        <name>sort_and_reduce_by_vertices</name>
        <qualifiedname>cugraph::detail::sort_and_reduce_by_vertices</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>ValueBuffer &amp;&amp;</type>
          <declname>value_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_dst_nbr_intersection_of_e_endpoints_by_v.cuh" line="111" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_dst_nbr_intersection_of_e_endpoints_by_v.cuh" bodystart="111" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e_8cuh_1a7f7a6b39b6a37774a6421208c0dc51b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_e_hypersparse</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultIterator result_iter, EdgeOp e_op)</argsstring>
        <name>transform_reduce_e_hypersparse</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_hypersparse</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultIterator</type>
          <declname>result_iter</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" line="64" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" bodystart="64" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e_8cuh_1ad266f46e1eea950fcbb3f71328d9ac5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_e_low_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultIterator result_iter, EdgeOp e_op)</argsstring>
        <name>transform_reduce_e_low_degree</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_low_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultIterator</type>
          <declname>result_iter</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" line="156" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" bodystart="156" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e_8cuh_1af82638841926643f093c56b364c6aeb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_e_mid_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultIterator result_iter, EdgeOp e_op)</argsstring>
        <name>transform_reduce_e_mid_degree</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_mid_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultIterator</type>
          <declname>result_iter</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" line="245" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" bodystart="245" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e_8cuh_1a646b669b0b461f0fae0e926d2116fc18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename ResultIterator</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_e_high_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt; edge_partition_e_mask, ResultIterator result_iter, EdgeOp e_op)</argsstring>
        <name>transform_reduce_e_high_degree</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_high_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>thrust::optional&lt; EdgePartitionEdgeMaskWrapper &gt;</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>ResultIterator</type>
          <declname>result_iter</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" line="323" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e.cuh" bodystart="323" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1a24a2bfb7fab073307a59b7d3a6a1fcff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>edge_partition_src_key</declname>
            <defname>edge_partition_src_key</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcDstKeyInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void cugraph::detail::transform_reduce_e_by_src_dst_key_update_buffer_element</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; &amp;edge_partition, typename GraphViewType::vertex_type major, typename GraphViewType::vertex_type minor, typename GraphViewType::edge_type edge_offset, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionSrcDstKeyInputWrapper edge_partition_src_dst_key_input, EdgeOp e_op, typename GraphViewType::vertex_type *key, ValueIterator value)</argsstring>
        <name>transform_reduce_e_by_src_dst_key_update_buffer_element</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_by_src_dst_key_update_buffer_element</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; &amp;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>typename GraphViewType::edge_type</type>
          <declname>edge_offset</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionSrcDstKeyInputWrapper</type>
          <declname>edge_partition_src_dst_key_input</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="59" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="59" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1ad318b7c43e75cda9b6adfcbe123aac27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>edge_partition_src_key</declname>
            <defname>edge_partition_src_key</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcDstKeyInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_by_src_dst_key_hypersparse</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionSrcDstKeyInputWrapper edge_partition_src_dst_key_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt; edge_offsets_with_mask, EdgeOp e_op, typename GraphViewType::vertex_type *keys, ValueIterator value_iter)</argsstring>
        <name>transform_reduce_by_src_dst_key_hypersparse</name>
        <qualifiedname>cugraph::detail::transform_reduce_by_src_dst_key_hypersparse</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionSrcDstKeyInputWrapper</type>
          <declname>edge_partition_src_dst_key_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt;</type>
          <declname>edge_offsets_with_mask</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="102" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="102" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1ac85ec335411bec30bd117e8a8d326d88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>edge_partition_src_key</declname>
            <defname>edge_partition_src_key</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcDstKeyInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_by_src_dst_key_low_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionSrcDstKeyInputWrapper edge_partition_src_dst_key_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt; edge_offsets_with_mask, EdgeOp e_op, typename GraphViewType::vertex_type *keys, ValueIterator value_iter)</argsstring>
        <name>transform_reduce_by_src_dst_key_low_degree</name>
        <qualifiedname>cugraph::detail::transform_reduce_by_src_dst_key_low_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionSrcDstKeyInputWrapper</type>
          <declname>edge_partition_src_dst_key_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt;</type>
          <declname>edge_offsets_with_mask</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="190" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="190" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1a66cd2eda212c1262a1bcd2fe8d03bd69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>edge_partition_src_key</declname>
            <defname>edge_partition_src_key</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcDstKeyInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_by_src_dst_key_mid_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionSrcDstKeyInputWrapper edge_partition_src_dst_key_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt; edge_offsets_with_mask, EdgeOp e_op, typename GraphViewType::vertex_type *keys, ValueIterator value_iter)</argsstring>
        <name>transform_reduce_by_src_dst_key_mid_degree</name>
        <qualifiedname>cugraph::detail::transform_reduce_by_src_dst_key_mid_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionSrcDstKeyInputWrapper</type>
          <declname>edge_partition_src_dst_key_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt;</type>
          <declname>edge_offsets_with_mask</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="276" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="276" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1ad89aaedea063d293627a736f9e165fd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>edge_partition_src_key</declname>
            <defname>edge_partition_src_key</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionSrcDstKeyInputWrapper</type>
          </param>
          <param>
            <type>typename EdgePartitionEdgeMaskWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::transform_reduce_by_src_dst_key_high_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt; edge_partition, typename GraphViewType::vertex_type major_range_first, typename GraphViewType::vertex_type major_range_last, EdgePartitionSrcValueInputWrapper edge_partition_src_value_input, EdgePartitionDstValueInputWrapper edge_partition_dst_value_input, EdgePartitionEdgeValueInputWrapper edge_partition_e_value_input, EdgePartitionSrcDstKeyInputWrapper edge_partition_src_dst_key_input, EdgePartitionEdgeMaskWrapper edge_partition_e_mask, thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt; edge_offsets_with_mask, EdgeOp e_op, typename GraphViewType::vertex_type *keys, ValueIterator value_iter)</argsstring>
        <name>transform_reduce_by_src_dst_key_high_degree</name>
        <qualifiedname>cugraph::detail::transform_reduce_by_src_dst_key_high_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; typename GraphViewType::vertex_type, typename GraphViewType::edge_type, GraphViewType::is_multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>EdgePartitionSrcValueInputWrapper</type>
          <declname>edge_partition_src_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionDstValueInputWrapper</type>
          <declname>edge_partition_dst_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeValueInputWrapper</type>
          <declname>edge_partition_e_value_input</declname>
        </param>
        <param>
          <type>EdgePartitionSrcDstKeyInputWrapper</type>
          <declname>edge_partition_src_dst_key_input</declname>
        </param>
        <param>
          <type>EdgePartitionEdgeMaskWrapper</type>
          <declname>edge_partition_e_mask</declname>
        </param>
        <param>
          <type>thrust::optional&lt; raft::device_span&lt; typename GraphViewType::edge_type const &gt; &gt;</type>
          <declname>edge_offsets_with_mask</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="375" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="375" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1abc8688729a1c22450538c8796d08304a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename value_t</type>
          </param>
          <param>
            <type>typename BufferType</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, BufferType &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, BufferType &gt; cugraph::detail::reduce_to_unique_kv_pairs</definition>
        <argsstring>(rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;keys, BufferType &amp;&amp;value_buffer, ReduceOp reduce_op, cudaStream_t stream)</argsstring>
        <name>reduce_to_unique_kv_pairs</name>
        <qualifiedname>cugraph::detail::reduce_to_unique_kv_pairs</qualifiedname>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>BufferType &amp;&amp;</type>
          <declname>value_buffer</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="464" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="464" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__e__by__src__dst__key_8cuh_1ac08365eb302409042bfc172fba9bdc8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>edge_src_key</declname>
            <defname>edge_src_key</defname>
          </param>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename EdgeSrcValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeDstValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeValueInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeSrcDstKeyInputWrapper</type>
          </param>
          <param>
            <type>typename EdgeOp</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, decltype(allocate_dataframe_buffer&lt; T &gt;(0, cudaStream_t{nullptr}))&gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt;, decltype(allocate_dataframe_buffer&lt; T &gt;(0, cudaStream_t{nullptr}))&gt; cugraph::detail::transform_reduce_e_by_src_dst_key</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, EdgeSrcValueInputWrapper edge_src_value_input, EdgeDstValueInputWrapper edge_dst_value_input, EdgeValueInputWrapper edge_value_input, EdgeSrcDstKeyInputWrapper edge_src_dst_key_input, EdgeOp e_op, T init, ReduceOp reduce_op)</argsstring>
        <name>transform_reduce_e_by_src_dst_key</name>
        <qualifiedname>cugraph::detail::transform_reduce_e_by_src_dst_key</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>EdgeSrcValueInputWrapper</type>
          <declname>edge_src_value_input</declname>
        </param>
        <param>
          <type>EdgeDstValueInputWrapper</type>
          <declname>edge_dst_value_input</declname>
        </param>
        <param>
          <type>EdgeValueInputWrapper</type>
          <declname>edge_value_input</declname>
        </param>
        <param>
          <type>EdgeSrcDstKeyInputWrapper</type>
          <declname>edge_src_dst_key_input</declname>
        </param>
        <param>
          <type>EdgeOp</type>
          <declname>e_op</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" line="505" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_e_by_src_dst_key.cuh" bodystart="505" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="transform__reduce__v__frontier__outgoing__e__by__dst_8cuh_1a4e5d9349dcc15d4b7093f86c93056638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename key_t</type>
          </param>
          <param>
            <type>typename payload_t</type>
          </param>
          <param>
            <type>typename ReduceOp</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::sort_and_reduce_buffer_elements</definition>
        <argsstring>(raft::handle_t const &amp;handle, decltype(allocate_dataframe_buffer&lt; key_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;key_buffer, decltype(allocate_optional_dataframe_buffer&lt; payload_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;payload_buffer, ReduceOp reduce_op)</argsstring>
        <name>sort_and_reduce_buffer_elements</name>
        <qualifiedname>cugraph::detail::sort_and_reduce_buffer_elements</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>decltype(allocate_dataframe_buffer&lt; key_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;</type>
          <declname>key_buffer</declname>
        </param>
        <param>
          <type>decltype(allocate_optional_dataframe_buffer&lt; payload_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;</type>
          <declname>payload_buffer</declname>
        </param>
        <param>
          <type>ReduceOp</type>
          <declname>reduce_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_v_frontier_outgoing_e_by_dst.cuh" line="112" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/transform_reduce_v_frontier_outgoing_e_by_dst.cuh" bodystart="112" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1a513f62ddc3831ca0f54aec4ddea371c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void cugraph::detail::packed_bool_atomic_set</definition>
        <argsstring>(Iterator value_first, vertex_t offset, bool val)</argsstring>
        <name>packed_bool_atomic_set</name>
        <qualifiedname>cugraph::detail::packed_bool_atomic_set</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="60" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="60" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1a8ec75bd31b2425350906b8c331772edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BoolInputIterator</type>
          </param>
          <param>
            <type>typename PackedBoolOutputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::pack_bools</definition>
        <argsstring>(raft::handle_t const &amp;handle, BoolInputIterator input_first, BoolInputIterator input_last, PackedBoolOutputIterator output_first)</argsstring>
        <name>pack_bools</name>
        <qualifiedname>cugraph::detail::pack_bools</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>BoolInputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>BoolInputIterator</type>
          <declname>input_last</declname>
        </param>
        <param>
          <type>PackedBoolOutputIterator</type>
          <declname>output_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="72" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="72" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1ade6d5015b86c10f8c4494edc2acc3546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BoolInputIterator</type>
          </param>
          <param>
            <type>typename PackedBoolOutputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::pack_unaligned_bools</definition>
        <argsstring>(raft::handle_t const &amp;handle, BoolInputIterator input_first, BoolInputIterator input_last, PackedBoolOutputIterator output_first, size_t intraword_start_offset)</argsstring>
        <name>pack_unaligned_bools</name>
        <qualifiedname>cugraph::detail::pack_unaligned_bools</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>BoolInputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>BoolInputIterator</type>
          <declname>input_last</declname>
        </param>
        <param>
          <type>PackedBoolOutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>intraword_start_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="86" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="86" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1ab3e610ae9becd22678866aff469436b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexPropertyInputIterator</type>
          </param>
          <param>
            <type>typename EdgeMajorPropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::update_edge_major_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexPropertyInputIterator vertex_property_input_first, EdgeMajorPropertyOutputWrapper edge_major_property_output)</argsstring>
        <name>update_edge_major_property</name>
        <qualifiedname>cugraph::detail::update_edge_major_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexPropertyInputIterator</type>
          <declname>vertex_property_input_first</declname>
        </param>
        <param>
          <type>EdgeMajorPropertyOutputWrapper</type>
          <declname>edge_major_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="128" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="128" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1a90610846b5afdde70444f8e7cf725c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
          <param>
            <type>typename VertexPropertyInputIterator</type>
          </param>
          <param>
            <type>typename EdgeMajorPropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::update_edge_major_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexIterator vertex_first, VertexIterator vertex_last, VertexPropertyInputIterator vertex_property_input_first, EdgeMajorPropertyOutputWrapper edge_major_property_output)</argsstring>
        <name>update_edge_major_property</name>
        <qualifiedname>cugraph::detail::update_edge_major_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertex_first</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertex_last</declname>
        </param>
        <param>
          <type>VertexPropertyInputIterator</type>
          <declname>vertex_property_input_first</declname>
        </param>
        <param>
          <type>EdgeMajorPropertyOutputWrapper</type>
          <declname>edge_major_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="271" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="271" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1ad1169ef213b4939dd5d67801b5df101f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexPropertyInputIterator</type>
          </param>
          <param>
            <type>typename EdgeMinorPropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::update_edge_minor_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexPropertyInputIterator vertex_property_input_first, EdgeMinorPropertyOutputWrapper edge_minor_property_output)</argsstring>
        <name>update_edge_minor_property</name>
        <qualifiedname>cugraph::detail::update_edge_minor_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexPropertyInputIterator</type>
          <declname>vertex_property_input_first</declname>
        </param>
        <param>
          <type>EdgeMinorPropertyOutputWrapper</type>
          <declname>edge_minor_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="443" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="443" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="update__edge__src__dst__property_8cuh_1afb32ecd7e7da1c9582cb945dc2ccfa1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
          <param>
            <type>typename VertexPropertyInputIterator</type>
          </param>
          <param>
            <type>typename EdgeMinorPropertyOutputWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::update_edge_minor_property</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexIterator vertex_first, VertexIterator vertex_last, VertexPropertyInputIterator vertex_property_input_first, EdgeMinorPropertyOutputWrapper edge_minor_property_output)</argsstring>
        <name>update_edge_minor_property</name>
        <qualifiedname>cugraph::detail::update_edge_minor_property</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertex_first</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>vertex_last</declname>
        </param>
        <param>
          <type>VertexPropertyInputIterator</type>
          <declname>vertex_property_input_first</declname>
        </param>
        <param>
          <type>EdgeMinorPropertyOutputWrapper</type>
          <declname>edge_minor_property_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" line="678" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/prims/update_edge_src_dst_property.cuh" bodystart="678" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__impl_8cuh_1ac068dfbd446cb258bd7058ffd26b1d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
          <param>
            <type>typename tag_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_type_t const * &gt; &gt; edge_type_view, cugraph::vertex_frontier_t&lt; vertex_t, tag_t, multi_gpu, false &gt; const &amp;vertex_frontier, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_type_t const * &gt; &gt;</type>
          <declname>edge_type_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__frontier__t" kindref="compound">cugraph::vertex_frontier_t</ref>&lt; vertex_t, tag_t, multi_gpu, false &gt; const &amp;</type>
          <declname>vertex_frontier</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_impl.cuh" line="109" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_impl.cuh" bodystart="109" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__impl_8cuh_1a7d294f37c79affeaefa1efc348899aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const  &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const  &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const  * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_t const  * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_type_t const  * &gt; &gt; edge_edge_type_view, raft::device_span&lt; vertex_t const  &gt; active_majors, std::optional&lt; raft::device_span&lt; label_t const  &gt; &gt; active_major_labels, bool do_expensive_check=false)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_type_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; label_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gather edge list for specified vertices. </para>
        </briefdescription>
        <detaileddescription>
<para>Collect all the edges that are present in the adjacency lists on the current gpu</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Needs to be a floating point type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge type. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of label. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multi_gpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether template instantiation should target single-GPU (false)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>graph_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Graph View object to generate neighbor sampling on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_weight_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional view object holding edge weights for <computeroutput>graph_view</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_id_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional view object holding edge ids for <computeroutput>graph_view</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional view object holding edge types for <computeroutput>graph_view</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active_majors</parametername>
</parameternamelist>
<parameterdescription>
<para>Device vector containing all the vertex id that are processed by gpus in the column communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active_major_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional device vector containing labels for each device vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of device vectors containing the majors, minors, optional weights, optional edge ids, optional edge types and optional label </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_impl.cuh" line="343" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_impl.cuh" bodystart="343" bodyend="391" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" declline="70" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__mg_8cu_1ae6500a4fd45e3acc336da60925ff4ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" line="28" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" declline="28" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__mg_8cu_1a03bd4ec0e0f9e1b403028e5163b7cd19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" line="44" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" declline="44" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__mg_8cu_1ac25f1e383457dfe1b43ea27586c85b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" line="60" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" declline="60" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__mg_8cu_1aab6f819b1617d957693a2e4091435684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" line="76" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" declline="76" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__mg_8cu_1a0b728179c66325cd13f25efdcf2d75b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" line="92" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" declline="92" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__mg_8cu_1a30d403c5626a39a9d7f8e966db5e2be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" line="108" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_mg.cu" declline="108" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__sg_8cu_1a23268dcc3e2ca9ecdc4f278f7c6a6351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" line="28" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" declline="28" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__sg_8cu_1ab82650e45e31bbb787a3aeb4a5c2f1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" line="44" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" declline="44" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__sg_8cu_1a62729aa515038b09010978d13caa254d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" line="60" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" declline="60" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__sg_8cu_1a0d64b6686add10deec844f12cbc636a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" line="76" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" declline="76" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__sg_8cu_1a99b659001d23f1f3290265363ec89e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" line="92" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" declline="92" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gather__one__hop__edgelist__sg_8cu_1a7c99e1eeae4bc371fa01e7b74b9c3b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::gather_one_hop_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, bool do_expensive_check)</argsstring>
        <name>gather_one_hop_edgelist</name>
        <qualifiedname>cugraph::detail::gather_one_hop_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" line="108" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/gather_one_hop_edgelist_sg.cu" declline="108" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="prepare__next__frontier__impl_8cuh_1a532cce20bbea3436a4cc0f81e9c07ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; &gt; &gt; cugraph::detail::prepare_next_frontier</definition>
        <argsstring>(raft::handle_t const  &amp;handle, raft::device_span&lt; vertex_t const  &gt; sampled_src_vertices, std::optional&lt; raft::device_span&lt; label_t const  &gt; &gt; sampled_src_vertex_labels, raft::device_span&lt; vertex_t const  &gt; sampled_dst_vertices, std::optional&lt; raft::device_span&lt; label_t const  &gt; &gt; sampled_dst_vertex_labels, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; &gt; &amp;&amp;vertex_used_as_source, vertex_partition_view_t&lt; vertex_t, multi_gpu &gt; vertex_partition, std::vector&lt; vertex_t &gt; const  &amp;vertex_partition_range_lasts, prior_sources_behavior_t prior_sources_behavior, bool dedupe_sources, bool do_expensive_check)</argsstring>
        <name>prepare_next_frontier</name>
        <qualifiedname>cugraph::detail::prepare_next_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>sampled_src_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; label_t const &gt; &gt;</type>
          <declname>sampled_src_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>sampled_dst_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; label_t const &gt; &gt;</type>
          <declname>sampled_dst_vertex_labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; &gt; &amp;&amp;</type>
          <declname>vertex_used_as_source</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__partition__view__t" kindref="compound">vertex_partition_view_t</ref>&lt; vertex_t, multi_gpu &gt;</type>
          <declname>vertex_partition</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <param>
          <type>prior_sources_behavior_t</type>
          <declname>prior_sources_behavior</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dedupe_sources</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
<para>Use the sampling results from hop N to populate the new frontier for hop N+1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of label. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multi_gpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether template instantiation should target single-GPU (false)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampled_src_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>The source vertices for the current sampling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampled_src_vertex_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional labels for the vertices for the current sampling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampled_dst_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertices for the next frontier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampled_dst_vertex_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional labels for the next frontier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_used_as_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional. If specified then we want to exclude vertices that were previously used as sources. These vertices (and optional labels) will be updated based on the contents of sampled_src_vertices/sampled_src_vertex_labels and the update will be part of the return value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertex partition view from the graph view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_partition_range_lasts</parametername>
</parameternamelist>
<parameterdescription>
<para>End of range information from graph view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prior_sources_behavior</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies how to treat sources in each hop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dedupe_sources</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean flag, if true then if a vertex v appears as a destination in hop X multiple times with the same label, it will only be passed once (for each label) as a source for the next hop. Default is false. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>do_expensive_check</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to run expensive checks for input arguments (if set to <computeroutput>true</computeroutput>).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of device vectors containing the vertices for the next frontier expansion and optional labels associated with the vertices, along with the updated value for <computeroutput>vertex_used_as_sources</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_impl.cuh" line="45" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_impl.cuh" bodystart="45" bodyend="194" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" declline="163" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="prepare__next__frontier__mg_8cu_1a83b75b9e6ba26386bdf3e840ec1689e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt; cugraph::detail::prepare_next_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int32_t const &gt; sampled_src_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_src_vertex_labels, raft::device_span&lt; int32_t const &gt; sampled_dst_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_dst_vertex_labels, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;vertex_used_as_source, vertex_partition_view_t&lt; int32_t, true &gt; vertex_partition, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts, prior_sources_behavior_t prior_sources_behavior, bool dedupe_sources, bool do_expensive_check)</argsstring>
        <name>prepare_next_frontier</name>
        <qualifiedname>cugraph::detail::prepare_next_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>sampled_src_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_src_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>sampled_dst_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_dst_vertex_labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;</type>
          <declname>vertex_used_as_source</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__partition__view__t" kindref="compound">vertex_partition_view_t</ref>&lt; int32_t, true &gt;</type>
          <declname>vertex_partition</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <param>
          <type>prior_sources_behavior_t</type>
          <declname>prior_sources_behavior</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dedupe_sources</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_mg.cu" line="26" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_mg.cu" declline="26" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="prepare__next__frontier__mg_8cu_1a3504d560d0cac3b27a439391806564e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt; cugraph::detail::prepare_next_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int64_t const &gt; sampled_src_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_src_vertex_labels, raft::device_span&lt; int64_t const &gt; sampled_dst_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_dst_vertex_labels, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;vertex_used_as_source, vertex_partition_view_t&lt; int64_t, true &gt; vertex_partition, std::vector&lt; int64_t &gt; const &amp;vertex_partition_range_lasts, prior_sources_behavior_t prior_sources_behavior, bool dedupe_sources, bool do_expensive_check)</argsstring>
        <name>prepare_next_frontier</name>
        <qualifiedname>cugraph::detail::prepare_next_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>sampled_src_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_src_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>sampled_dst_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_dst_vertex_labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;</type>
          <declname>vertex_used_as_source</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__partition__view__t" kindref="compound">vertex_partition_view_t</ref>&lt; int64_t, true &gt;</type>
          <declname>vertex_partition</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <param>
          <type>prior_sources_behavior_t</type>
          <declname>prior_sources_behavior</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dedupe_sources</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_mg.cu" line="44" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_mg.cu" declline="44" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="prepare__next__frontier__sg_8cu_1aa3db914d1a99d96f4ba8cb1072b4fd27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt; cugraph::detail::prepare_next_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int32_t const &gt; sampled_src_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_src_vertex_labels, raft::device_span&lt; int32_t const &gt; sampled_dst_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_dst_vertex_labels, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;vertex_used_as_source, vertex_partition_view_t&lt; int32_t, false &gt; vertex_partition, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts, prior_sources_behavior_t prior_sources_behavior, bool dedupe_sources, bool do_expensive_check)</argsstring>
        <name>prepare_next_frontier</name>
        <qualifiedname>cugraph::detail::prepare_next_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>sampled_src_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_src_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>sampled_dst_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_dst_vertex_labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;</type>
          <declname>vertex_used_as_source</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__partition__view__t" kindref="compound">vertex_partition_view_t</ref>&lt; int32_t, false &gt;</type>
          <declname>vertex_partition</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <param>
          <type>prior_sources_behavior_t</type>
          <declname>prior_sources_behavior</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dedupe_sources</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_sg.cu" line="26" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_sg.cu" declline="26" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="prepare__next__frontier__sg_8cu_1aad33512bac85b8371162af27e1d927f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &gt; cugraph::detail::prepare_next_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; int64_t const &gt; sampled_src_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_src_vertex_labels, raft::device_span&lt; int64_t const &gt; sampled_dst_vertices, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; sampled_dst_vertex_labels, std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;vertex_used_as_source, vertex_partition_view_t&lt; int64_t, false &gt; vertex_partition, std::vector&lt; int64_t &gt; const &amp;vertex_partition_range_lasts, prior_sources_behavior_t prior_sources_behavior, bool dedupe_sources, bool do_expensive_check)</argsstring>
        <name>prepare_next_frontier</name>
        <qualifiedname>cugraph::detail::prepare_next_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>sampled_src_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_src_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>sampled_dst_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>sampled_dst_vertex_labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; &gt; &amp;&amp;</type>
          <declname>vertex_used_as_source</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1vertex__partition__view__t" kindref="compound">vertex_partition_view_t</ref>&lt; int64_t, false &gt;</type>
          <declname>vertex_partition</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <param>
          <type>prior_sources_behavior_t</type>
          <declname>prior_sources_behavior</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dedupe_sources</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_sg.cu" line="44" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/prepare_next_frontier_sg.cu" declline="44" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="remove__visited__vertices__from__frontier_8cu_1ad6b0e1635a7cece29c96dfcbabb6408d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; cugraph::detail::remove_visited_vertices_from_frontier</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;frontier_vertices, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;&amp;frontier_vertex_labels, raft::device_span&lt; vertex_t const  &gt; vertices_used_as_source, std::optional&lt; raft::device_span&lt; label_t const  &gt; &gt; vertex_labels_used_as_source)</argsstring>
        <name>remove_visited_vertices_from_frontier</name>
        <qualifiedname>cugraph::detail::remove_visited_vertices_from_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>frontier_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;&amp;</type>
          <declname>frontier_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>vertices_used_as_source</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; label_t const &gt; &gt;</type>
          <declname>vertex_labels_used_as_source</declname>
        </param>
        <briefdescription>
<para>Remove from the frontier any vertices that have already been used as a source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of label. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frontier_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertices discovered in the current hop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frontier_vertex_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Labels for the vertices discovered in the current hop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertices_used_as_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Device vector containing all vertices used in previous hops as a source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_labels_used_as_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Device vector containing vertex labels associated with the <computeroutput>vertices_used_as_source</computeroutput> used in previous hops as a source vertex label</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple containing the modified frontier_vertices and frontier_vertex_labels </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/remove_visited_vertices_from_frontier.cu" line="32" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/remove_visited_vertices_from_frontier.cu" bodystart="32" bodyend="73" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" declline="196" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="remove__visited__vertices__from__frontier_8cu_1a225e96a3f1fd0517f083f5a91fa3460c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::remove_visited_vertices_from_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;frontier_vertices, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;frontier_vertex_labels, raft::device_span&lt; int32_t const &gt; vertices_used_as_source, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; vertex_labels_used_as_source)</argsstring>
        <name>remove_visited_vertices_from_frontier</name>
        <qualifiedname>cugraph::detail::remove_visited_vertices_from_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>frontier_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>frontier_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>vertices_used_as_source</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>vertex_labels_used_as_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/remove_visited_vertices_from_frontier.cu" line="76" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/remove_visited_vertices_from_frontier.cu" declline="76" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="remove__visited__vertices__from__frontier_8cu_1afa6e1e86ed124cad79fe13c7dbf47c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::remove_visited_vertices_from_frontier</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;frontier_vertices, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;frontier_vertex_labels, raft::device_span&lt; int64_t const &gt; vertices_used_as_source, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; vertex_labels_used_as_source)</argsstring>
        <name>remove_visited_vertices_from_frontier</name>
        <qualifiedname>cugraph::detail::remove_visited_vertices_from_frontier</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>frontier_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>frontier_vertex_labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>vertices_used_as_source</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>vertex_labels_used_as_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/remove_visited_vertices_from_frontier.cu" line="84" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/remove_visited_vertices_from_frontier.cu" declline="84" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges_8cuh_1ada63f7cd9c2026898e61b8ad5df95c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const  &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const  &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const  * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_t const  * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_type_t const  * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; vertex_t const  &gt; active_majors, std::optional&lt; raft::device_span&lt; label_t const  &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_type_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; label_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
<para>Randomly sample edges from the adjacency list of specified vertices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Needs to be a floating point type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge type. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of label. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multi_gpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether template instantiation should target single-GPU (false)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>graph_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Graph View object to generate neighbor sampling on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_weight_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional view object holding edge weights for <computeroutput>graph_view</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_id_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional view object holding edge ids for <computeroutput>graph_view</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional view object holding edge types for <computeroutput>graph_view</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rng_state</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active_majors</parametername>
</parameternamelist>
<parameterdescription>
<para>Device vector containing all the vertex id that are processed by gpus in the column communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active_major_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional device vector containing labels for each device vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fanout</parametername>
</parameternamelist>
<parameterdescription>
<para>How many edges to sample for each vertex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>with_replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>If true sample with replacement, otherwise sample without replacement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structcugraph_1_1invalid__vertex__id" kindref="compound">invalid_vertex_id</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Value to use for an invalid vertex </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of device vectors containing the majors, minors, optional weights, optional edge ids, optional edge types and optional label </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges.cuh" line="95" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges.cuh" bodystart="95" bodyend="274" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__mg_8cu_1a8cd946f8224bb5a8f58630271511aab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" line="28" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" declline="28" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__mg_8cu_1ac77ed07c9ce69e77890f02175d31c071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" line="45" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" declline="45" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__mg_8cu_1a0117d1257abc9b021f585a0d74d3d946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" line="62" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" declline="62" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__mg_8cu_1a0e54bb226049c4183a9dd05c004ecd47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" line="79" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" declline="79" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__mg_8cu_1acef15f197f5ae23905655f43511ea1fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" line="96" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" declline="96" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__mg_8cu_1aad8181d51a192d0d721cb8d8a9ba94ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, true &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, true &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" line="113" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_mg.cu" declline="113" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__sg_8cu_1a3026f7e7914e3fab224fd6afcf5eba3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" line="28" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" declline="28" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__sg_8cu_1adaa8a544c9b21fe5703c9238331f77ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" line="45" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" declline="45" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__sg_8cu_1a70c20f3c9253cc4cf8f0d9bc5b2c30f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, float const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, float const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" line="62" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" declline="62" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__sg_8cu_1a6bb90d953703e5bfec730eba62ff728b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int32_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int32_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int32_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int32_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int32_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" line="79" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" declline="79" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__sg_8cu_1a35591824fa6bb53b86d2bf99af8779c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int32_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int32_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int32_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" line="96" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" declline="96" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sample__edges__sg_8cu_1ac8b931998be71ae582c0984cfd703833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::sample_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; int64_t, int64_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; int64_t, double const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; int64_t, int64_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; int64_t, int32_t const * &gt; &gt; edge_edge_type_view, raft::random::RngState &amp;rng_state, raft::device_span&lt; int64_t const &gt; active_majors, std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt; active_major_labels, size_t fanout, bool with_replacement)</argsstring>
        <name>sample_edges</name>
        <qualifiedname>cugraph::detail::sample_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; int64_t, int64_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, double const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int64_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; int64_t, int32_t const * &gt; &gt;</type>
          <declname>edge_edge_type_view</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int64_t const &gt;</type>
          <declname>active_majors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; int32_t const &gt; &gt;</type>
          <declname>active_major_labels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fanout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" line="113" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sample_edges_sg.cu" declline="113" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sampling__utils_8hpp_1ade7f3677dd0b578f0e6f3bae11927bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &gt; cugraph::detail::shuffle_sampling_results</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;&amp;labels, raft::device_span&lt; int32_t const &gt; label_to_output_gpu_mapping)</argsstring>
        <name>shuffle_sampling_results</name>
        <qualifiedname>cugraph::detail::shuffle_sampling_results</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>raft::device_span&lt; int32_t const &gt;</type>
          <declname>label_to_output_gpu_mapping</declname>
        </param>
        <briefdescription>
<para>Shuffle sampling results to the desired GPU based on label_to_output_gpu_mapping[label[i]]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Needs to be a floating point type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge type. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of label. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>majors</parametername>
</parameternamelist>
<parameterdescription>
<para>Major vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minors</parametername>
</parameternamelist>
<parameterdescription>
<para>Minor vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional edge weight </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional edge id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_types</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional edge type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hops</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional indicator of which hop the edge was found in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Label associated with the seed that resulted in this edge being part of the result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_to_output_gpu_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>Mapping that identifies the GPU that is associated with the output label</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of device vectors containing the majors, minors, optional weights, optional edge ids, optional edge types, optional hops and optional labels after shuffling to the specified output GPU </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" line="241" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" declline="241" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="sampling__utils_8hpp_1a93f47b0f01eebccb9515dfcb01d9f97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; label_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; label_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_impl.cuh" line="219" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_impl.cuh" bodystart="219" bodyend="779" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/sampling_utils.hpp" declline="264" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__impl_8cuh_1a7ba9991e62da2e03ac50395f14ac77c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::sort_sampled_tuples</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;hops, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;labels)</argsstring>
        <name>sort_sampled_tuples</name>
        <qualifiedname>cugraph::detail::sort_sampled_tuples</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_impl.cuh" line="60" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_impl.cuh" bodystart="60" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__mg_8cu_1a5d63f86866a32d45ec330d4ec326c432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" line="30" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" declline="30" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__mg_8cu_1a3e9fa420051358b266187c6657faf150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" line="50" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" declline="50" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__mg_8cu_1affde8d56f022f2f6254a0a1a826ca689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" line="70" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" declline="70" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__mg_8cu_1a210cd13285d8f0a0455356c4f0920f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" line="90" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" declline="90" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__mg_8cu_1a116cc4d59f21be14d37d16c3e82aaabe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" line="110" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" declline="110" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__and__organize__output__mg_8cu_1ac58c36dfe0b6f5c23e87a2c1729aab68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::shuffle_and_organize_output</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;hops, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank)</argsstring>
        <name>shuffle_and_organize_output</name>
        <qualifiedname>cugraph::detail::shuffle_and_organize_output</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>hops</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; int32_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" line="130" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/detail/shuffle_and_organize_output_mg.cu" declline="130" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="random__walks_8cuh_1aac1bff53bc7916a325fcc2f577db4b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename selector_t</type>
          </param>
          <param>
            <type>typename traversal_t</type>
            <defval>original::horizontal_traversal_t</defval>
          </param>
          <param>
            <type>typename random_engine_t</type>
            <defval>rrandom_gen_t&lt;vertex_t, edge_t&gt;</defval>
          </param>
          <param>
            <type>typename seeding_policy_t</type>
            <defval>original::clock_seeding_t&lt;typename random_engine_t::seed_type&gt;</defval>
          </param>
          <param>
            <type>typename index_t</type>
            <defval>edge_t</defval>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; original::device_vec_t&lt; vertex_t &gt;, original::device_vec_t&lt; weight_t &gt;, original::device_vec_t&lt; index_t &gt;, typename random_engine_t::seed_type &gt;</type>
        <definition>std::tuple&lt; original::device_vec_t&lt; vertex_t &gt;, original::device_vec_t&lt; weight_t &gt;, original::device_vec_t&lt; index_t &gt;, typename random_engine_t::seed_type &gt; cugraph::detail::random_walks_impl</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, false &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, original::device_const_vector_view&lt; vertex_t, index_t &gt; &amp;d_v_start, index_t max_depth, selector_t const &amp;selector, bool use_padding=false, seeding_policy_t seeder=original::clock_seeding_t&lt; typename random_engine_t::seed_type &gt;{})</argsstring>
        <name>random_walks_impl</name>
        <qualifiedname>cugraph::detail::random_walks_impl</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, false &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type><ref refid="structcugraph_1_1detail_1_1original_1_1device__const__vector__view" kindref="compound">original::device_const_vector_view</ref>&lt; vertex_t, index_t &gt; &amp;</type>
          <declname>d_v_start</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>max_depth</declname>
        </param>
        <param>
          <type>selector_t const &amp;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_padding</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>seeding_policy_t</type>
          <declname>seeder</declname>
          <defval><ref refid="structcugraph_1_1detail_1_1original_1_1clock__seeding__t" kindref="compound">original::clock_seeding_t</ref>&lt; typename random_engine_t::seed_type &gt;{}</defval>
        </param>
        <briefdescription>
<para>returns random walks (RW) from starting sources, where each path is of given maximum length. Single-GPU specialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classcugraph_1_1graph__t" kindref="compound">graph_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of graph (view). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traversal_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Traversal policy. Either horizontal (faster but requires more memory) or vertical. Defaults to horizontal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>random_engine_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of random engine used to generate RW. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seeding_policy_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Random engine seeding policy: variable or fixed (for reproducibility). Defaults to variable, clock dependent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Indexing type. Defaults to edge_type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>Graph object to generate RW on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_v_start</parametername>
</parameternamelist>
<parameterdescription>
<para>Device (view) set of starting vertex indices for the RW. number(paths) == d_v_start.size(). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_depth</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum length of RWs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_padding</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) specifies if return uses padded format (true), or coalesced (compressed) format; when padding is used the output is a matrix of vertex paths and a matrix of edges paths (weights); in this case the matrices are stored in row major order; the vertex path matrix is padded with <computeroutput>num_vertices</computeroutput> values and the weight matrix is padded with <computeroutput>0</computeroutput> values; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seeder</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) is object providing the random seeding mechanism. Defaults to local clock time as initial seed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::tuple&lt;device_vec_t&lt;vertex_t&gt;, device_vec_t&lt;weight_t&gt;, device_vec_t&lt;index_t&gt;&gt; Triplet of either padded or coalesced RW paths; in the coalesced case (default), the return consists of corresponding vertex and edge weights for each, and corresponding path sizes. This is meant to minimize the number of DF&apos;s to be passed to the Python layer. The meaning of &quot;coalesced&quot; here is that a 2D array of paths of different sizes is represented as a 1D contiguous array. In the padded case the return is a matrix of num_paths x max_depth vertex paths; and num_paths x (max_depth-1) edge (weight) paths, with an empty array of sizes. Note: if the graph is un-weighted the edge (weight) paths consists of <computeroutput>weight_t{1}</computeroutput> entries; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" line="732" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks.cuh" bodystart="732" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="random__walks__impl_8cuh_1a1d1c545d4850b2428527de04f14f113b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t cugraph::detail::get_current_time_nanoseconds</definition>
        <argsstring>()</argsstring>
        <name>get_current_time_nanoseconds</name>
        <qualifiedname>cugraph::detail::get_current_time_nanoseconds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks_impl.cuh" line="49" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks_impl.cuh" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="random__walks__impl_8cuh_1a51b6ee798584304e1be5da76642c62e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
          <param>
            <type>typename random_selector_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &gt; cugraph::detail::random_walk_impl</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, raft::device_span&lt; vertex_t const &gt; start_vertices, size_t max_length, random_selector_t random_selector)</argsstring>
        <name>random_walk_impl</name>
        <qualifiedname>cugraph::detail::random_walk_impl</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, false, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>start_vertices</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_length</declname>
        </param>
        <param>
          <type>random_selector_t</type>
          <declname>random_selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks_impl.cuh" line="196" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/random_walks_impl.cuh" bodystart="196" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="uniform__neighbor__sampling__impl_8hpp_1a9e5c6d941b8f1c4715c6af7bbb49b5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>typename label_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; label_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; size_t &gt; &gt; &gt; cugraph::detail::uniform_neighbor_sample_impl</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_t const * &gt; &gt; edge_id_view, std::optional&lt; edge_property_view_t&lt; edge_t, edge_type_t const * &gt; &gt; edge_type_view, raft::device_span&lt; vertex_t const &gt; this_frontier_vertices, std::optional&lt; raft::device_span&lt; label_t const &gt; &gt; this_frontier_vertex_labels, std::optional&lt; std::tuple&lt; raft::device_span&lt; label_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt; label_to_output_comm_rank, raft::host_span&lt; int32_t const &gt; fan_out, bool return_hops, bool with_replacement, prior_sources_behavior_t prior_sources_behavior, bool dedupe_sources, raft::random::RngState &amp;rng_state, bool do_expensive_check)</argsstring>
        <name>uniform_neighbor_sample_impl</name>
        <qualifiedname>cugraph::detail::uniform_neighbor_sample_impl</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_t const * &gt; &gt;</type>
          <declname>edge_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, edge_type_t const * &gt; &gt;</type>
          <declname>edge_type_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>this_frontier_vertices</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; label_t const &gt; &gt;</type>
          <declname>this_frontier_vertex_labels</declname>
        </param>
        <param>
          <type>std::optional&lt; std::tuple&lt; raft::device_span&lt; label_t const &gt;, raft::device_span&lt; int32_t const &gt; &gt; &gt;</type>
          <declname>label_to_output_comm_rank</declname>
        </param>
        <param>
          <type>raft::host_span&lt; int32_t const &gt;</type>
          <declname>fan_out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>return_hops</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_replacement</declname>
        </param>
        <param>
          <type>prior_sources_behavior_t</type>
          <declname>prior_sources_behavior</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dedupe_sources</declname>
        </param>
        <param>
          <type>raft::random::RngState &amp;</type>
          <declname>rng_state</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/sampling/uniform_neighbor_sampling_impl.hpp" line="48" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/sampling/uniform_neighbor_sampling_impl.hpp" bodystart="48" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="coarsen__graph__impl_8cuh_1af2d426aa7ecfbfd7d33031781a783337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; multi_gpu, std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">graph_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &gt;</type>
        <definition>std::enable_if_t&lt; multi_gpu, std::tuple&lt; graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &gt; cugraph::detail::coarsen_graph</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, vertex_t const *labels, bool renumber, bool do_expensive_check)</argsstring>
        <name>coarsen_graph</name>
        <qualifiedname>cugraph::detail::coarsen_graph</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>renumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/coarsen_graph_impl.cuh" line="266" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/coarsen_graph_impl.cuh" bodystart="266" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="coarsen__graph__impl_8cuh_1ab8569cce238b4c2274f541e5775e3115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; !multi_gpu, std::tuple&lt; <ref refid="classcugraph_1_1graph__t" kindref="compound">graph_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, std::optional&lt; <ref refid="classcugraph_1_1edge__property__t" kindref="compound">edge_property_t</ref>&lt; <ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &gt;</type>
        <definition>std::enable_if_t&lt; !multi_gpu, std::tuple&lt; graph_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, std::optional&lt; edge_property_t&lt; graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt;, weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; &gt; cugraph::detail::coarsen_graph</definition>
        <argsstring>(raft::handle_t const &amp;handle, graph_view_t&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;graph_view, std::optional&lt; edge_property_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_weight_view, vertex_t const *labels, bool renumber, bool do_expensive_check)</argsstring>
        <name>coarsen_graph</name>
        <qualifiedname>cugraph::detail::coarsen_graph</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; vertex_t, edge_t, store_transposed, multi_gpu &gt; const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>renumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/coarsen_graph_impl.cuh" line="590" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/coarsen_graph_impl.cuh" bodystart="590" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1aee829f989f4f8386d80200bd0cd060eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; edge_t &gt;</type>
        <definition>rmm::device_uvector&lt; edge_t &gt; cugraph::detail::compute_sparse_offsets</definition>
        <argsstring>(VertexIterator edgelist_major_first, VertexIterator edgelist_major_last, typename thrust::iterator_traits&lt; VertexIterator &gt;::value_type major_range_first, typename thrust::iterator_traits&lt; VertexIterator &gt;::value_type major_range_last, bool edgelist_major_sorted, rmm::cuda_stream_view stream_view)</argsstring>
        <name>compute_sparse_offsets</name>
        <qualifiedname>cugraph::detail::compute_sparse_offsets</qualifiedname>
        <param>
          <type>VertexIterator</type>
          <declname>edgelist_major_first</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>edgelist_major_last</declname>
        </param>
        <param>
          <type>typename thrust::iterator_traits&lt; VertexIterator &gt;::value_type</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>typename thrust::iterator_traits&lt; VertexIterator &gt;::value_type</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>edgelist_major_sorted</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="55" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="55" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1aab368b09ac96ba6569251b18ff1c04bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; edge_t &gt;, rmm::device_uvector&lt; vertex_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; edge_t &gt;, rmm::device_uvector&lt; vertex_t &gt; &gt; cugraph::detail::compress_hypersparse_offsets</definition>
        <argsstring>(rmm::device_uvector&lt; edge_t &gt; &amp;&amp;offsets, vertex_t major_range_first, vertex_t major_hypersparse_first, vertex_t major_range_last, rmm::cuda_stream_view stream_view)</argsstring>
        <name>compress_hypersparse_offsets</name>
        <qualifiedname>cugraph::detail::compress_hypersparse_offsets</qualifiedname>
        <param>
          <type>rmm::device_uvector&lt; edge_t &gt; &amp;&amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_hypersparse_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="91" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="91" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1af1eb7f07b80d7a354ebfae52ca85bc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename edge_value_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; edge_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(size_t{0}, rmm::cuda_stream_view{})), std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; edge_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(size_t{0}, rmm::cuda_stream_view{})), std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; cugraph::detail::sort_and_compress_edgelist</definition>
        <argsstring>(rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_srcs, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_dsts, decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;edgelist_values, vertex_t major_range_first, std::optional&lt; vertex_t &gt; major_hypersparse_first, vertex_t major_range_last, vertex_t, vertex_t, size_t mem_frugal_threshold, rmm::cuda_stream_view stream_view)</argsstring>
        <name>sort_and_compress_edgelist</name>
        <qualifiedname>cugraph::detail::sort_and_compress_edgelist</qualifiedname>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_srcs</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_dsts</declname>
        </param>
        <param>
          <type>decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;</type>
          <declname>edgelist_values</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>std::optional&lt; vertex_t &gt;</type>
          <declname>major_hypersparse_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>vertex_t</type>
        </param>
        <param>
          <type>vertex_t</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_frugal_threshold</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="149" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="149" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1af6dea76e6698c5210fd1e07131e93a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>store_transposed</declname>
            <defname>store_transposed</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; edge_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; edge_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &gt; cugraph::detail::sort_and_compress_edgelist</definition>
        <argsstring>(rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_srcs, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_dsts, vertex_t major_range_first, std::optional&lt; vertex_t &gt; major_hypersparse_first, vertex_t major_range_last, vertex_t, vertex_t, size_t mem_frugal_threshold, rmm::cuda_stream_view stream_view)</argsstring>
        <name>sort_and_compress_edgelist</name>
        <qualifiedname>cugraph::detail::sort_and_compress_edgelist</qualifiedname>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_srcs</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_dsts</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>std::optional&lt; vertex_t &gt;</type>
          <declname>major_hypersparse_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>vertex_t</type>
        </param>
        <param>
          <type>vertex_t</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_frugal_threshold</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="234" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="234" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1a767414ff22bef92e40a233c5a9c96213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
          <param>
            <type>typename EdgeValueIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::sort_adjacency_list</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; edge_t const &gt; offsets, VertexIterator index_first, VertexIterator index_last, EdgeValueIterator edge_value_first)</argsstring>
        <name>sort_adjacency_list</name>
        <qualifiedname>cugraph::detail::sort_adjacency_list</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; edge_t const &gt;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>index_first</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>index_last</declname>
        </param>
        <param>
          <type>EdgeValueIterator</type>
          <declname>edge_value_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="299" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="299" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1aff9c5078565b24660388b2a74f6e46fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename VertexIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::sort_adjacency_list</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; edge_t const &gt; offsets, VertexIterator index_first, VertexIterator index_last)</argsstring>
        <name>sort_adjacency_list</name>
        <qualifiedname>cugraph::detail::sort_adjacency_list</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; edge_t const &gt;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>index_first</declname>
        </param>
        <param>
          <type>VertexIterator</type>
          <declname>index_last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="432" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="432" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1a691a1d667a294690de536c984faec7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename comparison_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; size_t, rmm::device_uvector&lt; uint32_t &gt; &gt;</type>
        <definition>std::tuple&lt; size_t, rmm::device_uvector&lt; uint32_t &gt; &gt; cugraph::detail::mark_entries</definition>
        <argsstring>(raft::handle_t const &amp;handle, size_t num_entries, comparison_t comparison)</argsstring>
        <name>mark_entries</name>
        <qualifiedname>cugraph::detail::mark_entries</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_entries</declname>
        </param>
        <param>
          <type>comparison_t</type>
          <declname>comparison</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="496" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="496" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="structure__utils_8cuh_1ad9fafd7591a5b546b2ca65d4d36e1b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; T &gt;</type>
        <definition>rmm::device_uvector&lt; T &gt; cugraph::detail::keep_flagged_elements</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; T &gt; &amp;&amp;vector, raft::device_span&lt; uint32_t const &gt; keep_flags, size_t keep_count)</argsstring>
        <name>keep_flagged_elements</name>
        <qualifiedname>cugraph::detail::keep_flagged_elements</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; T &gt; &amp;&amp;</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>raft::device_span&lt; uint32_t const &gt;</type>
          <declname>keep_flags</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keep_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" line="527" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/detail/structure_utils.cuh" bodystart="527" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="remove__multi__edges__impl_8cuh_1aa791ab1e93dc9dfcf85ba1e1dd73ecaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt; &gt; cugraph::detail::group_multi_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_srcs, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_dsts, size_t mem_frugal_threshold)</argsstring>
        <name>group_multi_edges</name>
        <qualifiedname>cugraph::detail::group_multi_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_srcs</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_dsts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_frugal_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/remove_multi_edges_impl.cuh" line="63" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/remove_multi_edges_impl.cuh" bodystart="63" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="remove__multi__edges__impl_8cuh_1a423727b816e54c1ac71b5069526331c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_value_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(size_t{0}, rmm::cuda_stream_view{}))&gt; cugraph::detail::group_multi_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_srcs, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_dsts, decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;edgelist_values, size_t mem_frugal_threshold, bool keep_min_value_edge)</argsstring>
        <name>group_multi_edges</name>
        <qualifiedname>cugraph::detail::group_multi_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_srcs</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_dsts</declname>
        </param>
        <param>
          <type>decltype(allocate_dataframe_buffer&lt; edge_value_t &gt;(0, rmm::cuda_stream_view{}))&amp;&amp;</type>
          <declname>edgelist_values</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_frugal_threshold</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keep_min_value_edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/remove_multi_edges_impl.cuh" line="104" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/remove_multi_edges_impl.cuh" bodystart="104" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="renumber__edgelist__impl_8cuh_1a637d4ea4d015328b751797a3860cd6fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; vertex_t &gt;</type>
        <definition>std::optional&lt; vertex_t &gt; cugraph::detail::find_locally_unused_ext_vertex_id</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; vertex_t const &gt; sorted_local_vertices, bool multi_gpu)</argsstring>
        <name>find_locally_unused_ext_vertex_id</name>
        <qualifiedname>cugraph::detail::find_locally_unused_ext_vertex_id</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>sorted_local_vertices</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_gpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" line="118" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" bodystart="118" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="renumber__edgelist__impl_8cuh_1a6ea4a0a8af1f7b43333e9721218c679b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::vector&lt; vertex_t &gt;, vertex_t &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, std::vector&lt; vertex_t &gt;, vertex_t &gt; cugraph::detail::compute_renumber_map</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &amp;&amp;local_vertices, std::vector&lt; vertex_t const * &gt; const &amp;edgelist_majors, std::vector&lt; vertex_t const * &gt; const &amp;edgelist_minors, std::vector&lt; edge_t &gt; const &amp;edgelist_edge_counts)</argsstring>
        <name>compute_renumber_map</name>
        <qualifiedname>cugraph::detail::compute_renumber_map</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; &amp;&amp;</type>
          <declname>local_vertices</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t const * &gt; const &amp;</type>
          <declname>edgelist_majors</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t const * &gt; const &amp;</type>
          <declname>edgelist_minors</declname>
        </param>
        <param>
          <type>std::vector&lt; edge_t &gt; const &amp;</type>
          <declname>edgelist_edge_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" line="238" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" bodystart="238" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="renumber__edgelist__impl_8cuh_1a3acb8d796a2bfbd38e1ac241dc8e3d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::expensive_check_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; const &amp;local_vertices, std::vector&lt; vertex_t const * &gt; const &amp;edgelist_majors, std::vector&lt; vertex_t const * &gt; const &amp;edgelist_minors, std::vector&lt; edge_t &gt; const &amp;edgelist_edge_counts, std::optional&lt; std::vector&lt; std::vector&lt; edge_t &gt; &gt; &gt; const &amp;edgelist_intra_partition_segment_offsets)</argsstring>
        <name>expensive_check_edgelist</name>
        <qualifiedname>cugraph::detail::expensive_check_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; vertex_t &gt; &gt; const &amp;</type>
          <declname>local_vertices</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t const * &gt; const &amp;</type>
          <declname>edgelist_majors</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t const * &gt; const &amp;</type>
          <declname>edgelist_minors</declname>
        </param>
        <param>
          <type>std::vector&lt; edge_t &gt; const &amp;</type>
          <declname>edgelist_edge_counts</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; std::vector&lt; edge_t &gt; &gt; &gt; const &amp;</type>
          <declname>edgelist_intra_partition_segment_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" line="610" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" bodystart="610" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="renumber__edgelist__impl_8cuh_1a47def746bc14d4fba9db8fd25f316308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; vertex_t &gt;</type>
        <definition>std::vector&lt; vertex_t &gt; cugraph::detail::aggregate_segment_offsets</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::vector&lt; vertex_t &gt; const &amp;segment_offsets)</argsstring>
        <name>aggregate_segment_offsets</name>
        <qualifiedname>cugraph::detail::aggregate_segment_offsets</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>segment_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" line="792" column="13" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_edgelist_impl.cuh" bodystart="792" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="renumber__utils__impl_8cuh_1a3dbe2a534fa1ffc75e282510574dd37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::unrenumber_local_int_edges</definition>
        <argsstring>(raft::handle_t const &amp;handle, std::vector&lt; vertex_t * &gt; const &amp;edgelist_majors, std::vector&lt; vertex_t * &gt; const &amp;edgelist_minors, std::vector&lt; size_t &gt; const &amp;edgelist_edge_counts, vertex_t const *renumber_map_labels, std::vector&lt; vertex_t &gt; const &amp;vertex_partition_range_lasts, std::optional&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; const &amp;edgelist_intra_partition_segment_offsets, bool do_expensive_check)</argsstring>
        <name>unrenumber_local_int_edges</name>
        <qualifiedname>cugraph::detail::unrenumber_local_int_edges</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t * &gt; const &amp;</type>
          <declname>edgelist_majors</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t * &gt; const &amp;</type>
          <declname>edgelist_minors</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>edgelist_edge_counts</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>renumber_map_labels</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; const &amp;</type>
          <declname>edgelist_intra_partition_segment_offsets</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_utils_impl.cuh" line="49" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/renumber_utils_impl.cuh" bodystart="49" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="symmetrize__edgelist__impl_8cuh_1a4a52fe37bda9c488012770878945fdc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &gt; cugraph::detail::symmetrize_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;edgelist_minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;edgelist_weights, bool reciprocal)</argsstring>
        <name>symmetrize_edgelist</name>
        <qualifiedname>cugraph::detail::symmetrize_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>edgelist_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reciprocal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/structure/symmetrize_edgelist_impl.cuh" line="187" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/structure/symmetrize_edgelist_impl.cuh" bodystart="187" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="bfs__impl_8cuh_1a77ef831bc1aee179e412e6a9de3c79a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename PredecessorIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::bfs</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;push_graph_view, typename GraphViewType::vertex_type *distances, PredecessorIterator predecessor_first, typename GraphViewType::vertex_type const *sources, size_t n_sources, bool direction_optimizing, typename GraphViewType::vertex_type depth_limit, bool do_expensive_check)</argsstring>
        <name>bfs</name>
        <qualifiedname>cugraph::detail::bfs</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>push_graph_view</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type *</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>PredecessorIterator</type>
          <declname>predecessor_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type const *</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_sources</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>direction_optimizing</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>depth_limit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/traversal/bfs_impl.cuh" line="89" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/traversal/bfs_impl.cuh" bodystart="89" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="extract__bfs__paths__impl_8cuh_1af35f9761e428c4203fc8aa104efd3b50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; size_t &gt; &gt; cugraph::detail::shrink_extraction_list</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;vertex_list, rmm::device_uvector&lt; size_t &gt; &amp;&amp;path_offset)</argsstring>
        <name>shrink_extraction_list</name>
        <qualifiedname>cugraph::detail::shrink_extraction_list</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>vertex_list</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; size_t &gt; &amp;&amp;</type>
          <declname>path_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/traversal/extract_bfs_paths_impl.cuh" line="116" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/traversal/extract_bfs_paths_impl.cuh" bodystart="116" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="k__hop__nbrs__impl_8cuh_1a29a7260565c01f609a1157e63802f87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; size_t &gt;, rmm::device_uvector&lt; typename GraphViewType::vertex_type &gt; &gt; cugraph::detail::k_hop_nbrs</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;push_graph_view, raft::device_span&lt; typename GraphViewType::vertex_type const &gt; start_vertices, size_t k, bool do_expensive_check)</argsstring>
        <name>k_hop_nbrs</name>
        <qualifiedname>cugraph::detail::k_hop_nbrs</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>push_graph_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; typename GraphViewType::vertex_type const &gt;</type>
          <declname>start_vertices</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/traversal/k_hop_nbrs_impl.cuh" line="77" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/traversal/k_hop_nbrs_impl.cuh" bodystart="77" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="sssp__impl_8cuh_1a33cf43fc839d6b048f65930e0d2a295f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename PredecessorIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::sssp</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;push_graph_view, edge_property_view_t&lt; typename GraphViewType::edge_type, weight_t const * &gt; edge_weight_view, weight_t *distances, PredecessorIterator predecessor_first, typename GraphViewType::vertex_type source_vertex, weight_t cutoff, bool do_expensive_check)</argsstring>
        <name>sssp</name>
        <qualifiedname>cugraph::detail::sssp</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>push_graph_view</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t</ref>&lt; typename GraphViewType::edge_type, weight_t const * &gt;</type>
          <declname>edge_weight_view</declname>
        </param>
        <param>
          <type>weight_t *</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>PredecessorIterator</type>
          <declname>predecessor_first</declname>
        </param>
        <param>
          <type>typename GraphViewType::vertex_type</type>
          <declname>source_vertex</declname>
        </param>
        <param>
          <type>weight_t</type>
          <declname>cutoff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_expensive_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/traversal/sssp_impl.cuh" line="79" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/traversal/sssp_impl.cuh" bodystart="79" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="mst_8cu_1a9df7685e86cc46a869ee0df9c93f9909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="classcugraph_1_1legacy_1_1GraphCOO" kindref="compound">legacy::GraphCOO</ref>&lt; vertex_t, edge_t, weight_t &gt; &gt;</type>
        <definition>std::unique_ptr&lt; legacy::GraphCOO&lt; vertex_t, edge_t, weight_t &gt; &gt; cugraph::detail::mst_impl</definition>
        <argsstring>(raft::handle_t const &amp;handle, legacy::GraphCSRView&lt; vertex_t, edge_t, weight_t &gt; const &amp;graph, rmm::device_async_resource_ref mr)</argsstring>
        <name>mst_impl</name>
        <qualifiedname>cugraph::detail::mst_impl</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1legacy_1_1GraphCSRView" kindref="compound">legacy::GraphCSRView</ref>&lt; vertex_t, edge_t, weight_t &gt; const &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>rmm::device_async_resource_ref</type>
          <declname>mr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/tree/legacy/mst.cu" line="37" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/tree/legacy/mst.cu" bodystart="37" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="cugraph__ops__utils_8hpp_1a9b0a926930761b1c1b6c1d46ec99ffb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NodeTypeT</type>
          </param>
          <param>
            <type>typename EdgeTypeT</type>
          </param>
        </templateparamlist>
        <type>ops::graph::csc&lt; EdgeTypeT, NodeTypeT &gt;</type>
        <definition>ops::graph::csc&lt; EdgeTypeT, NodeTypeT &gt; cugraph::detail::get_graph</definition>
        <argsstring>(graph_view_t&lt; NodeTypeT, EdgeTypeT, false, false &gt; const &amp;gview)</argsstring>
        <name>get_graph</name>
        <qualifiedname>cugraph::detail::get_graph</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t</ref>&lt; NodeTypeT, EdgeTypeT, false, false &gt; const &amp;</type>
          <declname>gview</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/cugraph_ops_utils.hpp" line="26" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/cugraph_ops_utils.hpp" bodystart="26" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a9edefdd96f462fee60600f4809717e1d" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __device__ float</type>
        <definition>template __device__ float cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(int32_t, int32_t const *, float const *)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type>int32_t</type>
        </param>
        <param>
          <type>int32_t const *</type>
        </param>
        <param>
          <type>float const *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="21" column="34" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="21" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a4f03affff79a553b2ef5957cba07e61f" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __device__ double</type>
        <definition>template __device__ double cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(int32_t, int32_t const *, double const *)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type>int32_t</type>
        </param>
        <param>
          <type>int32_t const *</type>
        </param>
        <param>
          <type>double const *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="22" column="35" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="22" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a1e9dc6a2424bff20f0f087f1510cac7e" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __device__ float</type>
        <definition>template __device__ float cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(int64_t, int32_t const *, float const *)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>int32_t const *</type>
        </param>
        <param>
          <type>float const *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="23" column="34" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="23" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a1d24f9485cb49a7cb4cba65b929406ee" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __device__ double</type>
        <definition>template __device__ double cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(int64_t, int32_t const *, double const *)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>int32_t const *</type>
        </param>
        <param>
          <type>double const *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="24" column="35" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="24" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1abe312795c043c9ca1f8072e3e663dae3" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __device__ float</type>
        <definition>template __device__ float cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(int64_t, int64_t const *, float const *)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>int64_t const *</type>
        </param>
        <param>
          <type>float const *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="25" column="34" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="25" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a67dfa90839663a8208ea8b08c2485f84" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __device__ double</type>
        <definition>template __device__ double cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(int64_t, int64_t const *, double const *)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>int64_t const *</type>
        </param>
        <param>
          <type>double const *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="26" column="35" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="26" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1abfc3794e65a0428526b5fa0b77d4a159" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::offsets_to_indices&lt; int, int &gt;</definition>
        <argsstring>(int const *, int, int *)</argsstring>
        <name>offsets_to_indices&lt; int, int &gt;</name>
        <qualifiedname>cugraph::detail::offsets_to_indices&lt; int, int &gt;</qualifiedname>
        <param>
          <type>int const *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="28" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="28" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a2b8b145ae69e807ad505fc110cf69470" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::offsets_to_indices&lt; long, int &gt;</definition>
        <argsstring>(long const *, int, int *)</argsstring>
        <name>offsets_to_indices&lt; long, int &gt;</name>
        <qualifiedname>cugraph::detail::offsets_to_indices&lt; long, int &gt;</qualifiedname>
        <param>
          <type>long const *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="29" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="29" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1ac1ec5c6792003988fab78f9443ba9e95" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::offsets_to_indices&lt; long, long &gt;</definition>
        <argsstring>(long const *, long, long *)</argsstring>
        <name>offsets_to_indices&lt; long, long &gt;</name>
        <qualifiedname>cugraph::detail::offsets_to_indices&lt; long, long &gt;</qualifiedname>
        <param>
          <type>long const *</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="30" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="30" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a1415e5824187c6d9d1c4acce300f4c0c" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template</type>
        <definition>template __global__ cugraph::detail::__attribute__</definition>
        <argsstring>((visibility(&quot;hidden&quot;))) __global__ void offsets_to_indices_kernel&lt; int</argsstring>
        <name>__attribute__</name>
        <qualifiedname>cugraph::detail::__attribute__</qualifiedname>
        <param>
          <type>(visibility(&quot;hidden&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="32" column="17" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="32" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1abe154f6059805d8096bfc9903a092798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template</type>
        <definition>template cugraph::detail::int</definition>
        <argsstring>(int const *, int, int *)</argsstring>
        <name>int</name>
        <qualifiedname>cugraph::detail::int</qualifiedname>
        <param>
          <type>int const *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="33" column="2" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="33" declcolumn="2"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1ae42a3fd5f94c838037845c97dececa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template</type>
        <definition>template cugraph::detail::int</definition>
        <argsstring>(long const *, int, int *)</argsstring>
        <name>int</name>
        <qualifiedname>cugraph::detail::int</qualifiedname>
        <param>
          <type>long const *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="35" column="2" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="35" declcolumn="2"/>
      </memberdef>
      <memberdef kind="function" id="eidecl__graph__utils_8hpp_1a217062530d267fc86a6dc17fbefb7ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template</type>
        <definition>template cugraph::detail::long</definition>
        <argsstring>(long const *, long, long *)</argsstring>
        <name>long</name>
        <qualifiedname>cugraph::detail::long</qualifiedname>
        <param>
          <type>long const *</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" line="37" column="2" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidecl_graph_utils.hpp" declline="37" declcolumn="2"/>
      </memberdef>
      <memberdef kind="function" id="eidir__graph__utils_8hpp_1a46a46f24c0f97f3bf071fc810424f155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::offsets_to_indices&lt; int32_t, int32_t &gt;</definition>
        <argsstring>(int32_t const *, int32_t, int32_t *)</argsstring>
        <name>offsets_to_indices&lt; int32_t, int32_t &gt;</name>
        <qualifiedname>cugraph::detail::offsets_to_indices&lt; int32_t, int32_t &gt;</qualifiedname>
        <param>
          <type>int32_t const *</type>
        </param>
        <param>
          <type>int32_t</type>
        </param>
        <param>
          <type>int32_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" line="28" column="10" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" declline="28" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="eidir__graph__utils_8hpp_1a973990987f04a342c69b5c0fc68685cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::offsets_to_indices&lt; int64_t, int32_t &gt;</definition>
        <argsstring>(int64_t const *, int32_t, int32_t *)</argsstring>
        <name>offsets_to_indices&lt; int64_t, int32_t &gt;</name>
        <qualifiedname>cugraph::detail::offsets_to_indices&lt; int64_t, int32_t &gt;</qualifiedname>
        <param>
          <type>int64_t const *</type>
        </param>
        <param>
          <type>int32_t</type>
        </param>
        <param>
          <type>int32_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" line="29" column="10" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" declline="29" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="eidir__graph__utils_8hpp_1ac10306d022ad9c415698eb8e7d1f45df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void cugraph::detail::offsets_to_indices&lt; int64_t, int64_t &gt;</definition>
        <argsstring>(int64_t const *, int64_t, int64_t *)</argsstring>
        <name>offsets_to_indices&lt; int64_t, int64_t &gt;</name>
        <qualifiedname>cugraph::detail::offsets_to_indices&lt; int64_t, int64_t &gt;</qualifiedname>
        <param>
          <type>int64_t const *</type>
        </param>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>int64_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" line="30" column="10" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" declline="30" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="eidir__graph__utils_8hpp_1a02d3b03e244cb783cfe157b13d6b14e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __global__</type>
        <definition>template __global__ cugraph::detail::int32_t</definition>
        <argsstring>(int32_t const *, int32_t, int32_t *)</argsstring>
        <name>int32_t</name>
        <qualifiedname>cugraph::detail::int32_t</qualifiedname>
        <param>
          <type>int32_t const *</type>
        </param>
        <param>
          <type>int32_t</type>
        </param>
        <param>
          <type>int32_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" line="33" column="2" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" declline="33" declcolumn="2"/>
      </memberdef>
      <memberdef kind="function" id="eidir__graph__utils_8hpp_1aee5853c9292c709de262c3a62dbcba5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __global__</type>
        <definition>template __global__ cugraph::detail::int32_t</definition>
        <argsstring>(int64_t const *, int32_t, int32_t *)</argsstring>
        <name>int32_t</name>
        <qualifiedname>cugraph::detail::int32_t</qualifiedname>
        <param>
          <type>int64_t const *</type>
        </param>
        <param>
          <type>int32_t</type>
        </param>
        <param>
          <type>int32_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" line="35" column="2" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" declline="35" declcolumn="2"/>
      </memberdef>
      <memberdef kind="function" id="eidir__graph__utils_8hpp_1a1c37a306b4976b76ea2cad3e45500095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __global__</type>
        <definition>template __global__ cugraph::detail::int64_t</definition>
        <argsstring>(int64_t const *, int64_t, int64_t *)</argsstring>
        <name>int64_t</name>
        <qualifiedname>cugraph::detail::int64_t</qualifiedname>
        <param>
          <type>int64_t const *</type>
        </param>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>int64_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" line="37" column="2" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/eidir_graph_utils.hpp" declline="37" declcolumn="2"/>
      </memberdef>
      <memberdef kind="function" id="error__check__utils_8cuh_1a4c8ab6d6c840735dd68b0d35fe91ecb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GraphViewType</type>
          </param>
          <param>
            <type>typename VertexPairIterator</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t cugraph::detail::count_invalid_vertex_pairs</definition>
        <argsstring>(raft::handle_t const &amp;handle, GraphViewType const &amp;graph_view, VertexPairIterator vertex_pair_first, VertexPairIterator vertex_pair_last)</argsstring>
        <name>count_invalid_vertex_pairs</name>
        <qualifiedname>cugraph::detail::count_invalid_vertex_pairs</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GraphViewType const &amp;</type>
          <declname>graph_view</declname>
        </param>
        <param>
          <type>VertexPairIterator</type>
          <declname>vertex_pair_first</declname>
        </param>
        <param>
          <type>VertexPairIterator</type>
          <declname>vertex_pair_last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/error_check_utils.cuh" line="67" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/error_check_utils.cuh" bodystart="67" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a671fc8bc8f6a941e03652f441781ead0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename count_t</type>
          </param>
          <param>
            <type>typename index_t</type>
          </param>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>__inline__ __device__ value_t</type>
        <definition>__inline__ __device__ value_t cugraph::detail::parallel_prefix_sum</definition>
        <argsstring>(count_t n, index_t const *ind, value_t const *w)</argsstring>
        <name>parallel_prefix_sum</name>
        <qualifiedname>cugraph::detail::parallel_prefix_sum</qualifiedname>
        <param>
          <type><ref refid="structcugraph_1_1detail_1_1count__t" kindref="compound">count_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>index_t const *</type>
          <declname>ind</declname>
        </param>
        <param>
          <type>value_t const *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="52" column="31" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="52" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a45a69639bc986fda5d2f6e60300b84e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::axpy</definition>
        <argsstring>(size_t n, T a, T *x, T *y)</argsstring>
        <name>axpy</name>
        <qualifiedname>cugraph::detail::axpy</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="105" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="105" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1ab72ff18a0ba5b50a4c3d90680c492d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T cugraph::detail::nrm2</definition>
        <argsstring>(size_t n, T *x)</argsstring>
        <name>nrm2</name>
        <qualifiedname>cugraph::detail::nrm2</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="124" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="124" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a2df6a51b462ac53b3b9388345a8e9f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T cugraph::detail::nrm1</definition>
        <argsstring>(size_t n, T *x)</argsstring>
        <name>nrm1</name>
        <qualifiedname>cugraph::detail::nrm1</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="139" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="139" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a37d5beafb04366a2451a5a5076dd8db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::scal</definition>
        <argsstring>(size_t n, T val, T *x)</argsstring>
        <name>scal</name>
        <qualifiedname>cugraph::detail::scal</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="150" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="150" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a8ca9e0ddf5c9f819ff3ce84648f36f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::addv</definition>
        <argsstring>(size_t n, T val, T *x)</argsstring>
        <name>addv</name>
        <qualifiedname>cugraph::detail::addv</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="163" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="163" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1ae966821321c19cf0ff7fa037742d0634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::fill</definition>
        <argsstring>(size_t n, T *x, T value)</argsstring>
        <name>fill</name>
        <qualifiedname>cugraph::detail::fill</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="176" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="176" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a289bf7ec9790937b9b17a6d27622675d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename M</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::scatter</definition>
        <argsstring>(size_t n, T *src, T *dst, M *map)</argsstring>
        <name>scatter</name>
        <qualifiedname>cugraph::detail::scatter</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>M *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="187" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a51f38645606a4e4eecccd758a0355e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::printv</definition>
        <argsstring>(size_t n, T *vec, int offset)</argsstring>
        <name>printv</name>
        <qualifiedname>cugraph::detail::printv</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="199" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="199" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a61578c672badf023e6d48c332790f67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::copy</definition>
        <argsstring>(size_t n, T *x, T *res)</argsstring>
        <name>copy</name>
        <qualifiedname>cugraph::detail::copy</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="214" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a4432443fa297f9157844743093d7375e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::update_dangling_nodes</definition>
        <argsstring>(size_t n, T *dangling_nodes, T damping_factor)</argsstring>
        <name>update_dangling_nodes</name>
        <qualifiedname>cugraph::detail::update_dangling_nodes</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dangling_nodes</declname>
        </param>
        <param>
          <type>T</type>
          <declname>damping_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="236" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="236" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1af8649e70a3223871b554e3e91381b4f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::degree_coo</definition>
        <argsstring>(const IndexType n, const IndexType e, const IndexType *ind, ValueType *degree)</argsstring>
        <name>degree_coo</name>
        <qualifiedname>cugraph::detail::degree_coo</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const IndexType</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>ind</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="250" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="250" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1ab86561d7defc7fece8efa29bf60390a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::flag_leafs_kernel</definition>
        <argsstring>(const size_t n, const IndexType *degree, ValueType *bookmark)</argsstring>
        <name>flag_leafs_kernel</name>
        <qualifiedname>cugraph::detail::flag_leafs_kernel</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>bookmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="260" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="260" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1aeb876c92f86e6ef636021c9efeb1db8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::degree_offsets</definition>
        <argsstring>(const IndexType n, const IndexType e, const IndexType *ind, ValueType *degree)</argsstring>
        <name>degree_offsets</name>
        <qualifiedname>cugraph::detail::degree_offsets</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const IndexType</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>ind</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="269" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="269" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1ae5bf51e7ff8fa49c84852a4d0ec29457" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FromType</type>
          </param>
          <param>
            <type>typename ToType</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::type_convert</definition>
        <argsstring>(FromType *array, int n)</argsstring>
        <name>type_convert</name>
        <qualifiedname>cugraph::detail::type_convert</qualifiedname>
        <param>
          <type>FromType *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="279" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="279" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a7219f5277bb82d0476d4dd339a6847c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::equi_prob3</definition>
        <argsstring>(const IndexType n, const IndexType e, const IndexType *csrPtr, const IndexType *csrInd, ValueType *val, IndexType *degree)</argsstring>
        <name>equi_prob3</name>
        <qualifiedname>cugraph::detail::equi_prob3</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const IndexType</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>csrPtr</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>csrInd</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>IndexType *</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="289" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="289" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a18658999961f400a17dcea3ec262cdc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::equi_prob2</definition>
        <argsstring>(const IndexType n, const IndexType e, const IndexType *csrPtr, const IndexType *csrInd, ValueType *val, IndexType *degree)</argsstring>
        <name>equi_prob2</name>
        <qualifiedname>cugraph::detail::equi_prob2</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const IndexType</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>csrPtr</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>csrInd</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>IndexType *</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="308" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="308" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a62845e9ed4b1146c66e6ed28ab8b5350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::HT_matrix_csc_coo</definition>
        <argsstring>(const IndexType n, const IndexType e, const IndexType *csrPtr, const IndexType *csrInd, ValueType *val, ValueType *bookmark)</argsstring>
        <name>HT_matrix_csc_coo</name>
        <qualifiedname>cugraph::detail::HT_matrix_csc_coo</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const IndexType</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>csrPtr</declname>
        </param>
        <param>
          <type>const IndexType *</type>
          <declname>csrInd</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>bookmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="329" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="329" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1ad6d14f2b7bc7853566addddcd117e495" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename offsets_t</type>
          </param>
          <param>
            <type>typename index_t</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>cugraph::detail::__attribute__</definition>
        <argsstring>((visibility(&quot;hidden&quot;))) __global__ void offsets_to_indices_kernel(const offsets_t *offsets</argsstring>
        <name>__attribute__</name>
        <qualifiedname>cugraph::detail::__attribute__</qualifiedname>
        <param>
          <type>(visibility(&quot;hidden&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1ac213f6a3bfccc1d5fa61ff5d926696cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename offsets_t</type>
          </param>
          <param>
            <type>typename index_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::offsets_to_indices</definition>
        <argsstring>(const offsets_t *offsets, index_t v, index_t *indices)</argsstring>
        <name>offsets_to_indices</name>
        <qualifiedname>cugraph::detail::offsets_to_indices</qualifiedname>
        <param>
          <type>const offsets_t *</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>index_t</type>
          <declname>v</declname>
        </param>
        <param>
          <type>index_t *</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="395" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="395" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a3601162c78e460f5a1df665c24544cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::sequence</definition>
        <argsstring>(IndexType n, IndexType *vec, IndexType init=0)</argsstring>
        <name>sequence</name>
        <qualifiedname>cugraph::detail::sequence</qualifiedname>
        <param>
          <type>IndexType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IndexType *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>IndexType</type>
          <declname>init</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="405" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="405" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="graph__utils_8cuh_1a398087f8d9f19ef2729175e0b9a41fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DistType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cugraph::detail::has_negative_val</definition>
        <argsstring>(DistType *arr, size_t n)</argsstring>
        <name>has_negative_val</name>
        <qualifiedname>cugraph::detail::has_negative_val</qualifiedname>
        <param>
          <type>DistType *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" line="413" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/graph_utils.cuh" bodystart="413" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="path__retrieval_8cu_1a644acebb0e34b03d3c1743226c62a390" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::get_traversed_cost_kernel</definition>
        <argsstring>(vertex_t const *vertices, vertex_t const *preds, vertex_t const *vtx_map, weight_t const *info_weights, weight_t *out, vertex_t stop_vertex, vertex_t num_vertices)</argsstring>
        <name>get_traversed_cost_kernel</name>
        <qualifiedname>cugraph::detail::get_traversed_cost_kernel</qualifiedname>
        <param>
          <type>vertex_t const *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>preds</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>vtx_map</declname>
        </param>
        <param>
          <type>weight_t const *</type>
          <declname>info_weights</declname>
        </param>
        <param>
          <type>weight_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>stop_vertex</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>num_vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/path_retrieval.cu" line="32" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/path_retrieval.cu" bodystart="32" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="path__retrieval_8cu_1a7076aa98ad67bf9dc9613843706d1e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::get_traversed_cost_impl</definition>
        <argsstring>(raft::handle_t const &amp;handle, vertex_t const *vertices, vertex_t const *preds, weight_t const *info_weights, weight_t *out, vertex_t stop_vertex, vertex_t num_vertices)</argsstring>
        <name>get_traversed_cost_impl</name>
        <qualifiedname>cugraph::detail::get_traversed_cost_impl</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>vertex_t const *</type>
          <declname>preds</declname>
        </param>
        <param>
          <type>weight_t const *</type>
          <declname>info_weights</declname>
        </param>
        <param>
          <type>weight_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>stop_vertex</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>num_vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/path_retrieval.cu" line="54" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/path_retrieval.cu" bodystart="54" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1a438015f8711b45cb7f97f89282107e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="289" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" bodystart="289" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1a662bb32a550153821bc814f59cd5377f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; vertex_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="321" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" bodystart="321" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1a47c6576197ec3ee4c4161bdd4aebd1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="364" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="364" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1ab2d7361b620e302854db2fbe1caca35f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="377" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="377" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1aa1e9e3720ab844756ba0c4375f4049c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="390" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="390" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1af942b8a18c93601c0f297a417cc9155f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="403" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="403" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1a937f1bfe638dfe7bbf6b8dcc98814e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="416" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="416" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1aaa3e6e3f136ecc3753159ef403bbf24b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="429" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="429" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1aeaf87e7900c97e2c34333a447c3cddcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="442" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="442" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1a168540321cf499cb187ae9fb09a41183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="456" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="456" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1a0d94a8c96a1d8ccb3d4a52eacd66bcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="470" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="470" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1aaa835ea841a5aa8353d8520d2886f531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="484" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="484" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1ac60fed616625e5c8ab08922b832b0d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; int64_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; float &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="498" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="498" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertex__pairs_8cu_1abc45d7d5dc147dedad5a55229a837dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt;, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; int64_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; double &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int64_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; int32_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" line="512" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertex_pairs.cu" declline="512" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a8adc842d67bb1996d3adebdda15de95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;vertices)</argsstring>
        <name>shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
<para>Shuffle external (i.e. before renumbering) vertices to their local GPU based on vertex partitioning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertices to shuffle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of shuffled vertices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="67" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" bodystart="67" bodyend="81" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="119" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a6a0ce66bd2ae80a4107db9daa3498041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; value_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; value_t &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; value_t &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; value_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Shuffle external (i.e. before renumbering) vertex &amp; value pairs to their local GPU based on vertex partitioning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertices to shuffle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Values to shuffle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple of vectors storing shuffled vertex &amp; value pairs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="85" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" bodystart="85" bodyend="102" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="138" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1ab04e6b823e7a2a1a21e0166639f80b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; vertex_t &gt;</type>
        <definition>rmm::device_uvector&lt; vertex_t &gt; cugraph::detail::shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;vertices, std::vector&lt; vertex_t &gt; const  &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
<para>Shuffle internal (i.e. renumbered) vertices to their local GPUs based on vertex partitioning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertices to shuffle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertex_partition_range_lasts</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of each GPU&apos;s vertex partition range&apos;s last (exclusive) vertex ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of shuffled vertices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="105" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" bodystart="105" bodyend="133" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="180" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1ac8a363d47c9ce5c93d5e0f9d1fc19fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename value_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; value_t &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; value_t &gt; &gt; cugraph::detail::shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const  &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; value_t &gt; &amp;&amp;values, std::vector&lt; vertex_t &gt; const  &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; value_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
<para>Shuffle vertices using the internal vertex key function which returns the target GPU ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex values. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertex IDs to shuffle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertex Values to shuffle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertex_partition_range_lasts</parametername>
</parameternamelist>
<parameterdescription>
<para>From graph view, vector of last vertex id for each gpu</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple containing device vector of shuffled vertices and device vector of corresponding values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="137" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" bodystart="137" bodyend="165" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="201" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1ab03c30ba24062ed8ecc3a7c21aabb8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;vertices, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="167" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="167" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1afeb6421478c1b2a7dc20729af61b6027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;vertices, std::vector&lt; int64_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertices_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="172" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="172" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a479bc91183ef16ce39baefe5eb137175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; cugraph::detail::shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_values, std::vector&lt; int32_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="178" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="178" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a7eef71394f1a04e90c496d7ee6e9515d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; cugraph::detail::shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_values, std::vector&lt; int64_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="185" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="185" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a5308eb8e4db70806cec380abd793b471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int32_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int32_t &gt; cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;d_vertices)</argsstring>
        <name>shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="191" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="191" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a8693dea9ceac988ead7928a4e195973f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template rmm::device_uvector&lt; int64_t &gt;</type>
        <definition>template rmm::device_uvector&lt; int64_t &gt; cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;d_vertices)</argsstring>
        <name>shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>d_vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="194" column="30" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="194" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1addd64a8c1f7f058778c979b5c1babdc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="198" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="198" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a5a4a0d7c03cfb9aca367f86cccad505c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; size_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; size_t &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; size_t &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; size_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="204" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="204" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1af525265060b2a737d79a6c0abc74db40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; float &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="210" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="210" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a8a79c1890c24f9f13096046525220f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int32_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; double &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="216" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="216" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1ac5514a3068e690f0f21692bad1a8c8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int32_t &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; int32_t &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int32_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="222" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="222" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1afaf773576413793f0f5a30ac041c85c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; int64_t &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="228" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="228" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a9e0640d2e07e572edfbabdf5006ff84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; size_t &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; size_t &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; size_t &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; size_t &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="234" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="234" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1a5a149286b5c7be974cb9e5d47b0a2296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; float &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; float &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; float &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; float &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="240" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="240" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__vertices_8cu_1afa7fff335c525dce07162f4fb74b2caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; double &gt; &gt;</type>
        <definition>template std::tuple&lt; rmm::device_uvector&lt; int64_t &gt;, rmm::device_uvector&lt; double &gt; &gt; cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; int64_t &gt; &amp;&amp;vertices, rmm::device_uvector&lt; double &gt; &amp;&amp;values)</argsstring>
        <name>shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_value_pairs_to_local_gpu_by_vertex_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; int64_t &gt; &amp;&amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; double &gt; &amp;&amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" line="246" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/src/utilities/shuffle_vertices.cu" declline="246" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="decompress__edge__partition_8cuh_1af4b18c3195cc2cb3fc0e42e444edbd4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::decompress_to_edgelist_mid_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; edge_partition, vertex_t major_range_first, vertex_t major_range_last, raft::device_span&lt; vertex_t &gt; majors)</argsstring>
        <name>decompress_to_edgelist_mid_degree</name>
        <qualifiedname>cugraph::detail::decompress_to_edgelist_mid_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>majors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" line="47" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" bodystart="47" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="decompress__edge__partition_8cuh_1a96d3a628c955b0974438ca6b0b4489a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>static __global__ void cugraph::detail::decompress_to_edgelist_high_degree</definition>
        <argsstring>(edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; edge_partition, vertex_t major_range_first, vertex_t major_range_last, raft::device_span&lt; vertex_t &gt; majors)</argsstring>
        <name>decompress_to_edgelist_high_degree</name>
        <qualifiedname>cugraph::detail::decompress_to_edgelist_high_degree</qualifiedname>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_first</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major_range_last</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>majors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" line="77" column="24" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" bodystart="77" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="decompress__edge__partition_8cuh_1a2486e5929d0d248e65f44249c3468703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::decompress_edge_partition_to_fill_edgelist_majors</definition>
        <argsstring>(raft::handle_t const &amp;handle, edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; edge_partition, std::optional&lt; edge_partition_edge_property_device_view_t&lt; edge_t, uint32_t const *, bool &gt; &gt; edge_partition_mask_view, raft::device_span&lt; vertex_t &gt; majors, std::optional&lt; std::vector&lt; vertex_t &gt; &gt; const &amp;segment_offsets)</argsstring>
        <name>decompress_edge_partition_to_fill_edgelist_majors</name>
        <qualifiedname>cugraph::detail::decompress_edge_partition_to_fill_edgelist_majors</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, uint32_t const *, bool &gt; &gt;</type>
          <declname>edge_partition_mask_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; vertex_t &gt; &gt; const &amp;</type>
          <declname>segment_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" line="105" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" bodystart="105" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="decompress__edge__partition_8cuh_1a83cccd5b802c7d3d2deed04f64a46e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_t</type>
          </param>
          <param>
            <type>bool</type>
            <declname>multi_gpu</declname>
            <defname>multi_gpu</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::decompress_edge_partition_to_edgelist</definition>
        <argsstring>(raft::handle_t const &amp;handle, edge_partition_device_view_t&lt; vertex_t, edge_t, multi_gpu &gt; edge_partition, std::optional&lt; edge_partition_edge_property_device_view_t&lt; edge_t, weight_t const * &gt; &gt; edge_partition_weight_view, std::optional&lt; edge_partition_edge_property_device_view_t&lt; edge_t, edge_t const * &gt; &gt; edge_partition_id_view, std::optional&lt; edge_partition_edge_property_device_view_t&lt; edge_t, edge_type_t const * &gt; &gt; edge_partition_type_view, std::optional&lt; edge_partition_edge_property_device_view_t&lt; edge_t, uint32_t const *, bool &gt; &gt; edge_partition_mask_view, raft::device_span&lt; vertex_t &gt; edgelist_majors, raft::device_span&lt; vertex_t &gt; edgelist_minors, std::optional&lt; raft::device_span&lt; weight_t &gt; &gt; edgelist_weights, std::optional&lt; raft::device_span&lt; edge_t &gt; &gt; edgelist_ids, std::optional&lt; raft::device_span&lt; edge_type_t &gt; &gt; edgelist_types, std::optional&lt; std::vector&lt; vertex_t &gt; &gt; const &amp;segment_offsets)</argsstring>
        <name>decompress_edge_partition_to_edgelist</name>
        <qualifiedname>cugraph::detail::decompress_edge_partition_to_edgelist</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcugraph_1_1edge__partition__device__view__t" kindref="compound">edge_partition_device_view_t</ref>&lt; vertex_t, edge_t, multi_gpu &gt;</type>
          <declname>edge_partition</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, weight_t const * &gt; &gt;</type>
          <declname>edge_partition_weight_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, edge_t const * &gt; &gt;</type>
          <declname>edge_partition_id_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, edge_type_t const * &gt; &gt;</type>
          <declname>edge_partition_type_view</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classcugraph_1_1detail_1_1edge__partition__edge__property__device__view__t" kindref="compound">edge_partition_edge_property_device_view_t</ref>&lt; edge_t, uint32_t const *, bool &gt; &gt;</type>
          <declname>edge_partition_mask_view</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>edgelist_majors</declname>
        </param>
        <param>
          <type>raft::device_span&lt; vertex_t &gt;</type>
          <declname>edgelist_minors</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; weight_t &gt; &gt;</type>
          <declname>edgelist_weights</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; edge_t &gt; &gt;</type>
          <declname>edgelist_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; raft::device_span&lt; edge_type_t &gt; &gt;</type>
          <declname>edgelist_types</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; vertex_t &gt; &gt; const &amp;</type>
          <declname>segment_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" line="217" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/decompress_edge_partition.cuh" bodystart="217" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__wrappers_8hpp_1af92a0096fa293e153d4c1182d6c19228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_id_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &gt; cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &amp;&amp;edge_types)</argsstring>
        <name>shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <briefdescription>
<para>Shuffle external (i.e. before renumbering) vertex pairs (which can be edge end points) to their local GPUs based on edge partitioning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Needs to be a floating point type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge type identifiers. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">majors</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of first elemetns in vertex pairs. To determine the local GPU of a (major, minor) pair, we assume there exists an edge from major=&gt;minor (if we store edges in the sparse 2D matrix using sources as major indices) or minor=&gt;major (otherwise) and apply the edge partitioning to determine the local GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">minors</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of second elements in vertex pairs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of vertex pair weight values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">edge_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of vertex pair edge id values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">edge_types</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of vertex pair edge type values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple of vectors storing shuffled major vertices, minor vertices and optional weights, edge ids and edge types </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" line="57" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="57" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__wrappers_8hpp_1a5ec2731978149eb1b17b39cb47340851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename edge_t</type>
          </param>
          <param>
            <type>typename weight_t</type>
          </param>
          <param>
            <type>typename edge_type_id_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &gt;</type>
        <definition>std::tuple&lt; rmm::device_uvector&lt; vertex_t &gt;, rmm::device_uvector&lt; vertex_t &gt;, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt;, std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &gt; cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</definition>
        <argsstring>(raft::handle_t const &amp;handle, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;majors, rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;minors, std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;weights, std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;edge_ids, std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &amp;&amp;edge_types, std::vector&lt; vertex_t &gt; const &amp;vertex_partition_range_lasts)</argsstring>
        <name>shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</name>
        <qualifiedname>cugraph::detail::shuffle_int_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>majors</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; &amp;&amp;</type>
          <declname>minors</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; weight_t &gt; &gt; &amp;&amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_ids</declname>
        </param>
        <param>
          <type>std::optional&lt; rmm::device_uvector&lt; edge_type_id_t &gt; &gt; &amp;&amp;</type>
          <declname>edge_types</declname>
        </param>
        <param>
          <type>std::vector&lt; vertex_t &gt; const &amp;</type>
          <declname>vertex_partition_range_lasts</declname>
        </param>
        <briefdescription>
<para>Shuffle internal (i.e. renumbered) vertex pairs (which can be edge end points) to their local GPUs based on edge partitioning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge identifiers. Needs to be an integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge weights. Needs to be a floating point type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_type_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of edge type identifiers. Needs to be an integral type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RAFT handle object to encapsulate resources (e.g. CUDA stream, communicator, and handles to various CUDA libraries) to run graph algorithms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">majors</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of first elemetns in vertex pairs. To determine the local GPU of a (major, minor) pair, we assume there exists an edge from major=&gt;minor (if we store edges in the sparse 2D matrix using sources as major indices) or minor=&gt;major (otherwise) and apply the edge partitioning to determine the local GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">minors</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of second elements in vertex pairs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of vertex pair weight values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">edge_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of vertex pair edge id values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">edge_types</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of vertex pair edge type values.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertex_partition_range_lasts</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of each GPU&apos;s vertex partition range&apos;s last (exclusive) vertex ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple of vectors storing shuffled major vertices, minor vertices and optional weights, edge ids and edge types </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" line="97" column="1" declfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/shuffle_wrappers.hpp" declline="97" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="utility__wrappers_8hpp_1aa952b185f0f0bc1645aeb674ee596b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>vertex_t</type>
        <definition>vertex_t cugraph::detail::compute_maximum_vertex_id</definition>
        <argsstring>(rmm::cuda_stream_view const &amp;stream_view, rmm::device_uvector&lt; vertex_t &gt; const &amp;d_edgelist_srcs, rmm::device_uvector&lt; vertex_t &gt; const &amp;d_edgelist_dsts)</argsstring>
        <name>compute_maximum_vertex_id</name>
        <qualifiedname>cugraph::detail::compute_maximum_vertex_id</qualifiedname>
        <param>
          <type>rmm::cuda_stream_view const &amp;</type>
          <declname>stream_view</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; const &amp;</type>
          <declname>d_edgelist_srcs</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; vertex_t &gt; const &amp;</type>
          <declname>d_edgelist_dsts</declname>
        </param>
        <briefdescription>
<para>Compute the maximum vertex id of an edge list. </para>
        </briefdescription>
        <detaileddescription>
<para>max(d_edgelist_srcs.max(), d_edgelist_dsts.max())</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>vertex_t</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream_view</parametername>
</parameternamelist>
<parameterdescription>
<para>stream view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_edgelist_srcs</parametername>
</parameternamelist>
<parameterdescription>
<para>device array storing source IDs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_edgelist_dsts</parametername>
</parameternamelist>
<parameterdescription>
<para>device array storing destination IDs</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value occurring in the edge list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" line="124" column="10" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/detail/utility_wrappers.hpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="edge__partition__device__view_8cuh_1ad7ec247d2c2c6932c286f4d68b4f7b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
        </templateparamlist>
        <type>__device__ thrust::optional&lt; vertex_t &gt;</type>
        <definition>__device__ thrust::optional&lt; vertex_t &gt; cugraph::detail::major_hypersparse_idx_from_major_nocheck_impl</definition>
        <argsstring>(raft::device_span&lt; vertex_t const &gt; dcs_nzd_vertices, vertex_t major)</argsstring>
        <name>major_hypersparse_idx_from_major_nocheck_impl</name>
        <qualifiedname>cugraph::detail::major_hypersparse_idx_from_major_nocheck_impl</qualifiedname>
        <param>
          <type>raft::device_span&lt; vertex_t const &gt;</type>
          <declname>dcs_nzd_vertices</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>major</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/edge_partition_device_view.cuh" line="46" column="29" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/edge_partition_device_view.cuh" bodystart="46" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="atomic__ops_8cuh_1a485e8666c8c7c02ce8bf98c0285eafe3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>__device__ constexpr TupleType</type>
        <definition>__device__ constexpr TupleType cugraph::detail::thrust_tuple_atomic_and</definition>
        <argsstring>(Iterator iter, TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_atomic_and</name>
        <qualifiedname>cugraph::detail::thrust_tuple_atomic_and</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" line="34" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="atomic__ops_8cuh_1a2acef30e09d8529751b7fce4fd53cd54" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>__device__ constexpr TupleType</type>
        <definition>__device__ constexpr TupleType cugraph::detail::thrust_tuple_atomic_or</definition>
        <argsstring>(Iterator iter, TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_atomic_or</name>
        <qualifiedname>cugraph::detail::thrust_tuple_atomic_or</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" line="43" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="atomic__ops_8cuh_1a6f78f2dee85b497fc5cd2548dc7d63ba" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>__device__ constexpr TupleType</type>
        <definition>__device__ constexpr TupleType cugraph::detail::thrust_tuple_atomic_add</definition>
        <argsstring>(Iterator iter, TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_atomic_add</name>
        <qualifiedname>cugraph::detail::thrust_tuple_atomic_add</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" line="52" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="atomic__ops_8cuh_1af6c6a5d5baff16c31cd833e7e1650c7b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>__device__ constexpr TupleType</type>
        <definition>__device__ constexpr TupleType cugraph::detail::thrust_tuple_elementwise_atomic_cas</definition>
        <argsstring>(Iterator iter, TupleType comp_tup, TupleType val_tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_elementwise_atomic_cas</name>
        <qualifiedname>cugraph::detail::thrust_tuple_elementwise_atomic_cas</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>comp_tup</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>val_tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" line="61" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="atomic__ops_8cuh_1a1192b07d6a76f0d318880801eee9326a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>__device__ constexpr TupleType</type>
        <definition>__device__ constexpr TupleType cugraph::detail::thrust_tuple_elementwise_atomic_min</definition>
        <argsstring>(Iterator iter, TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_elementwise_atomic_min</name>
        <qualifiedname>cugraph::detail::thrust_tuple_elementwise_atomic_min</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" line="72" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="atomic__ops_8cuh_1afc457a423a9543bbbf054f2bc6ed47df" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>__device__ constexpr TupleType</type>
        <definition>__device__ constexpr TupleType cugraph::detail::thrust_tuple_elementwise_atomic_max</definition>
        <argsstring>(Iterator iter, TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_elementwise_atomic_max</name>
        <qualifiedname>cugraph::detail::thrust_tuple_elementwise_atomic_max</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" line="81" column="32" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/atomic_ops.cuh" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="dataframe__buffer_8hpp_1aea692a2fb2137898082236eb49e27dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::allocate_dataframe_buffer_tuple_impl</definition>
        <argsstring>(std::index_sequence&lt; Is... &gt;, size_t buffer_size, rmm::cuda_stream_view stream_view)</argsstring>
        <name>allocate_dataframe_buffer_tuple_impl</name>
        <qualifiedname>cugraph::detail::allocate_dataframe_buffer_tuple_impl</qualifiedname>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" line="35" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="dataframe__buffer_8hpp_1a869f4c948e59655b01e49327108c7bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_dataframe_buffer_begin_tuple_impl</definition>
        <argsstring>(std::index_sequence&lt; I... &gt;, TupleType &amp;buffer)</argsstring>
        <name>get_dataframe_buffer_begin_tuple_impl</name>
        <qualifiedname>cugraph::detail::get_dataframe_buffer_begin_tuple_impl</qualifiedname>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <param>
          <type>TupleType &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" line="44" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="dataframe__buffer_8hpp_1a7988ca8af589f48b2809472af284ba31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_dataframe_buffer_end_tuple_impl</definition>
        <argsstring>(std::index_sequence&lt; I... &gt;, TupleType &amp;buffer)</argsstring>
        <name>get_dataframe_buffer_end_tuple_impl</name>
        <qualifiedname>cugraph::detail::get_dataframe_buffer_end_tuple_impl</qualifiedname>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <param>
          <type>TupleType &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" line="50" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="dataframe__buffer_8hpp_1a9aa83b7adbcfc16903406161c0229371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_dataframe_buffer_cbegin_tuple_impl</definition>
        <argsstring>(std::index_sequence&lt; I... &gt;, TupleType &amp;buffer)</argsstring>
        <name>get_dataframe_buffer_cbegin_tuple_impl</name>
        <qualifiedname>cugraph::detail::get_dataframe_buffer_cbegin_tuple_impl</qualifiedname>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <param>
          <type>TupleType &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" line="56" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="dataframe__buffer_8hpp_1afd3f4b0b790ce029db1fa1bfc5727fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::get_dataframe_buffer_cend_tuple_impl</definition>
        <argsstring>(std::index_sequence&lt; I... &gt;, TupleType &amp;buffer)</argsstring>
        <name>get_dataframe_buffer_cend_tuple_impl</name>
        <qualifiedname>cugraph::detail::get_dataframe_buffer_cend_tuple_impl</qualifiedname>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <param>
          <type>TupleType &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" line="63" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/dataframe_buffer.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a013d9523e3690799fe9ebbb4c89d96e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * cugraph::detail::iter_to_raw_ptr</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>iter_to_raw_ptr</name>
        <qualifiedname>cugraph::detail::iter_to_raw_ptr</qualifiedname>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="40" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a92df9c6dcb77133d2d0a17b6a8545bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * cugraph::detail::iter_to_raw_ptr</definition>
        <argsstring>(thrust::device_ptr&lt; T &gt; ptr)</argsstring>
        <name>iter_to_raw_ptr</name>
        <qualifiedname>cugraph::detail::iter_to_raw_ptr</qualifiedname>
        <param>
          <type>thrust::device_ptr&lt; T &gt;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="46" column="3" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1abce416b5796769129e86b13147b0dcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::iter_to_raw_ptr</definition>
        <argsstring>(thrust::detail::normal_iterator&lt; thrust::device_ptr&lt; T &gt; &gt; iter)</argsstring>
        <name>iter_to_raw_ptr</name>
        <qualifiedname>cugraph::detail::iter_to_raw_ptr</qualifiedname>
        <param>
          <type>thrust::detail::normal_iterator&lt; thrust::device_ptr&lt; T &gt; &gt;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="52" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a408b4b8f2dc40cff2fecc39328791f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputValueType</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_same&lt; OutputValueType, thrust::detail::any_assign &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_same&lt; OutputValueType, thrust::detail::any_assign &gt;::value, void &gt; cugraph::detail::device_isend_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, size_t count, int dst, int tag, raft::comms::request_t *request)</argsstring>
        <name>device_isend_impl</name>
        <qualifiedname>cugraph::detail::device_isend_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>raft::comms::request_t *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="59" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="59" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a23b4415d4930c347d7f10b4430deec8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputValueType</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; OutputValueType &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; OutputValueType &gt;::value, void &gt; cugraph::detail::device_isend_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, size_t count, int dst, int tag, raft::comms::request_t *request)</argsstring>
        <name>device_isend_impl</name>
        <qualifiedname>cugraph::detail::device_isend_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>raft::comms::request_t *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="70" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1ad0f4db2f6ca0b981820a7dfd89c5c8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputValueType</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_irecv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, OutputIterator output_first, size_t count, int src, int tag, raft::comms::request_t *request)</argsstring>
        <name>device_irecv_impl</name>
        <qualifiedname>cugraph::detail::device_irecv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>raft::comms::request_t *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="116" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a39845367f159cb96f53e2b493bd63bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputValueType</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_irecv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, OutputIterator output_first, size_t count, int src, int tag, raft::comms::request_t *request)</argsstring>
        <name>device_irecv_impl</name>
        <qualifiedname>cugraph::detail::device_irecv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>raft::comms::request_t *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="130" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="130" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a0b079f5a19eb194014452df03076a919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_sendrecv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, size_t tx_count, int dst, OutputIterator output_first, size_t rx_count, int src, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_sendrecv_impl</name>
        <qualifiedname>cugraph::detail::device_sendrecv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tx_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rx_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="176" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1acdea56b56cbe6ec33639c9039cc22209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_sendrecv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, size_t tx_count, int dst, OutputIterator output_first, size_t rx_count, int src, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_sendrecv_impl</name>
        <qualifiedname>cugraph::detail::device_sendrecv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tx_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rx_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="192" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="192" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a843f373388b6e45081fad4479a3b11db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_multicast_sendrecv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, std::vector&lt; size_t &gt; const &amp;tx_counts, std::vector&lt; size_t &gt; const &amp;tx_offsets, std::vector&lt; int &gt; const &amp;tx_dst_ranks, OutputIterator output_first, std::vector&lt; size_t &gt; const &amp;rx_counts, std::vector&lt; size_t &gt; const &amp;rx_offsets, std::vector&lt; int &gt; const &amp;rx_src_ranks, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_multicast_sendrecv_impl</name>
        <qualifiedname>cugraph::detail::device_multicast_sendrecv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>tx_counts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>tx_offsets</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>tx_dst_ranks</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>rx_counts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>rx_offsets</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>rx_src_ranks</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="258" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="258" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1ad27dbf0541935654efb294bec0b8a6fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_multicast_sendrecv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, std::vector&lt; size_t &gt; const &amp;tx_counts, std::vector&lt; size_t &gt; const &amp;tx_offsets, std::vector&lt; int &gt; const &amp;tx_dst_ranks, OutputIterator output_first, std::vector&lt; size_t &gt; const &amp;rx_counts, std::vector&lt; size_t &gt; const &amp;rx_offsets, std::vector&lt; int &gt; const &amp;rx_src_ranks, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_multicast_sendrecv_impl</name>
        <qualifiedname>cugraph::detail::device_multicast_sendrecv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>tx_counts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>tx_offsets</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>tx_dst_ranks</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>rx_counts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>rx_offsets</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>rx_src_ranks</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="276" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="276" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a5ca3db09bafedbd9a9fa78d95deee74c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_bcast_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t count, int root, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_bcast_impl</name>
        <qualifiedname>cugraph::detail::device_bcast_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="361" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="361" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1ae963baf08cc0293df61320566a4e201a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_bcast_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t count, int root, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_bcast_impl</name>
        <qualifiedname>cugraph::detail::device_bcast_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="375" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="375" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1ac7f91bb3b4b0ea2ca3e7e8e09d23fd30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_allreduce_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t count, raft::comms::op_t op, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_allreduce_impl</name>
        <qualifiedname>cugraph::detail::device_allreduce_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>raft::comms::op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="422" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="422" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a055fa3a09c1d2fe6a4d53393b1b37773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_allreduce_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t count, raft::comms::op_t op, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_allreduce_impl</name>
        <qualifiedname>cugraph::detail::device_allreduce_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>raft::comms::op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="436" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="436" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a0b225290729f92bf77cee3620b70f2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_reduce_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t count, raft::comms::op_t op, int root, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_reduce_impl</name>
        <qualifiedname>cugraph::detail::device_reduce_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>raft::comms::op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="483" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="483" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1afdc8b542394e3121032d80f86389a6a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_reduce_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t count, raft::comms::op_t op, int root, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_reduce_impl</name>
        <qualifiedname>cugraph::detail::device_reduce_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>raft::comms::op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="498" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="498" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1a9e7554a18eef85d6aaaabfaeaf99bd8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_allgatherv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, std::vector&lt; size_t &gt; const &amp;recvcounts, std::vector&lt; size_t &gt; const &amp;displacements, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_allgatherv_impl</name>
        <qualifiedname>cugraph::detail::device_allgatherv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>displacements</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="553" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="553" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1afddad570bf40efe5d27e13f261572bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_allgatherv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, std::vector&lt; size_t &gt; const &amp;recvcounts, std::vector&lt; size_t &gt; const &amp;displacements, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_allgatherv_impl</name>
        <qualifiedname>cugraph::detail::device_allgatherv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>displacements</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="567" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="567" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1ae9b97f391ed97034b7f9bb61c3ca5414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; thrust::detail::is_discard_iterator&lt; OutputIterator &gt;::value, void &gt; cugraph::detail::device_gatherv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t sendcount, std::vector&lt; size_t &gt; const &amp;recvcounts, std::vector&lt; size_t &gt; const &amp;displacements, int root, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_gatherv_impl</name>
        <qualifiedname>cugraph::detail::device_gatherv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>displacements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="617" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="617" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="device__comm_8hpp_1ab694d6aecc192e7311af69f1016fee36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt;</type>
        <definition>std::enable_if_t&lt; std::is_arithmetic&lt; typename std::iterator_traits&lt; OutputIterator &gt;::value_type &gt;::value, void &gt; cugraph::detail::device_gatherv_impl</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, InputIterator input_first, OutputIterator output_first, size_t sendcount, std::vector&lt; size_t &gt; const &amp;recvcounts, std::vector&lt; size_t &gt; const &amp;displacements, int root, rmm::cuda_stream_view stream_view)</argsstring>
        <name>device_gatherv_impl</name>
        <qualifiedname>cugraph::detail::device_gatherv_impl</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>displacements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" line="633" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/device_comm.hpp" bodystart="633" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="mask__utils_8cuh_1a69a32edf49291200701c07db87697cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaskIterator</type>
          </param>
        </templateparamlist>
        <type>__device__ size_t</type>
        <definition>__device__ size_t cugraph::detail::count_set_bits</definition>
        <argsstring>(MaskIterator mask_first, size_t start_offset, size_t num_bits)</argsstring>
        <name>count_set_bits</name>
        <qualifiedname>cugraph::detail::count_set_bits</qualifiedname>
        <param>
          <type>MaskIterator</type>
          <declname>mask_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" line="36" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" bodystart="36" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="mask__utils_8cuh_1aa303ecb0ea231b2b29f57a982679c882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaskIterator</type>
          </param>
        </templateparamlist>
        <type>__device__ size_t</type>
        <definition>__device__ size_t cugraph::detail::find_nth_set_bits</definition>
        <argsstring>(MaskIterator mask_first, size_t start_offset, size_t num_bits, size_t n)</argsstring>
        <name>find_nth_set_bits</name>
        <qualifiedname>cugraph::detail::find_nth_set_bits</qualifiedname>
        <param>
          <type>MaskIterator</type>
          <declname>mask_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" line="73" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" bodystart="73" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="mask__utils_8cuh_1a0590c5348c1fd248d951dc00583eb4f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename MaskIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
          <param>
            <type>typename input_value_type</type>
            <defval>typename thrust::iterator_traits&lt;InputIterator&gt;::value_type</defval>
          </param>
          <param>
            <type>typename output_value_type</type>
            <defval>typename thrust::iterator_traits&lt;            OutputIterator&gt;::value_type</defval>
          </param>
        </templateparamlist>
        <type>__device__ size_t</type>
        <definition>__device__ size_t cugraph::detail::copy_if_mask_set</definition>
        <argsstring>(InputIterator input_first, MaskIterator mask_first, OutputIterator output_first, size_t input_start_offset, size_t output_start_offset, size_t num_items)</argsstring>
        <name>copy_if_mask_set</name>
        <qualifiedname>cugraph::detail::copy_if_mask_set</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>MaskIterator</type>
          <declname>mask_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>input_start_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_start_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" line="121" column="19" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" bodystart="121" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="mask__utils_8cuh_1a6905836424b1439ce9b24ff96cc4a35f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaskIterator</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t cugraph::detail::count_set_bits</definition>
        <argsstring>(raft::handle_t const &amp;handle, MaskIterator mask_first, size_t num_bits)</argsstring>
        <name>count_set_bits</name>
        <qualifiedname>cugraph::detail::count_set_bits</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>MaskIterator</type>
          <declname>mask_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" line="155" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" bodystart="155" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="mask__utils_8cuh_1a8a545dec44f3910fbb38af390b5a7e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename MaskIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator cugraph::detail::copy_if_mask_set</definition>
        <argsstring>(raft::handle_t const &amp;handle, InputIterator input_first, InputIterator input_last, MaskIterator mask_first, OutputIterator output_first)</argsstring>
        <name>copy_if_mask_set</name>
        <qualifiedname>cugraph::detail::copy_if_mask_set</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>input_last</declname>
        </param>
        <param>
          <type>MaskIterator</type>
          <declname>mask_first</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>output_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" line="178" column="16" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/mask_utils.cuh" bodystart="178" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="misc__utils_8cuh_1aa11205bdde6eed3a736de5a321cdc3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename vertex_t</type>
          </param>
          <param>
            <type>typename offset_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; std::vector&lt; vertex_t &gt;, std::vector&lt; offset_t &gt; &gt;</type>
        <definition>std::tuple&lt; std::vector&lt; vertex_t &gt;, std::vector&lt; offset_t &gt; &gt; cugraph::detail::compute_offset_aligned_element_chunks</definition>
        <argsstring>(raft::handle_t const &amp;handle, raft::device_span&lt; offset_t const &gt; offsets, offset_t num_elements, vertex_t approx_element_chunk_size)</argsstring>
        <name>compute_offset_aligned_element_chunks</name>
        <qualifiedname>cugraph::detail::compute_offset_aligned_element_chunks</qualifiedname>
        <param>
          <type>raft::handle_t const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>raft::device_span&lt; offset_t const &gt;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>offset_t</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>vertex_t</type>
          <declname>approx_element_chunk_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" line="41" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" bodystart="41" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="misc__utils_8cuh_1aed2444208c3f75783c889abea6e77c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>thrust::optional&lt; T &gt;</type>
        <definition>thrust::optional&lt; T &gt; cugraph::detail::to_thrust_optional</definition>
        <argsstring>(std::optional&lt; T &gt; val)</argsstring>
        <name>to_thrust_optional</name>
        <qualifiedname>cugraph::detail::to_thrust_optional</qualifiedname>
        <param>
          <type>std::optional&lt; T &gt;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" line="90" column="18" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="misc__utils_8cuh_1ad218ff758f7283845f58c2af4ef08a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; T &gt;</type>
        <definition>std::optional&lt; T &gt; cugraph::detail::to_std_optional</definition>
        <argsstring>(thrust::optional&lt; T &gt; val)</argsstring>
        <name>to_std_optional</name>
        <qualifiedname>cugraph::detail::to_std_optional</qualifiedname>
        <param>
          <type>thrust::optional&lt; T &gt;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" line="98" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="misc__utils_8cuh_1a7dcaa6b96c559cede3c6052ae7d72aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename idx_t</type>
          </param>
          <param>
            <type>typename offset_t</type>
          </param>
        </templateparamlist>
        <type>rmm::device_uvector&lt; idx_t &gt;</type>
        <definition>rmm::device_uvector&lt; idx_t &gt; cugraph::detail::expand_sparse_offsets</definition>
        <argsstring>(raft::device_span&lt; offset_t const &gt; offsets, idx_t base_idx, rmm::cuda_stream_view stream_view)</argsstring>
        <name>expand_sparse_offsets</name>
        <qualifiedname>cugraph::detail::expand_sparse_offsets</qualifiedname>
        <param>
          <type>raft::device_span&lt; offset_t const &gt;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>idx_t</type>
          <declname>base_idx</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" line="106" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/misc_utils.cuh" bodystart="106" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="packed__bool__utils_8hpp_1aa312c8bee6bbb15c440c3d67fb95b6a0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename value_t</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; <ref refid="structcugraph_1_1is__thrust__tuple__of__arithmetic" kindref="compound">cugraph::is_thrust_tuple_of_arithmetic</ref>&lt; typename thrust::iterator_traits&lt; ValueIterator &gt;::value_type &gt;::value &amp;&amp;<ref refid="structcugraph_1_1is__thrust__tuple__of__arithmetic" kindref="compound">cugraph::is_thrust_tuple_of_arithmetic</ref>&lt; value_t &gt;::value, bool &gt;</type>
        <definition>constexpr std::enable_if_t&lt; cugraph::is_thrust_tuple_of_arithmetic&lt; typename thrust::iterator_traits&lt; ValueIterator &gt;::value_type &gt;::value &amp;&amp; cugraph::is_thrust_tuple_of_arithmetic&lt; value_t &gt;::value, bool &gt; cugraph::detail::has_packed_bool_element</definition>
        <argsstring>(std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>has_packed_bool_element</name>
        <qualifiedname>cugraph::detail::has_packed_bool_element</qualifiedname>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/packed_bool_utils.hpp" line="35" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/packed_bool_utils.hpp" bodystart="35" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1acbd7d80536dea9e575d82c87d30f0515" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; size_t &gt;, std::vector&lt; size_t &gt;, std::vector&lt; int &gt;, std::vector&lt; size_t &gt;, std::vector&lt; size_t &gt;, std::vector&lt; int &gt; &gt;</type>
        <definition>std::tuple&lt; std::vector&lt; size_t &gt;, std::vector&lt; size_t &gt;, std::vector&lt; int &gt;, std::vector&lt; size_t &gt;, std::vector&lt; size_t &gt;, std::vector&lt; int &gt; &gt; cugraph::detail::compute_tx_rx_counts_offsets_ranks</definition>
        <argsstring>(raft::comms::comms_t const &amp;comm, rmm::device_uvector&lt; size_t &gt; const &amp;d_tx_value_counts, rmm::cuda_stream_view stream_view)</argsstring>
        <name>compute_tx_rx_counts_offsets_ranks</name>
        <qualifiedname>cugraph::detail::compute_tx_rx_counts_offsets_ranks</qualifiedname>
        <param>
          <type>raft::comms::comms_t const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>rmm::device_uvector&lt; size_t &gt; const &amp;</type>
          <declname>d_tx_value_counts</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="77" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="77" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1a86f67f3b43b77058efb7ea0465498e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename ValueToGroupIdOp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::multi_partition</definition>
        <argsstring>(ValueIterator value_first, ValueIterator value_last, ValueToGroupIdOp value_to_group_id_op, int group_first, int group_last, rmm::cuda_stream_view stream_view)</argsstring>
        <name>multi_partition</name>
        <qualifiedname>cugraph::detail::multi_partition</qualifiedname>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_last</declname>
        </param>
        <param>
          <type>ValueToGroupIdOp</type>
          <declname>value_to_group_id_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group_first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group_last</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="182" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="182" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1a18605b422f1fe635260d6b4761ee948d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename KeyToGroupIdOp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::multi_partition</definition>
        <argsstring>(KeyIterator key_first, KeyIterator key_last, ValueIterator value_first, KeyToGroupIdOp key_to_group_id_op, int group_first, int group_last, rmm::cuda_stream_view stream_view)</argsstring>
        <name>multi_partition</name>
        <qualifiedname>cugraph::detail::multi_partition</qualifiedname>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>KeyToGroupIdOp</type>
          <declname>key_to_group_id_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group_first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group_last</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="236" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="236" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1af0c7b41bb30f913ce89c65dd43c9b654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::swap_partitions</definition>
        <argsstring>(ValueIterator value_first, ValueIterator value_last, size_t first_partition_size, rmm::cuda_stream_view stream_view)</argsstring>
        <name>swap_partitions</name>
        <qualifiedname>cugraph::detail::swap_partitions</qualifiedname>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_last</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>first_partition_size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="298" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="298" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1a9d84bd24a59ca2bb0e881c56de33995b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::swap_partitions</definition>
        <argsstring>(KeyIterator key_first, KeyIterator key_last, ValueIterator value_first, size_t first_partition_size, rmm::cuda_stream_view stream_view)</argsstring>
        <name>swap_partitions</name>
        <qualifiedname>cugraph::detail::swap_partitions</qualifiedname>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>first_partition_size</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="347" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="347" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1a6e4728c289fe313e47c259b657a1b92e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename ValueToGroupIdOp</type>
          </param>
        </templateparamlist>
        <type>ValueIterator</type>
        <definition>ValueIterator cugraph::detail::mem_frugal_partition</definition>
        <argsstring>(ValueIterator value_first, ValueIterator value_last, ValueToGroupIdOp value_to_group_id_op, int pivot, rmm::cuda_stream_view stream_view)</argsstring>
        <name>mem_frugal_partition</name>
        <qualifiedname>cugraph::detail::mem_frugal_partition</qualifiedname>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_last</declname>
        </param>
        <param>
          <type>ValueToGroupIdOp</type>
          <declname>value_to_group_id_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="431" column="15" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="431" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1a28a25f6e4762499a34ff5bb81fe002a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename KeyToGroupIdOp</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; KeyIterator, ValueIterator &gt;</type>
        <definition>std::tuple&lt; KeyIterator, ValueIterator &gt; cugraph::detail::mem_frugal_partition</definition>
        <argsstring>(KeyIterator key_first, KeyIterator key_last, ValueIterator value_first, KeyToGroupIdOp key_to_group_id_op, int pivot, rmm::cuda_stream_view stream_view)</argsstring>
        <name>mem_frugal_partition</name>
        <qualifiedname>cugraph::detail::mem_frugal_partition</qualifiedname>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>KeyToGroupIdOp</type>
          <declname>key_to_group_id_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="485" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="485" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1a9a8398e55e21886c7d3862203d19f071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename ValueToGroupIdOp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::mem_frugal_groupby</definition>
        <argsstring>(ValueIterator value_first, ValueIterator value_last, ValueToGroupIdOp value_to_group_id_op, int num_groups, size_t mem_frugal_threshold, rmm::cuda_stream_view stream_view)</argsstring>
        <name>mem_frugal_groupby</name>
        <qualifiedname>cugraph::detail::mem_frugal_groupby</qualifiedname>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_last</declname>
        </param>
        <param>
          <type>ValueToGroupIdOp</type>
          <declname>value_to_group_id_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_frugal_threshold</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="547" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="547" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="shuffle__comm_8cuh_1aac0115e6243150de8402bb19a2ff1c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyIterator</type>
          </param>
          <param>
            <type>typename ValueIterator</type>
          </param>
          <param>
            <type>typename KeyToGroupIdOp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cugraph::detail::mem_frugal_groupby</definition>
        <argsstring>(KeyIterator key_first, KeyIterator key_last, ValueIterator value_first, KeyToGroupIdOp key_to_group_id_op, int num_groups, size_t mem_frugal_threshold, rmm::cuda_stream_view stream_view)</argsstring>
        <name>mem_frugal_groupby</name>
        <qualifiedname>cugraph::detail::mem_frugal_groupby</qualifiedname>
        <param>
          <type>KeyIterator</type>
          <declname>key_first</declname>
        </param>
        <param>
          <type>KeyIterator</type>
          <declname>key_last</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>value_first</declname>
        </param>
        <param>
          <type>KeyToGroupIdOp</type>
          <declname>key_to_group_id_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_frugal_threshold</declname>
        </param>
        <param>
          <type>rmm::cuda_stream_view</type>
          <declname>stream_view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" line="642" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/shuffle_comm.cuh" bodystart="642" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="thrust__tuple__utils_8hpp_1a6a7cdd4c57dcecbbd31d48c1def74fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t cugraph::detail::sum_thrust_tuple_element_sizes</definition>
        <argsstring>(std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>sum_thrust_tuple_element_sizes</name>
        <qualifiedname>cugraph::detail::sum_thrust_tuple_element_sizes</qualifiedname>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" line="62" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="thrust__tuple__utils_8hpp_1a6ef7eafe259efffc969adb6864f207d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::thrust_tuple_to_std_tuple</definition>
        <argsstring>(TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_to_std_tuple</name>
        <qualifiedname>cugraph::detail::thrust_tuple_to_std_tuple</qualifiedname>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" line="68" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="thrust__tuple__utils_8hpp_1ae5ef9d1856078898865f88faa1cda968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cugraph::detail::std_tuple_to_thrust_tuple</definition>
        <argsstring>(TupleType tup, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>std_tuple_to_thrust_tuple</name>
        <qualifiedname>cugraph::detail::std_tuple_to_thrust_tuple</qualifiedname>
        <param>
          <type>TupleType</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" line="74" column="6" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="thrust__tuple__utils_8hpp_1a106dbcd9d19a132f7b0dc35950b8027f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>constexpr TupleType</type>
        <definition>constexpr TupleType cugraph::detail::thrust_tuple_of_arithmetic_numeric_limits_lowest</definition>
        <argsstring>(std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_of_arithmetic_numeric_limits_lowest</name>
        <qualifiedname>cugraph::detail::thrust_tuple_of_arithmetic_numeric_limits_lowest</qualifiedname>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" line="82" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="thrust__tuple__utils_8hpp_1aa580ce51178bd8d3dbfa079934d3ea9b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TupleType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>constexpr TupleType</type>
        <definition>constexpr TupleType cugraph::detail::thrust_tuple_of_arithmetic_numeric_limits_max</definition>
        <argsstring>(std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>thrust_tuple_of_arithmetic_numeric_limits_max</name>
        <qualifiedname>cugraph::detail::thrust_tuple_of_arithmetic_numeric_limits_max</qualifiedname>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" line="89" column="21" bodyfile="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/utilities/thrust_tuple_utils.hpp" bodystart="89" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/centrality/betweenness_centrality_impl.cuh" line="83" column="1"/>
  </compounddef>
</doxygen>
