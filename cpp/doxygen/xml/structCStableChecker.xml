<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structCStableChecker" kind="struct" language="C++" prot="public">
    <compoundname>CStableChecker</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structCStableChecker_1a496de735e06f28778fec5e399d0d36f6" prot="private" static="no" mutable="no">
        <type>thrust::device_vector&lt; int &gt;</type>
        <definition>thrust::device_vector&lt;int&gt; CStableChecker::d_flag_</definition>
        <argsstring></argsstring>
        <name>d_flag_</name>
        <qualifiedname>CStableChecker::d_flag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" line="53" column="25" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structCStableChecker_1a4739c06df8882cc1cf6be0bcccdb6aea" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CStableChecker::CStableChecker</definition>
        <argsstring>(int flag)</argsstring>
        <name>CStableChecker</name>
        <qualifiedname>CStableChecker::CStableChecker</qualifiedname>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" line="35" column="12" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structCStableChecker_1a615dbaded63ba1e4b48db57fe7734c34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStableChecker::is_set</definition>
        <argsstring>(void) const</argsstring>
        <name>is_set</name>
        <qualifiedname>CStableChecker::is_set</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" line="39" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structCStableChecker_1a5a66133488ee9bc4306ff6dfe1ceecbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CStableChecker::set</definition>
        <argsstring>(int flag)</argsstring>
        <name>set</name>
        <qualifiedname>CStableChecker::set</qualifiedname>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" line="45" column="8" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structCStableChecker_1a7a08609cfb0f9392e0650dc4c8882f53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int *</type>
        <definition>int * CStableChecker::get_ptr</definition>
        <argsstring>(void)</argsstring>
        <name>get_ptr</name>
        <qualifiedname>CStableChecker::get_ptr</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" line="50" column="7" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" bodystart="50" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Provide convergence check logic for GEMM SCC via a device pointer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" line="34" column="1" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/components/legacy/scc_matrix.cuh" bodystart="34" bodyend="54"/>
    <listofallmembers>
      <member refid="structCStableChecker_1a4739c06df8882cc1cf6be0bcccdb6aea" prot="public" virt="non-virtual"><scope>CStableChecker</scope><name>CStableChecker</name></member>
      <member refid="structCStableChecker_1a496de735e06f28778fec5e399d0d36f6" prot="private" virt="non-virtual"><scope>CStableChecker</scope><name>d_flag_</name></member>
      <member refid="structCStableChecker_1a7a08609cfb0f9392e0650dc4c8882f53" prot="public" virt="non-virtual"><scope>CStableChecker</scope><name>get_ptr</name></member>
      <member refid="structCStableChecker_1a615dbaded63ba1e4b48db57fe7734c34" prot="public" virt="non-virtual"><scope>CStableChecker</scope><name>is_set</name></member>
      <member refid="structCStableChecker_1a5a66133488ee9bc4306ff6dfe1ceecbe" prot="public" virt="non-virtual"><scope>CStableChecker</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
