<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="graph__functions_8cpp" kind="file" language="C++">
    <compoundname>graph_functions.cpp</compoundname>
    <includes refid="src_2c__api_2graph__functions_8hpp" local="yes">c_api/graph_functions.hpp</includes>
    <includes refid="abstract__functor_8hpp" local="yes">c_api/abstract_functor.hpp</includes>
    <includes refid="src_2c__api_2graph_8hpp" local="yes">c_api/graph.hpp</includes>
    <includes refid="graph__helper_8hpp" local="yes">c_api/graph_helper.hpp</includes>
    <includes refid="resource__handle_8hpp" local="yes">c_api/resource_handle.hpp</includes>
    <includes refid="c__api_2utils_8hpp" local="yes">c_api/utils.hpp</includes>
    <includes refid="graph__functions_8h" local="no">cugraph_c/graph_functions.h</includes>
    <includes refid="algorithms_8hpp" local="no">cugraph/algorithms.hpp</includes>
    <includes refid="shuffle__wrappers_8hpp" local="no">cugraph/detail/shuffle_wrappers.hpp</includes>
    <includes refid="utility__wrappers_8hpp" local="no">cugraph/detail/utility_wrappers.hpp</includes>
    <includes refid="include_2cugraph_2graph__functions_8hpp" local="no">cugraph/graph_functions.hpp</includes>
    <incdepgraph>
      <node id="81">
        <label>cugraph/algorithms.hpp</label>
        <link refid="algorithms_8hpp_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>cugraph/api_helpers.hpp</label>
        <link refid="api__helpers_8hpp_source"/>
      </node>
      <node id="83">
        <label>cugraph/dendrogram.hpp</label>
        <link refid="dendrogram_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>cugraph/detail/shuffle_wrappers.hpp</label>
        <link refid="shuffle__wrappers_8hpp_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>cugraph/detail/utility_wrappers.hpp</label>
        <link refid="utility__wrappers_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cugraph/edge_partition_view.hpp</label>
        <link refid="edge__partition__view_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cugraph/edge_property.hpp</label>
        <link refid="edge__property_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>eidecl_graph.hpp</label>
        <link refid="eidecl__graph_8hpp_source"/>
      </node>
      <node id="19">
        <label>cugraph/graph.hpp</label>
        <link refid="include_2cugraph_2graph_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>cugraph/graph_functions.hpp</label>
        <link refid="include_2cugraph_2graph__functions_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cugraph/graph_view.hpp</label>
        <link refid="graph__view_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>eidecl_graph.hpp</label>
        <link refid="legacy_2eidecl__graph_8hpp_source"/>
      </node>
      <node id="85">
        <label>cugraph/legacy/graph.hpp</label>
        <link refid="include_2cugraph_2legacy_2graph_8hpp_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>cugraph/legacy/internals.hpp</label>
        <link refid="internals_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cugraph/partition_manager.hpp</label>
        <link refid="partition__manager_8hpp_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cugraph/utilities/dataframe_buffer.hpp</label>
        <link refid="dataframe__buffer_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>cugraph/utilities/device_comm.hpp</label>
        <link refid="device__comm_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cugraph/utilities/error.hpp</label>
        <link refid="include_2cugraph_2utilities_2error_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cugraph/utilities/graph_traits.hpp</label>
        <link refid="graph__traits_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>cugraph/utilities/host_scalar_comm.hpp</label>
        <link refid="host__scalar__comm_8hpp_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>cugraph/utilities/packed_bool_utils.hpp</label>
        <link refid="packed__bool__utils_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>cugraph/utilities/shuffle_comm.cuh</label>
        <link refid="shuffle__comm_8cuh_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cugraph/utilities/thrust_tuple_utils.hpp</label>
        <link refid="thrust__tuple__utils_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>cugraph/vertex_partition_view.hpp</label>
        <link refid="vertex__partition__view_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cugraph_c/array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cugraph_c/error.h</label>
        <link refid="error_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cugraph_c/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>cugraph_c/graph_functions.h</label>
        <link refid="graph__functions_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cugraph_c/resource_handle.h</label>
        <link refid="resource__handle_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>c_api/abstract_functor.hpp</label>
        <link refid="abstract__functor_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>c_api/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>c_api/error.hpp</label>
        <link refid="src_2c__api_2error_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>c_api/generic_cascaded_dispatch.hpp</label>
        <link refid="generic__cascaded__dispatch_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>c_api/graph.hpp</label>
        <link refid="src_2c__api_2graph_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>graph_functions.cpp</label>
        <link refid="graph__functions_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>c_api/graph_functions.hpp</label>
        <link refid="src_2c__api_2graph__functions_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>c_api/graph_helper.hpp</label>
        <link refid="graph__helper_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>c_api/resource_handle.hpp</label>
        <link refid="resource__handle_8hpp_source"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>c_api/utils.hpp</label>
        <link refid="c__api_2utils_8hpp_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>algorithm</label>
      </node>
      <node id="29">
        <label>array</label>
      </node>
      <node id="69">
        <label>cassert</label>
      </node>
      <node id="70">
        <label>cstddef</label>
      </node>
      <node id="87">
        <label>cstdint</label>
      </node>
      <node id="49">
        <label>cuda/atomic</label>
      </node>
      <node id="50">
        <label>cuda/functional</label>
      </node>
      <node id="91">
        <label>cugraph-ops/graph/sampling.hpp</label>
      </node>
      <node id="88">
        <label>iostream</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="40">
        <label>numeric</label>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="66">
        <label>raft/core/comms.hpp</label>
      </node>
      <node id="22">
        <label>raft/core/device_span.hpp</label>
      </node>
      <node id="39">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="30">
        <label>raft/core/handle.hpp</label>
      </node>
      <node id="68">
        <label>raft/core/host_span.hpp</label>
      </node>
      <node id="74">
        <label>raft/random/rng_state.hpp</label>
      </node>
      <node id="31">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="9">
        <label>rmm/device_buffer.hpp</label>
      </node>
      <node id="10">
        <label>rmm/device_uvector.hpp</label>
      </node>
      <node id="48">
        <label>rmm/exec_policy.hpp</label>
      </node>
      <node id="84">
        <label>rmm/resource_ref.hpp</label>
      </node>
      <node id="79">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="51">
        <label>thrust/binary_search.h</label>
      </node>
      <node id="52">
        <label>thrust/copy.h</label>
      </node>
      <node id="53">
        <label>thrust/count.h</label>
      </node>
      <node id="43">
        <label>thrust/detail/type_traits/iterator/is_discard_iterator.h</label>
      </node>
      <node id="44">
        <label>thrust/device_ptr.h</label>
      </node>
      <node id="54">
        <label>thrust/distance.h</label>
      </node>
      <node id="55">
        <label>thrust/execution_policy.h</label>
      </node>
      <node id="56">
        <label>thrust/fill.h</label>
      </node>
      <node id="45">
        <label>thrust/iterator/detail/any_assign.h</label>
      </node>
      <node id="46">
        <label>thrust/iterator/detail/normal_iterator.h</label>
      </node>
      <node id="27">
        <label>thrust/iterator/iterator_traits.h</label>
      </node>
      <node id="57">
        <label>thrust/iterator/transform_iterator.h</label>
      </node>
      <node id="32">
        <label>thrust/iterator/zip_iterator.h</label>
      </node>
      <node id="47">
        <label>thrust/memory.h</label>
      </node>
      <node id="35">
        <label>thrust/optional.h</label>
      </node>
      <node id="58">
        <label>thrust/partition.h</label>
      </node>
      <node id="59">
        <label>thrust/reduce.h</label>
      </node>
      <node id="60">
        <label>thrust/remove.h</label>
      </node>
      <node id="61">
        <label>thrust/scatter.h</label>
      </node>
      <node id="94">
        <label>thrust/sequence.h</label>
      </node>
      <node id="62">
        <label>thrust/sort.h</label>
      </node>
      <node id="63">
        <label>thrust/tabulate.h</label>
      </node>
      <node id="28">
        <label>thrust/tuple.h</label>
      </node>
      <node id="71">
        <label>tuple</label>
      </node>
      <node id="15">
        <label>type_traits</label>
      </node>
      <node id="86">
        <label>unistd.h</label>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="65">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="graph__functions_8cpp_1a77cd0870c3f1dc24e80b870cb6b66608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cugraph_error_code_t</type>
        <definition>cugraph_error_code_t cugraph_create_vertex_pairs</definition>
        <argsstring>(const cugraph_resource_handle_t *handle, cugraph_graph_t *graph, const cugraph_type_erased_device_array_view_t *first, const cugraph_type_erased_device_array_view_t *second, cugraph_vertex_pairs_t **vertex_pairs, cugraph_error_t **error)</argsstring>
        <name>cugraph_create_vertex_pairs</name>
        <param>
          <type>const <ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref> *</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const <ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const <ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
          <declname>second</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref> **</type>
          <declname>vertex_pairs</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__error__" kindref="compound">cugraph_error_t</ref> **</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Create vertex_pairs. </para>
        </briefdescription>
        <detaileddescription>
<para>Input data will be shuffled to the proper GPU and stored in the output vertex_pairs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle for accessing resources </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>Graph to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">first</parametername>
</parameternamelist>
<parameterdescription>
<para>Type erased array of vertex ids for the first vertex of the pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">second</parametername>
</parameternamelist>
<parameterdescription>
<para>Type erased array of vertex ids for the second vertex of the pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vertex_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to vertex_pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">error</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an error object storing details of any error. Will be populated if error code is not CUGRAPH_SUCCESS </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" line="257" column="33" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" bodystart="257" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="graph__functions_8cpp_1afbd9b59971653a41a65500a29878363b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
        <definition>cugraph_type_erased_device_array_view_t * cugraph_vertex_pairs_get_first</definition>
        <argsstring>(cugraph_vertex_pairs_t *vertex_pairs)</argsstring>
        <name>cugraph_vertex_pairs_get_first</name>
        <param>
          <type><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref> *</type>
          <declname>vertex_pairs</declname>
        </param>
        <briefdescription>
<para>Get the first vertex id array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vertex_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>A vertex_pairs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type erased array of vertex ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" line="286" column="52" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="graph__functions_8cpp_1a534e977b8955a0abc583accc372cd7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
        <definition>cugraph_type_erased_device_array_view_t * cugraph_vertex_pairs_get_second</definition>
        <argsstring>(cugraph_vertex_pairs_t *vertex_pairs)</argsstring>
        <name>cugraph_vertex_pairs_get_second</name>
        <param>
          <type><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref> *</type>
          <declname>vertex_pairs</declname>
        </param>
        <briefdescription>
<para>Get the second vertex id array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vertex_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>A vertex_pairs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type erased array of vertex ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" line="294" column="52" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="graph__functions_8cpp_1ae2c0c0e1478f4eb4926eb6fc4b4077f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cugraph_vertex_pairs_free</definition>
        <argsstring>(cugraph_vertex_pairs_t *vertex_pairs)</argsstring>
        <name>cugraph_vertex_pairs_free</name>
        <param>
          <type><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref> *</type>
          <declname>vertex_pairs</declname>
        </param>
        <briefdescription>
<para>Free vertex pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vertex_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex pairs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" line="302" column="17" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="graph__functions_8cpp_1a3da7bcacd081a8fc27d6fd8ec296b864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cugraph_error_code_t</type>
        <definition>cugraph_error_code_t cugraph_two_hop_neighbors</definition>
        <argsstring>(const cugraph_resource_handle_t *handle, cugraph_graph_t *graph, const cugraph_type_erased_device_array_view_t *start_vertices, bool_t do_expensive_check, cugraph_vertex_pairs_t **result, cugraph_error_t **error)</argsstring>
        <name>cugraph_two_hop_neighbors</name>
        <param>
          <type>const <ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref> *</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const <ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref> *</type>
          <declname>start_vertices</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>do_expensive_check</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref> **</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__error__" kindref="compound">cugraph_error_t</ref> **</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Find all 2-hop neighbors in the graph. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle for accessing resources </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to graph </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional type erased array of starting vertices If NULL use all, if specified compute two-hop neighbors for these starting vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">do_expensive_check</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to run expensive checks for input arguments (if set to true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to resulting vertex pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">error</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an error object storing details of any error. Will be populated if error code is not CUGRAPH_SUCCESS </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" line="310" column="33" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" bodystart="310" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="graph__functions_8cpp_1aeb16b6680d2e0cfcde57e033b6e79f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cugraph_error_code_t</type>
        <definition>cugraph_error_code_t cugraph_count_multi_edges</definition>
        <argsstring>(const cugraph_resource_handle_t *handle, cugraph_graph_t *graph, bool_t do_expensive_check, size_t *result, cugraph_error_t **error)</argsstring>
        <name>cugraph_count_multi_edges</name>
        <param>
          <type>const <ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref> *</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>do_expensive_check</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structcugraph__error__" kindref="compound">cugraph_error_t</ref> **</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Count multi_edges. </para>
        </briefdescription>
        <detaileddescription>
<para>Count the number of multi-edges in the graph</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle for accessing resources. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to graph </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">do_expensive_check</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to run expensive checks for input arguments (if set to true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the count of multi-edges </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">error</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an error object storing details of any error. Will be populated if error code is not CUGRAPH_SUCCESS </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" line="323" column="33" bodyfile="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp" bodystart="323" bodyend="332"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/graph_functions.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/abstract_functor.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/graph.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/graph_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/resource_handle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;c_api/utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph_c/graph_functions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/algorithms.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/detail/shuffle_wrappers.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/detail/utility_wrappers.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/graph_functions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">create_vertex_pairs_functor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1abstract__functor" kindref="compound">cugraph::c_api::abstract_functor</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle_;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__graph__t" kindref="compound">cugraph::c_api::cugraph_graph_t</ref>*<sp/>graph_;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__view__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_view_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>first_;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__view__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_view_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>second_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>*<sp/>result_{};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>create_vertex_pairs_functor(<ref refid="structcugraph__resource__handle__" kindref="compound">::cugraph_resource_handle_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>handle,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__graph__t" kindref="compound">::cugraph_graph_t</ref>*<sp/>graph,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">::cugraph_type_erased_device_array_view_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>first,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">::cugraph_type_erased_device_array_view_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>second)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>abstract_functor(),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle_(*reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref><sp/>const*&gt;(handle)-&gt;handle_),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph_(reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref>*&gt;(graph)),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref><sp/>const*&gt;(first)),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>second_(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref><sp/>const*&gt;(second))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_type_type_t,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_transposed,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="structcugraph_1_1is__candidate" kindref="compound">cugraph::is_candidate&lt;vertex_t, edge_t, weight_t&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unsupported();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;<sp/>first_copy(first_-&gt;size_,<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;<sp/>second_copy(second_-&gt;size_,<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raft::copy(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_copy.data(),<sp/>first_-&gt;as_type&lt;vertex_t&gt;(),<sp/>first_-&gt;size_,<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raft::copy(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_copy.data(),<sp/>second_-&gt;as_type&lt;vertex_t&gt;(),<sp/>second_-&gt;size_,<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(multi_gpu)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(first_copy,<sp/>second_copy,<sp/>std::ignore,<sp/>std::ignore,<sp/>std::ignore)<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::detail::shuffle_ext_vertex_pairs_with_values_to_local_gpu_by_edge_partitioning&lt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_t,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_type_type_t&gt;(handle_,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(first_copy),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(second_copy),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::nullopt,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::nullopt,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::nullopt);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_t</ref>(first_copy,<sp/>graph_-&gt;vertex_type_),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_t</ref>(second_copy,<sp/>graph_-&gt;vertex_type_)};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">two_hop_neighbors_functor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1abstract__functor" kindref="compound">cugraph::c_api::abstract_functor</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle_{};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__graph__t" kindref="compound">cugraph::c_api::cugraph_graph_t</ref>*<sp/>graph_{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__view__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_view_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>start_vertices_{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>*<sp/>result_{};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check_{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>two_hop_neighbors_functor(<ref refid="structcugraph__resource__handle__" kindref="compound">::cugraph_resource_handle_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>handle,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__graph__t" kindref="compound">::cugraph_graph_t</ref>*<sp/>graph,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">::cugraph_type_erased_device_array_view_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>start_vertices,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>abstract_functor(),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle_(*reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref><sp/>const*&gt;(handle)-&gt;handle_),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph_(reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref>*&gt;(graph)),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices_(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref><sp/>const*&gt;(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices)),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_(do_expensive_check)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_type_type_t,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_transposed,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="structcugraph_1_1is__candidate" kindref="compound">cugraph::is_candidate&lt;vertex_t, edge_t, weight_t&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unsupported();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k_hop_nbrs<sp/>expects<sp/>store_transposed<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(store_transposed)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_code_<sp/>=<sp/>cugraph::c_api::</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transpose_storage&lt;vertex_t,<sp/>edge_t,<sp/>weight_t,<sp/>store_transposed,<sp/>multi_gpu&gt;(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_,<sp/>graph_,<sp/>error_.get());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_code_<sp/>!=<sp/>CUGRAPH_SUCCESS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph<sp/>=</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(graph_-&gt;graph_);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_view<sp/>=<sp/>graph-&gt;view();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>number_map<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">rmm::device_uvector&lt;vertex_t&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(graph_-&gt;number_map_);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;<sp/>start_vertices(0,<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_vertices_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.resize(start_vertices_-&gt;size_,<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::copy(start_vertices.data(),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices_-&gt;as_type&lt;vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;(),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices_-&gt;size_,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(multi_gpu)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices<sp/>=</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::detail::shuffle_ext_vertices_to_local_gpu_by_vertex_partitioning(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_,<sp/>std::move(start_vertices));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::renumber_ext_vertices&lt;vertex_t,<sp/>multi_gpu&gt;(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.data(),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.size(),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_map-&gt;data(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view.local_vertex_partition_range_first(),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view.local_vertex_partition_range_last(),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.resize(graph_view.local_vertex_partition_range_size(),<sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::detail::sequence_fill(handle_.get_stream(),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.data(),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.size(),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view.local_vertex_partition_range_first());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[offsets,<sp/>dst]<sp/>=<sp/>cugraph::k_hop_nbrs(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;{start_vertices.data(),<sp/>start_vertices.size()},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">{2},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>src<sp/>=<sp/>cugraph::c_api::expand_sparse_offsets(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;size_t<sp/>const&gt;{offsets.data(),<sp/>offsets.size()},</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t{0},</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_.get_stream());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>ids<sp/>back<sp/>to<sp/>srcs:<sp/><sp/>src[i]<sp/>=<sp/>start_vertices[src[i]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::unrenumber_local_int_vertices(handle_,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.data(),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.size(),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_vertices.data(),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t{0},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view.local_vertex_partition_range_size(),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::unrenumber_int_vertices&lt;vertex_t,<sp/>multi_gpu&gt;(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.data(),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.size(),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_map-&gt;data(),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view.vertex_partition_range_lasts(),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cugraph::unrenumber_int_vertices&lt;vertex_t,<sp/>multi_gpu&gt;(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.data(),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.size(),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_map-&gt;data(),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view.vertex_partition_range_lasts(),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_t</ref>(src,<sp/>graph_-&gt;vertex_type_),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_t</ref>(dst,<sp/>graph_-&gt;vertex_type_)};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">count_multi_edges_functor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structcugraph_1_1c__api_1_1abstract__functor" kindref="compound">cugraph::c_api::abstract_functor</ref><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle_{};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="structcugraph_1_1c__api_1_1cugraph__graph__t" kindref="compound">cugraph::c_api::cugraph_graph_t</ref>*<sp/>graph_{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result_{};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check_{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>count_multi_edges_functor(<ref refid="structcugraph__resource__handle__" kindref="compound">::cugraph_resource_handle_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>handle,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__graph__t" kindref="compound">::cugraph_graph_t</ref>*<sp/>graph,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>abstract_functor(),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle_(*reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref><sp/>const*&gt;(handle)-&gt;handle_),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph_(reinterpret_cast&lt;cugraph::c_api::<ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref>*&gt;(graph)),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>do_expensive_check_(do_expensive_check)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_type_type_t,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_transposed,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="structcugraph_1_1is__candidate" kindref="compound">cugraph::is_candidate&lt;vertex_t, edge_t, weight_t&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unsupported();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph<sp/>=</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classcugraph_1_1graph__t" kindref="compound">cugraph::graph_t&lt;vertex_t, edge_t, store_transposed, multi_gpu&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_-&gt;graph_);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_view<sp/>=<sp/>graph-&gt;view();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(graph_view.count_multi_edges(handle_));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>cugraph_error_code_t<sp/>cugraph_create_vertex_pairs(</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref>*<sp/>handle,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref>*<sp/>graph,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>first,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>second,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref>**<sp/>vertex_pairs,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__error__" kindref="compound">cugraph_error_t</ref>**<sp/>error)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>CAPI_EXPECTS(</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__graph__t" kindref="compound">cugraph::c_api::cugraph_graph_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(graph)-&gt;vertex_type_<sp/>==</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__view__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_view_t</ref><sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(first)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;type_,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>CUGRAPH_INVALID_INPUT,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vertex<sp/>type<sp/>of<sp/>graph<sp/>and<sp/>first<sp/>must<sp/>match&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>*error);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>CAPI_EXPECTS(</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__graph__t" kindref="compound">cugraph::c_api::cugraph_graph_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(graph)-&gt;vertex_type_<sp/>==</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__type__erased__device__array__view__t" kindref="compound">cugraph::c_api::cugraph_type_erased_device_array_view_t</ref><sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(second)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;type_,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>CUGRAPH_INVALID_INPUT,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vertex<sp/>type<sp/>of<sp/>graph<sp/>and<sp/>second<sp/>must<sp/>match&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>*error);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>create_vertex_pairs_functor<sp/>functor(handle,<sp/>graph,<sp/>first,<sp/>second);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cugraph::c_api::run_algorithm(graph,<sp/>functor,<sp/>vertex_pairs,<sp/>error);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>cugraph_vertex_pairs_get_first(</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref>*<sp/>vertex_pairs)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vertex_pairs);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_pointer-&gt;first_-&gt;view());</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>cugraph_vertex_pairs_get_second(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref>*<sp/>vertex_pairs)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vertex_pairs);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_pointer-&gt;second_-&gt;view());</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cugraph_vertex_pairs_free(<ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref>*<sp/>vertex_pairs)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal_pointer<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structcugraph_1_1c__api_1_1cugraph__vertex__pairs__t" kindref="compound">cugraph::c_api::cugraph_vertex_pairs_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vertex_pairs);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer-&gt;first_;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer-&gt;second_;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>internal_pointer;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>cugraph_error_code_t<sp/>cugraph_two_hop_neighbors(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref>*<sp/>handle,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref>*<sp/>graph,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcugraph__type__erased__device__array__view__t" kindref="compound">cugraph_type_erased_device_array_view_t</ref>*<sp/>start_vertices,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>bool_t<sp/>do_expensive_check,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__vertex__pairs__t" kindref="compound">cugraph_vertex_pairs_t</ref>**<sp/>result,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="structcugraph__error__" kindref="compound">cugraph_error_t</ref>**<sp/>error)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>two_hop_neighbors_functor<sp/>functor(handle,<sp/>graph,<sp/>start_vertices,<sp/>do_expensive_check);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cugraph::c_api::run_algorithm(graph,<sp/>functor,<sp/>result,<sp/>error);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>cugraph_error_code_t<sp/>cugraph_count_multi_edges(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcugraph__resource__handle__" kindref="compound">cugraph_resource_handle_t</ref>*<sp/>handle,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__graph__t" kindref="compound">cugraph_graph_t</ref>*<sp/>graph,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>do_expensive_check,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>result,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcugraph__error__" kindref="compound">cugraph_error_t</ref>**<sp/>error)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>count_multi_edges_functor<sp/>functor(handle,<sp/>graph,<sp/>do_expensive_check);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cugraph::c_api::run_algorithm(graph,<sp/>functor,<sp/>result,<sp/>error);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/c_api/graph_functions.cpp"/>
  </compounddef>
</doxygen>
