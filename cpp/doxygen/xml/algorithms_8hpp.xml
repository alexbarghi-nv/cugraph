<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="algorithms_8hpp" kind="file" language="C++">
    <compoundname>algorithms.hpp</compoundname>
    <includes refid="api__helpers_8hpp" local="no">cugraph/api_helpers.hpp</includes>
    <includes refid="dendrogram_8hpp" local="no">cugraph/dendrogram.hpp</includes>
    <includes refid="edge__property_8hpp" local="no">cugraph/edge_property.hpp</includes>
    <includes refid="include_2cugraph_2graph_8hpp" local="no">cugraph/graph.hpp</includes>
    <includes refid="graph__view_8hpp" local="no">cugraph/graph_view.hpp</includes>
    <includes refid="include_2cugraph_2legacy_2graph_8hpp" local="no">cugraph/legacy/graph.hpp</includes>
    <includes refid="internals_8hpp" local="no">cugraph/legacy/internals.hpp</includes>
    <includes local="no">rmm/resource_ref.hpp</includes>
    <includes local="no">cugraph-ops/graph/sampling.hpp</includes>
    <includes local="no">raft/core/device_span.hpp</includes>
    <includes local="no">raft/core/handle.hpp</includes>
    <includes local="no">raft/random/rng_state.hpp</includes>
    <includes local="no">optional</includes>
    <includes local="no">tuple</includes>
    <includedby refid="allgather_8cpp" local="no">allgather.cpp</includedby>
    <includedby refid="approx__weighted__matching__impl_8cuh" local="no">approx_weighted_matching_impl.cuh</includedby>
    <includedby refid="betweenness__centrality_8cpp" local="no">betweenness_centrality.cpp</includedby>
    <includedby refid="betweenness__centrality__impl_8cuh" local="no">betweenness_centrality_impl.cuh</includedby>
    <includedby refid="bfs_8cpp" local="no">bfs.cpp</includedby>
    <includedby refid="bfs__impl_8cuh" local="no">bfs_impl.cuh</includedby>
    <includedby refid="connectivity_8cu" local="no">connectivity.cu</includedby>
    <includedby refid="core__number_8cpp" local="no">core_number.cpp</includedby>
    <includedby refid="core__number__impl_8cuh" local="no">core_number_impl.cuh</includedby>
    <includedby refid="degrees_8cu" local="no">degrees.cu</includedby>
    <includedby refid="ecg_8cpp" local="no">ecg.cpp</includedby>
    <includedby refid="ecg_8cu" local="no">ecg.cu</includedby>
    <includedby refid="ecg__impl_8cuh" local="no">ecg_impl.cuh</includedby>
    <includedby refid="egonet__impl_8cuh" local="no">egonet_impl.cuh</includedby>
    <includedby refid="eigenvector__centrality_8cpp" local="no">eigenvector_centrality.cpp</includedby>
    <includedby refid="eigenvector__centrality__impl_8cuh" local="no">eigenvector_centrality_impl.cuh</includedby>
    <includedby refid="extract__bfs__paths__impl_8cuh" local="no">extract_bfs_paths_impl.cuh</includedby>
    <includedby refid="extract__ego_8cpp" local="no">extract_ego.cpp</includedby>
    <includedby refid="extract__paths_8cpp" local="no">extract_paths.cpp</includedby>
    <includedby refid="graph__functions_8cpp" local="no">graph_functions.cpp</includedby>
    <includedby refid="hits_8cpp" local="no">hits.cpp</includedby>
    <includedby refid="hits__impl_8cuh" local="no">hits_impl.cuh</includedby>
    <includedby refid="induced__subgraph_8cpp" local="no">induced_subgraph.cpp</includedby>
    <includedby refid="jaccard__impl_8cuh" local="no">jaccard_impl.cuh</includedby>
    <includedby refid="k__core_8cpp" local="no">k_core.cpp</includedby>
    <includedby refid="k__core__impl_8cuh" local="no">k_core_impl.cuh</includedby>
    <includedby refid="k__hop__nbrs__impl_8cuh" local="no">k_hop_nbrs_impl.cuh</includedby>
    <includedby refid="k__truss_8cpp" local="no">k_truss.cpp</includedby>
    <includedby refid="k__truss__impl_8cuh" local="no">k_truss_impl.cuh</includedby>
    <includedby refid="katz_8cpp" local="no">katz.cpp</includedby>
    <includedby refid="katz__centrality__impl_8cuh" local="no">katz_centrality_impl.cuh</includedby>
    <includedby refid="legacy__ecg_8cpp" local="no">legacy_ecg.cpp</includedby>
    <includedby refid="legacy__spectral_8cpp" local="no">legacy_spectral.cpp</includedby>
    <includedby refid="leiden_8cpp" local="no">leiden.cpp</includedby>
    <includedby refid="louvain_8cpp" local="no">louvain.cpp</includedby>
    <includedby refid="mis__impl_8cuh" local="no">mis_impl.cuh</includedby>
    <includedby refid="mst_8cu" local="no">mst.cu</includedby>
    <includedby refid="neighborhood_8cu" local="no">neighborhood.cu</includedby>
    <includedby refid="od__shortest__distances__impl_8cuh" local="no">od_shortest_distances_impl.cuh</includedby>
    <includedby refid="overlap__impl_8cuh" local="no">overlap_impl.cuh</includedby>
    <includedby refid="pagerank_8cpp" local="no">pagerank.cpp</includedby>
    <includedby refid="pagerank__impl_8cuh" local="no">pagerank_impl.cuh</includedby>
    <includedby refid="prepare__next__frontier__impl_8cuh" local="no">prepare_next_frontier_impl.cuh</includedby>
    <includedby refid="random__walks_8cpp" local="no">random_walks.cpp</includedby>
    <includedby refid="random__walks_8cuh" local="no">random_walks.cuh</includedby>
    <includedby refid="random__walks__impl_8cuh" local="no">random_walks_impl.cuh</includedby>
    <includedby refid="random__walks__mg_8cu" local="no">random_walks_mg.cu</includedby>
    <includedby refid="random__walks__sg_8cu" local="no">random_walks_sg.cu</includedby>
    <includedby refid="sampling__utils_8hpp" local="no">sampling_utils.hpp</includedby>
    <includedby refid="similarity_8cpp" local="no">similarity.cpp</includedby>
    <includedby refid="sorensen__impl_8cuh" local="no">sorensen_impl.cuh</includedby>
    <includedby refid="spectral__clustering_8cu" local="no">spectral_clustering.cu</includedby>
    <includedby refid="sssp_8cpp" local="no">sssp.cpp</includedby>
    <includedby refid="sssp__impl_8cuh" local="no">sssp_impl.cuh</includedby>
    <includedby refid="strongly__connected__components_8cpp" local="no">strongly_connected_components.cpp</includedby>
    <includedby refid="triangle__count_8cpp" local="no">triangle_count.cpp</includedby>
    <includedby refid="triangle__count__impl_8cuh" local="no">triangle_count_impl.cuh</includedby>
    <includedby refid="uniform__neighbor__sampling_8cpp" local="no">uniform_neighbor_sampling.cpp</includedby>
    <includedby refid="uniform__neighbor__sampling__mg_8cpp" local="no">uniform_neighbor_sampling_mg.cpp</includedby>
    <includedby refid="uniform__neighbor__sampling__sg_8cpp" local="no">uniform_neighbor_sampling_sg.cpp</includedby>
    <includedby refid="vertex__coloring__impl_8cuh" local="no">vertex_coloring_impl.cuh</includedby>
    <includedby refid="weakly__connected__components_8cpp" local="no">weakly_connected_components.cpp</includedby>
    <includedby refid="weakly__connected__components__impl_8cuh" local="no">weakly_connected_components_impl.cuh</includedby>
    <incdepgraph>
      <node id="1">
        <label>algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cugraph/api_helpers.hpp</label>
        <link refid="api__helpers_8hpp_source"/>
      </node>
      <node id="3">
        <label>cugraph/dendrogram.hpp</label>
        <link refid="dendrogram_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cugraph/edge_partition_view.hpp</label>
        <link refid="edge__partition__view_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cugraph/edge_property.hpp</label>
        <link refid="edge__property_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>eidecl_graph.hpp</label>
        <link refid="eidecl__graph_8hpp_source"/>
      </node>
      <node id="22">
        <label>cugraph/graph.hpp</label>
        <link refid="include_2cugraph_2graph_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cugraph/graph_view.hpp</label>
        <link refid="graph__view_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>eidecl_graph.hpp</label>
        <link refid="legacy_2eidecl__graph_8hpp_source"/>
      </node>
      <node id="63">
        <label>cugraph/legacy/graph.hpp</label>
        <link refid="include_2cugraph_2legacy_2graph_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>cugraph/legacy/internals.hpp</label>
        <link refid="internals_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cugraph/partition_manager.hpp</label>
        <link refid="partition__manager_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cugraph/utilities/dataframe_buffer.hpp</label>
        <link refid="dataframe__buffer_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>cugraph/utilities/device_comm.hpp</label>
        <link refid="device__comm_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>cugraph/utilities/error.hpp</label>
        <link refid="include_2cugraph_2utilities_2error_8hpp_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cugraph/utilities/host_scalar_comm.hpp</label>
        <link refid="host__scalar__comm_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cugraph/utilities/packed_bool_utils.hpp</label>
        <link refid="packed__bool__utils_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cugraph/utilities/shuffle_comm.cuh</label>
        <link refid="shuffle__comm_8cuh_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cugraph/utilities/thrust_tuple_utils.hpp</label>
        <link refid="thrust__tuple__utils_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>cugraph/vertex_partition_view.hpp</label>
        <link refid="vertex__partition__view_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="59">
        <label>cassert</label>
      </node>
      <node id="60">
        <label>cstddef</label>
      </node>
      <node id="66">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>cuda/atomic</label>
      </node>
      <node id="40">
        <label>cuda/functional</label>
      </node>
      <node id="70">
        <label>cugraph-ops/graph/sampling.hpp</label>
      </node>
      <node id="67">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="30">
        <label>numeric</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="55">
        <label>raft/core/comms.hpp</label>
      </node>
      <node id="25">
        <label>raft/core/device_span.hpp</label>
      </node>
      <node id="29">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="15">
        <label>raft/core/handle.hpp</label>
      </node>
      <node id="58">
        <label>raft/core/host_span.hpp</label>
      </node>
      <node id="71">
        <label>raft/random/rng_state.hpp</label>
      </node>
      <node id="16">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="64">
        <label>rmm/device_buffer.hpp</label>
      </node>
      <node id="4">
        <label>rmm/device_uvector.hpp</label>
      </node>
      <node id="38">
        <label>rmm/exec_policy.hpp</label>
      </node>
      <node id="5">
        <label>rmm/resource_ref.hpp</label>
      </node>
      <node id="56">
        <label>string</label>
      </node>
      <node id="41">
        <label>thrust/binary_search.h</label>
      </node>
      <node id="42">
        <label>thrust/copy.h</label>
      </node>
      <node id="43">
        <label>thrust/count.h</label>
      </node>
      <node id="33">
        <label>thrust/detail/type_traits/iterator/is_discard_iterator.h</label>
      </node>
      <node id="34">
        <label>thrust/device_ptr.h</label>
      </node>
      <node id="44">
        <label>thrust/distance.h</label>
      </node>
      <node id="45">
        <label>thrust/execution_policy.h</label>
      </node>
      <node id="46">
        <label>thrust/fill.h</label>
      </node>
      <node id="35">
        <label>thrust/iterator/detail/any_assign.h</label>
      </node>
      <node id="36">
        <label>thrust/iterator/detail/normal_iterator.h</label>
      </node>
      <node id="11">
        <label>thrust/iterator/iterator_traits.h</label>
      </node>
      <node id="47">
        <label>thrust/iterator/transform_iterator.h</label>
      </node>
      <node id="17">
        <label>thrust/iterator/zip_iterator.h</label>
      </node>
      <node id="37">
        <label>thrust/memory.h</label>
      </node>
      <node id="20">
        <label>thrust/optional.h</label>
      </node>
      <node id="48">
        <label>thrust/partition.h</label>
      </node>
      <node id="49">
        <label>thrust/reduce.h</label>
      </node>
      <node id="50">
        <label>thrust/remove.h</label>
      </node>
      <node id="51">
        <label>thrust/scatter.h</label>
      </node>
      <node id="52">
        <label>thrust/sort.h</label>
      </node>
      <node id="53">
        <label>thrust/tabulate.h</label>
      </node>
      <node id="12">
        <label>thrust/tuple.h</label>
      </node>
      <node id="61">
        <label>tuple</label>
      </node>
      <node id="14">
        <label>type_traits</label>
      </node>
      <node id="65">
        <label>unistd.h</label>
      </node>
      <node id="19">
        <label>utility</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>betweenness_centrality_impl.cuh</label>
        <link refid="betweenness__centrality__impl_8cuh_source"/>
      </node>
      <node id="8">
        <label>eigenvector_centrality_impl.cuh</label>
        <link refid="eigenvector__centrality__impl_8cuh_source"/>
      </node>
      <node id="15">
        <label>katz_centrality_impl.cuh</label>
        <link refid="katz__centrality__impl_8cuh_source"/>
      </node>
      <node id="2">
        <label>approx_weighted_matching_impl.cuh</label>
        <link refid="approx__weighted__matching__impl_8cuh_source"/>
      </node>
      <node id="6">
        <label>ecg_impl.cuh</label>
        <link refid="ecg__impl_8cuh_source"/>
      </node>
      <node id="7">
        <label>egonet_impl.cuh</label>
        <link refid="egonet__impl_8cuh_source"/>
      </node>
      <node id="14">
        <label>k_truss_impl.cuh</label>
        <link refid="k__truss__impl_8cuh_source"/>
      </node>
      <node id="27">
        <label>triangle_count_impl.cuh</label>
        <link refid="triangle__count__impl_8cuh_source"/>
      </node>
      <node id="16">
        <label>mis_impl.cuh</label>
        <link refid="mis__impl_8cuh_source"/>
      </node>
      <node id="28">
        <label>vertex_coloring_impl.cuh</label>
        <link refid="vertex__coloring__impl_8cuh_source"/>
      </node>
      <node id="29">
        <label>weakly_connected_components_impl.cuh</label>
        <link refid="weakly__connected__components__impl_8cuh_source"/>
      </node>
      <node id="5">
        <label>core_number_impl.cuh</label>
        <link refid="core__number__impl_8cuh_source"/>
      </node>
      <node id="12">
        <label>k_core_impl.cuh</label>
        <link refid="k__core__impl_8cuh_source"/>
      </node>
      <node id="10">
        <label>hits_impl.cuh</label>
        <link refid="hits__impl_8cuh_source"/>
      </node>
      <node id="19">
        <label>pagerank_impl.cuh</label>
        <link refid="pagerank__impl_8cuh_source"/>
      </node>
      <node id="11">
        <label>jaccard_impl.cuh</label>
        <link refid="jaccard__impl_8cuh_source"/>
      </node>
      <node id="18">
        <label>overlap_impl.cuh</label>
        <link refid="overlap__impl_8cuh_source"/>
      </node>
      <node id="25">
        <label>sorensen_impl.cuh</label>
        <link refid="sorensen__impl_8cuh_source"/>
      </node>
      <node id="20">
        <label>prepare_next_frontier_impl.cuh</label>
        <link refid="prepare__next__frontier__impl_8cuh_source"/>
      </node>
      <node id="23">
        <label>sampling_utils.hpp</label>
        <link refid="sampling__utils_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>random_walks.cuh</label>
        <link refid="random__walks_8cuh_source"/>
      </node>
      <node id="22">
        <label>random_walks_impl.cuh</label>
        <link refid="random__walks__impl_8cuh_source"/>
      </node>
      <node id="24">
        <label>uniform_neighbor_sampling_impl.hpp</label>
        <link refid="uniform__neighbor__sampling__impl_8hpp_source"/>
      </node>
      <node id="4">
        <label>bfs_impl.cuh</label>
        <link refid="bfs__impl_8cuh_source"/>
      </node>
      <node id="9">
        <label>extract_bfs_paths_impl.cuh</label>
        <link refid="extract__bfs__paths__impl_8cuh_source"/>
      </node>
      <node id="13">
        <label>k_hop_nbrs_impl.cuh</label>
        <link refid="k__hop__nbrs__impl_8cuh_source"/>
      </node>
      <node id="17">
        <label>od_shortest_distances_impl.cuh</label>
        <link refid="od__shortest__distances__impl_8cuh_source"/>
      </node>
      <node id="26">
        <label>sssp_impl.cuh</label>
        <link refid="sssp__impl_8cuh_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcugraph_1_1centrality__algorithm__metadata__t" prot="public">cugraph::centrality_algorithm_metadata_t</innerclass>
    <innernamespace refid="namespacecugraph">cugraph</innernamespace>
    <innernamespace refid="namespacecugraph_1_1subgraph">cugraph::subgraph</innernamespace>
    <innernamespace refid="namespacecugraph_1_1ext__raft">cugraph::ext_raft</innernamespace>
    <innernamespace refid="namespacecugraph_1_1dense">cugraph::dense</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/api_helpers.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/dendrogram.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/edge_property.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/graph.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/graph_view.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/legacy/graph.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/legacy/internals.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rmm/resource_ref.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_CUGRAPH_OPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph-ops/graph/sampling.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/core/device_span.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/core/handle.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/random/rng_state.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cugraph<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jaccard(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,<sp/>WT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>weights,<sp/>WT*<sp/>result);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jaccard_list(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>weights,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ET<sp/>num_pairs,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>first,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>second,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT*<sp/>result);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>overlap(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,<sp/>WT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>weights,<sp/>WT*<sp/>result);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>overlap_list(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>weights,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ET<sp/>num_pairs,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>first,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>second,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT*<sp/>result);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>force_atlas2(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCOOView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pos,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_iter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>500,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x_start<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>y_start<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outbound_attraction_distribution<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lin_log_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prevent_overlapping<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>edge_weight_influence<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter_tolerance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>barnes_hut_optimize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>barnes_hut_theta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.5,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaling_ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2.0,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>strong_gravity_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gravity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internals::GraphBasedDimRedCallback*<sp/>callback<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result_t&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>betweenness_centrality(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::handle_t&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCSRView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t*<sp/>result,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalized<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>endpoints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>weight<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>k<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>vertices<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result_t&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>edge_betweenness_centrality(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::handle_t&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCSRView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t*<sp/>result,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalized<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>weight<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>k<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>vertices<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">rmm::device_uvector&lt;weight_t&gt;<sp/>betweenness_centrality(</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::handle_t&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>std::optional&lt;raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertices,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>normalized<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>include_endpoints<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">edge_property_t&lt;graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;,<sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">edge_betweenness_centrality(</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::handle_t&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>std::optional&lt;raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertices,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalized<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>cugraph_cc_t<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>CUGRAPH_STRONG,<sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>NUM_CONNECTIVITY_TYPES</highlight></codeline>
<codeline lineno="396"><highlight class="normal">};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>connected_components(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cugraph_cc_t<sp/>connectivity_type,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT*<sp/>labels);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">weight_t<sp/>hungarian(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCOOView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>num_workers,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>workers,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>assignments);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">weight_t<sp/>hungarian(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCOOView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>num_workers,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>workers,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>assignments,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/>epsilon);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">std::pair&lt;size_t,<sp/>weight_t&gt;<sp/>louvain(</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>std::optional&lt;std::reference_wrapper&lt;raft::random::RngState&gt;&gt;<sp/>rng_state,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>vertex_t*<sp/>clustering,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_level<sp/><sp/><sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>weight_t<sp/>threshold<sp/><sp/>=<sp/>weight_t{1e-7},</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>weight_t<sp/>resolution<sp/>=<sp/>weight_t{1});</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">std::pair&lt;size_t,<sp/>weight_t&gt;<sp/>louvain(</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>vertex_t*<sp/>clustering,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_level<sp/><sp/><sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>weight_t<sp/>resolution<sp/>=<sp/>weight_t{1});</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">std::pair&lt;std::unique_ptr&lt;Dendrogram&lt;vertex_t&gt;&gt;,<sp/>weight_t&gt;<sp/>louvain(</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>std::optional&lt;std::reference_wrapper&lt;raft::random::RngState&gt;&gt;<sp/>rng_state,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_level<sp/><sp/><sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>weight_t<sp/>threshold<sp/><sp/>=<sp/>weight_t{1e-7},</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>weight_t<sp/>resolution<sp/>=<sp/>weight_t{1});</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>graph_view_t&gt;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flatten_dendrogram(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dendrogram&lt;typename<sp/>graph_view_t::vertex_type&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dendrogram,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>graph_view_t::vertex_type*<sp/>clustering);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">std::pair&lt;std::unique_ptr&lt;Dendrogram&lt;vertex_t&gt;&gt;,<sp/>weight_t&gt;<sp/>leiden(</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_level<sp/><sp/><sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>weight_t<sp/>resolution<sp/>=<sp/>weight_t{1},</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>weight_t<sp/>theta<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>weight_t{1});</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">std::pair&lt;size_t,<sp/>weight_t&gt;<sp/>leiden(</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>vertex_t*<sp/>clustering,<sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Use<sp/>(device_)span<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_level<sp/><sp/><sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>weight_t<sp/>resolution<sp/>=<sp/>weight_t{1},</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>weight_t<sp/>theta<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>weight_t{1});</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ecg(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCSRView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/>min_weight,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>ensemble_size,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>clustering);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>size_t,<sp/>weight_t&gt;<sp/>ecg(</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>weight_t<sp/>min_weight,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ensemble_size,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_level<sp/><sp/><sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>weight_t<sp/>threshold<sp/><sp/>=<sp/>weight_t{1e-7},</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>weight_t<sp/>resolution<sp/>=<sp/>weight_t{1});</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="832"><highlight class="normal">std::unique_ptr&lt;legacy::GraphCOO&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;&gt;<sp/>minimum_spanning_tree(</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;vertex_t,<sp/>edge_t,<sp/>weight_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>rmm::device_async_resource_ref<sp/>mr<sp/>=<sp/>rmm::mr::get_current_device_resource());</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">subgraph<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">std::unique_ptr&lt;legacy::GraphCOO&lt;VT,<sp/>ET,<sp/>WT&gt;&gt;<sp/>extract_subgraph_vertex(</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,<sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>vertices,<sp/>VT<sp/>num_vertices);</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>subgraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ext_raft<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>balancedCutClustering(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>num_clusters,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>num_eigen_vects,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT<sp/>evs_tolerance,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>evs_max_iter,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT<sp/>kmean_tolerance,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kmean_max_iter,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT*<sp/>clustering);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecugraph_1_1ext__raft_1ab324c8783d61fa5ba3cf2e64a4c965ad" kindref="member">spectralModularityMaximization</ref>(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>n_clusters,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>n_eig_vects,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT<sp/>evs_tolerance,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>evs_max_iter,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT<sp/>kmean_tolerance,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kmean_max_iter,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT*<sp/>clustering);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecugraph_1_1ext__raft_1ad8865d0e8af475c7f2aa6dcc1fa7916d" kindref="member">analyzeClustering_modularity</ref>(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_clusters,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>clustering,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT*<sp/>score);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecugraph_1_1ext__raft_1a3f1f1138234ea2dc5d99dde346d5e434" kindref="member">analyzeClustering_edge_cut</ref>(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_clusters,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>clustering,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT*<sp/>score);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecugraph_1_1ext__raft_1a562c5905488cf31d11a44f2b67a7312c" kindref="member">analyzeClustering_ratio_cut</ref>(legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_clusters,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>clustering,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WT*<sp/>score);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ext_raft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dense<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">weight_t<sp/>hungarian(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>costs,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>num_rows,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>num_columns,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>assignments);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t&gt;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">weight_t<sp/>hungarian(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>costs,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>num_rows,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>num_columns,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>assignments,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/>epsilon);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bfs(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>distances,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>predecessors,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>sources,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_sources<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>direction_optimizing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>depth_limit<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::numeric_limits&lt;vertex_t&gt;::max(),</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>vertex_t&gt;<sp/>extract_bfs_paths(</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>distances,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>predecessors,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>destinations,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_destinations);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sssp(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t*<sp/>distances,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>predecessors,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>source_vertex,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/>cutoff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::numeric_limits&lt;weight_t&gt;::max(),</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compute<sp/>the<sp/>shortest<sp/>distances<sp/>from<sp/>the<sp/>given<sp/>origins<sp/>to<sp/>all<sp/>the<sp/>given<sp/>destinations.</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/>*<sp/>This<sp/>algorithm<sp/>is<sp/>designed<sp/>for<sp/>large<sp/>diameter<sp/>graphs.<sp/>For<sp/>small<sp/>diameter<sp/>graphs,<sp/>running<sp/>the</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"><sp/>*<sp/>cugraph::sssp<sp/>function<sp/>in<sp/>a<sp/>sequentially<sp/>executed<sp/>loop<sp/>might<sp/>be<sp/>faster.<sp/>This<sp/>algorithms<sp/>currently</highlight></codeline>
<codeline lineno="1180"><highlight class="comment"><sp/>*<sp/>works<sp/>only<sp/>for<sp/>single-GPU<sp/>(we<sp/>are<sp/>not<sp/>aware<sp/>of<sp/>large<sp/>diameter<sp/>graphs<sp/>that<sp/>won&apos;t<sp/>fit<sp/>in<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="1181"><highlight class="comment"><sp/>*<sp/>GPU).</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/>*<sp/>@throws<sp/>cugraph::logic_error<sp/>on<sp/>erroneous<sp/>input<sp/>arguments.</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>weight_t<sp/>Type<sp/>of<sp/>edge<sp/>weights.<sp/>Needs<sp/>to<sp/>be<sp/>a<sp/>floating<sp/>point<sp/>type.</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/>or<sp/>multi-GPU<sp/>(true).</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"><sp/>*<sp/>@param<sp/>edge_weight_view<sp/>View<sp/>object<sp/>holding<sp/>edge<sp/>weights<sp/>for<sp/>@p<sp/>graph_view.</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/>*<sp/>@param<sp/>origins<sp/>An<sp/>array<sp/>of<sp/>origins<sp/>(starting<sp/>vertices)<sp/>to<sp/>find<sp/>shortest<sp/>distances.<sp/>There<sp/>should</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/>*<sp/>be<sp/>no<sp/>duplicates<sp/>in<sp/>@p<sp/>origins.</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/>*<sp/>@param<sp/>destinations<sp/>An<sp/>array<sp/>of<sp/>destinations<sp/>(end<sp/>vertices)<sp/>to<sp/>find<sp/>shortest<sp/>distances.<sp/>There</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/>*<sp/>should<sp/>be<sp/>no<sp/>duplicates<sp/>in<sp/>@p<sp/>destinations.</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/>*<sp/>@param<sp/>cutoff<sp/>Any<sp/>destinations<sp/>farther<sp/>than<sp/>@p<sp/>cutoff<sp/>will<sp/>be<sp/>marked<sp/>as<sp/>unreachable.</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/>*<sp/>@param<sp/>do_expensive_check<sp/>A<sp/>flag<sp/>to<sp/>run<sp/>expensive<sp/>checks<sp/>for<sp/>input<sp/>arguments<sp/>(if<sp/>set<sp/>to<sp/>`true`).</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>vector<sp/>of<sp/>size<sp/>@p<sp/>origins.size()<sp/>*<sp/>@p<sp/>destinations.size().<sp/>The<sp/>i&apos;th<sp/>element<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/>*<sp/>returned<sp/>vector<sp/>is<sp/>the<sp/>shortest<sp/>distance<sp/>from<sp/>the<sp/>(i<sp/>/<sp/>@p<sp/>destinations.size())&apos;th<sp/>origin<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/>*<sp/>(i<sp/>%<sp/>@p<sp/>destinations.size())&apos;th<sp/>destination.</highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">rmm::device_uvector&lt;weight_t&gt;<sp/>od_shortest_distances(</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>origins,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>destinations,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>weight_t<sp/>cutoff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::numeric_limits&lt;weight_t&gt;::max(),</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pagerank(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>true,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;weight_t<sp/>const*&gt;<sp/>precomputed_vertex_out_weight_sums,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;vertex_t<sp/>const*&gt;<sp/>personalization_vertices,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;result_t<sp/>const*&gt;<sp/>personalization_values,</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;vertex_t&gt;<sp/>personalization_vector_size,</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t*<sp/>pageranks,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/>alpha,</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/>epsilon,</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_iterations<sp/><sp/><sp/>=<sp/>500,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_initial_guess<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/><sp/>This<sp/>structure<sp/>should<sp/>be<sp/>propagated<sp/>to<sp/>other<sp/>algorithms<sp/>that<sp/>converge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(eigenvector<sp/>centrality,<sp/>hits<sp/>and<sp/>katz<sp/>centrality)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281" refid="structcugraph_1_1centrality__algorithm__metadata__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcugraph_1_1centrality__algorithm__metadata__t" kindref="compound">centrality_algorithm_metadata_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_iterations_{};</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>converged_{};</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;result_t&gt;,<sp/><ref refid="structcugraph_1_1centrality__algorithm__metadata__t" kindref="compound">centrality_algorithm_metadata_t</ref>&gt;<sp/>pagerank(</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, true, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>std::optional&lt;raft::device_span&lt;weight_t<sp/>const&gt;&gt;<sp/>precomputed_vertex_out_weight_sums,</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>std::optional&lt;std::tuple&lt;raft::device_span&lt;vertex_t<sp/>const&gt;,<sp/>raft::device_span&lt;result_t<sp/>const&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>personalization,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>std::optional&lt;raft::device_span&lt;result_t<sp/>const&gt;&gt;<sp/>initial_pageranks,</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>result_t<sp/>alpha,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>result_t<sp/>epsilon,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_iterations<sp/><sp/><sp/>=<sp/>500,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">rmm::device_uvector&lt;weight_t&gt;<sp/>eigenvector_centrality(</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, true, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>std::optional&lt;raft::device_span&lt;weight_t<sp/>const&gt;&gt;<sp/>initial_centralities,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>weight_t<sp/>epsilon,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_iterations<sp/><sp/><sp/>=<sp/>500,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">std::tuple&lt;result_t,<sp/>size_t&gt;<sp/>hits(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, true, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t*<sp/>hubs,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t*<sp/>authorities,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/>epsilon,</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_iterations,</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_initial_hubs_guess,</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalize,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>katz_centrality(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, true, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>betas,</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t*<sp/>katz_centralities,</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/>alpha,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/>beta,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_t<sp/>epsilon,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_iterations<sp/><sp/><sp/>=<sp/>500,</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_initial_guess<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;size_t&gt;&gt;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">extract_ego(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>source_vertex,</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>n_subgraphs,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>radius);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;size_t&gt;&gt;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">extract_ego(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>source_vertices,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/>radius,</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>index_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">std::</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;weight_t&gt;,<sp/>rmm::device_uvector&lt;index_t&gt;&gt;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>random_walks(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>ptr_d_start,</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_t<sp/>num_paths,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_t<sp/>max_depth,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_padding<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;sampling_params_t&gt;<sp/>sampling_strategy<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Do<sp/>I<sp/>care<sp/>about<sp/>transposed<sp/>or<sp/>not?<sp/><sp/>I<sp/>want<sp/>to<sp/>be<sp/>able<sp/>to<sp/>operate<sp/>in<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">uniform_random_walks(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>start_vertices,</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length,</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>seed<sp/>=<sp/>std::numeric_limits&lt;uint64_t&gt;::max());</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">biased_random_walks(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref><sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>start_vertices,</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>seed<sp/>=<sp/>std::numeric_limits&lt;uint64_t&gt;::max());</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">node2vec_random_walks(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;<ref refid="classcugraph_1_1edge__property__view__t" kindref="compound">edge_property_view_t&lt;edge_t, weight_t const*&gt;</ref>&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>start_vertices,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/>p,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_t<sp/>q,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>seed<sp/>=<sp/>std::numeric_limits&lt;uint64_t&gt;::max());</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_CUGRAPH_OPS</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t&gt;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;edge_t&gt;,<sp/>rmm::device_uvector&lt;vertex_t&gt;&gt;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal">sample_neighbors_adjacency_list(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state,</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, false&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>ptr_d_start,</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_start_vertices,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sampling_size,</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops::graph::SamplingAlgoT<sp/>sampling_algo);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t&gt;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;vertex_t&gt;&gt;<sp/>sample_neighbors_edgelist(</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state,</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, false&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>vertex_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>ptr_d_start,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_start_vertices,</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sampling_size,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/>ops::graph::SamplingAlgoT<sp/>sampling_algo);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>weakly_connected_components(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcugraph_1_1graph__view__t" kindref="compound">graph_view_t&lt;vertex_t, edge_t, false, multi_gpu&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_t*<sp/>components,</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>k_core_degree_type_t<sp/>{<sp/>IN<sp/>=<sp/>0,<sp/>OUT<sp/>=<sp/>1,<sp/>INOUT<sp/>=<sp/>2<sp/>};</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>core_number(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_t*<sp/>core_numbers,</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_core_degree_type_t<sp/>degree_type,</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k_first<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k_last<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::numeric_limits&lt;size_t&gt;::max(),</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">k_core(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;k_core_degree_type_t&gt;<sp/>degree_type,</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;raft::device_span&lt;edge_t<sp/>const&gt;&gt;<sp/>core_numbers,</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>prior_sources_behavior_t<sp/>{<sp/>DEFAULT<sp/>=<sp/>0,<sp/>CARRY_OVER,<sp/>EXCLUDE<sp/>};</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_type_t,</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>label_t,</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_transposed,</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;edge_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;edge_type_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;int32_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;label_t&gt;&gt;,</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;size_t&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">uniform_neighbor_sample(</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>store_transposed,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>edge_t<sp/>const*&gt;&gt;<sp/>edge_id_view,</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>edge_type_t<sp/>const*&gt;&gt;<sp/>edge_type_view,</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>starting_vertices,</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>std::optional&lt;raft::device_span&lt;label_t<sp/>const&gt;&gt;<sp/>starting_vertex_labels,</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>std::optional&lt;std::tuple&lt;raft::device_span&lt;label_t<sp/>const&gt;,<sp/>raft::device_span&lt;int32_t<sp/>const&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>label_to_output_comm_rank,</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/>raft::host_span&lt;int32_t<sp/>const&gt;<sp/>fan_out,</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state,</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>return_hops,</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_replacement<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/>prior_sources_behavior_t<sp/>prior_sources_behavior<sp/>=<sp/>prior_sources_behavior_t::DEFAULT,</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dedupe_sources<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compute<sp/>triangle<sp/>counts.</highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/>*<sp/>Compute<sp/>triangle<sp/>counts<sp/>for<sp/>the<sp/>entire<sp/>set<sp/>of<sp/>vertices<sp/>(if<sp/>@p<sp/>vertices<sp/>is<sp/>std::nullopt)<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"><sp/>*<sp/>given<sp/>vertices<sp/>(@p<sp/>vertices.has_value()<sp/>is<sp/>true).</highlight></codeline>
<codeline lineno="1989"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1990"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="1991"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/>*<sp/>@param<sp/>vertices<sp/>Vertices<sp/>to<sp/>compute<sp/>triangle<sp/>counts.<sp/>If<sp/>@p<sp/>vertices.has_value()<sp/>is<sp/>false,<sp/>compute</highlight></codeline>
<codeline lineno="1997"><highlight class="comment"><sp/>*<sp/>triangle<sp/>counts<sp/>for<sp/>the<sp/>entire<sp/>set<sp/>of<sp/>vertices.</highlight></codeline>
<codeline lineno="1998"><highlight class="comment"><sp/>*<sp/>@param<sp/>counts<sp/>Output<sp/>triangle<sp/>count<sp/>array.<sp/>The<sp/>size<sp/>of<sp/>the<sp/>array<sp/>should<sp/>be<sp/>the<sp/>local<sp/>vertex</highlight></codeline>
<codeline lineno="1999"><highlight class="comment"><sp/>*<sp/>partition<sp/>range<sp/>size<sp/>(if<sp/>@p<sp/>vertices<sp/>is<sp/>std::nullopt)<sp/>or<sp/>the<sp/>size<sp/>of<sp/>@p<sp/>vertices<sp/>(if<sp/>@p</highlight></codeline>
<codeline lineno="2000"><highlight class="comment"><sp/>*<sp/>vertices.has_value()<sp/>is<sp/>true).</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/>*<sp/>@param<sp/>do_expensive_check<sp/>A<sp/>flag<sp/>to<sp/>run<sp/>expensive<sp/>checks<sp/>for<sp/>input<sp/>arguments<sp/>(if<sp/>set<sp/>to<sp/>`true`).</highlight></codeline>
<codeline lineno="2002"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triangle_count(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertices,</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raft::device_span&lt;edge_t&gt;<sp/>counts,</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2011"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compute<sp/>edge<sp/>triangle<sp/>counts.</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/>*<sp/>Compute<sp/>edge<sp/>triangle<sp/>counts<sp/>for<sp/>the<sp/>entire<sp/>set<sp/>of<sp/>edges.</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2016"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="2018"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="2019"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="2020"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="2021"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2022"><highlight class="comment"><sp/>*<sp/>@return<sp/>edge_property_t<sp/>containing<sp/>the<sp/>edge<sp/>triangle<sp/>count</highlight></codeline>
<codeline lineno="2023"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal">edge_property_t&lt;graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;,<sp/>edge_t&gt;<sp/>edge_triangle_count(</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,<sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2029"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compute<sp/>K-Truss.</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/>*<sp/>Extract<sp/>the<sp/>K-Truss<sp/>subgraph<sp/>of<sp/>a<sp/>graph</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2035"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/>*<sp/>@param<sp/>edge_weight_view<sp/>Optional<sp/>view<sp/>object<sp/>holding<sp/>edge<sp/>weights<sp/>for<sp/>@p<sp/>graph_view.</highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/>*<sp/>@param<sp/>k<sp/>The<sp/>desired<sp/>k<sp/>to<sp/>be<sp/>used<sp/>for<sp/>extracting<sp/>the<sp/>K-Truss<sp/>subgraph</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/>*<sp/>@param<sp/>do_expensive_check<sp/>A<sp/>flag<sp/>to<sp/>run<sp/>expensive<sp/>checks<sp/>for<sp/>input<sp/>arguments<sp/>(if<sp/>set<sp/>to<sp/>`true`).</highlight></codeline>
<codeline lineno="2042"><highlight class="comment"><sp/>*<sp/>@return<sp/>edge<sp/>list<sp/>of<sp/>the<sp/>K-Truss<sp/>subgraph</highlight></codeline>
<codeline lineno="2043"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_uvector&lt;vertex_t&gt;,</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;rmm::device_uvector&lt;weight_t&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal">k_truss(raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_t<sp/>k,</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal">rmm::device_uvector&lt;weight_t&gt;<sp/>jaccard_coefficients(</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>std::tuple&lt;raft::device_span&lt;vertex_t<sp/>const&gt;,<sp/>raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertex_pairs,</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal">rmm::device_uvector&lt;weight_t&gt;<sp/>sorensen_coefficients(</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>std::tuple&lt;raft::device_span&lt;vertex_t<sp/>const&gt;,<sp/>raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertex_pairs,</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">rmm::device_uvector&lt;weight_t&gt;<sp/>overlap_coefficients(</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>std::tuple&lt;raft::device_span&lt;vertex_t<sp/>const&gt;,<sp/>raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertex_pairs,</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">std::</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;weight_t&gt;&gt;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>jaccard_all_pairs_coefficients(</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertices,</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>topk,</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal">std::</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/>tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;weight_t&gt;&gt;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>sorensen_all_pairs_coefficients(</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertices,</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>topk,</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal">std::</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;vertex_t&gt;,<sp/>rmm::device_uvector&lt;weight_t&gt;&gt;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/>overlap_all_pairs_coefficients(</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;&gt;<sp/>edge_weight_view,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;raft::device_span&lt;vertex_t<sp/>const&gt;&gt;<sp/>vertices,</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>topk,</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2316"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Enumerate<sp/>K-hop<sp/>neighbors</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2318"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>the<sp/>number<sp/>of<sp/>K-hop<sp/>neighbors<sp/>(and<sp/>memory<sp/>footprint)<sp/>can<sp/>grow<sp/>very<sp/>fast<sp/>if<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="2319"><highlight class="comment"><sp/>*<sp/>high-degree<sp/>vertices.<sp/>Limit<sp/>the<sp/>number<sp/>of<sp/>start<sp/>vertices<sp/>and<sp/>@p<sp/>k<sp/>to<sp/>avoid<sp/>rapid<sp/>increase<sp/>in</highlight></codeline>
<codeline lineno="2320"><highlight class="comment"><sp/>*<sp/>memory<sp/>footprint.</highlight></codeline>
<codeline lineno="2321"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2322"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2323"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2324"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="2325"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="2326"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="2327"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="2328"><highlight class="comment"><sp/>*<sp/>@param<sp/>start_vertices<sp/>Find<sp/>K-hop<sp/>neighbors<sp/>from<sp/>each<sp/>vertex<sp/>in<sp/>@p<sp/>start_vertices.</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/>*<sp/>@param<sp/>k<sp/>Number<sp/>of<sp/>hops<sp/>to<sp/>make<sp/>to<sp/>enumerate<sp/>neighbors.</highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/>*<sp/>@param<sp/>do_expensive_check<sp/>A<sp/>flag<sp/>to<sp/>run<sp/>expensive<sp/>checks<sp/>for<sp/>input<sp/>arguments<sp/>(if<sp/>set<sp/>to<sp/>`true`).</highlight></codeline>
<codeline lineno="2331"><highlight class="comment"><sp/>*<sp/>@return<sp/>Tuple<sp/>of<sp/>two<sp/>arrays:<sp/>offsets<sp/>and<sp/>K-hop<sp/>neighbors.<sp/>The<sp/>size<sp/>of<sp/>the<sp/>offset<sp/>array<sp/>is<sp/>@p</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"><sp/>*<sp/>start_vertices.size()<sp/>+<sp/>1.<sp/>The<sp/>i&apos;th<sp/>and<sp/>(i+1)&apos;th<sp/>elements<sp/>of<sp/>the<sp/>offset<sp/>array<sp/>demarcates<sp/>the</highlight></codeline>
<codeline lineno="2333"><highlight class="comment"><sp/>*<sp/>beginning<sp/>(inclusive)<sp/>and<sp/>end<sp/>(exclusive)<sp/>of<sp/>the<sp/>K-hop<sp/>neighbors<sp/>of<sp/>the<sp/>i&apos;th<sp/>element<sp/>of<sp/>@p</highlight></codeline>
<codeline lineno="2334"><highlight class="comment"><sp/>*<sp/>start_vertices,<sp/>respectively.</highlight></codeline>
<codeline lineno="2335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;size_t&gt;,<sp/>rmm::device_uvector&lt;vertex_t&gt;&gt;<sp/>k_hop_nbrs(</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>raft::device_span&lt;vertex_t<sp/>const&gt;<sp/>start_vertices,</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_expensive_check<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2345"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Find<sp/>a<sp/>Maximal<sp/>Independent<sp/>Set</highlight></codeline>
<codeline lineno="2346"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2347"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2348"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2349"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="2350"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="2351"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="2352"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="2353"><highlight class="comment"><sp/>*<sp/>@param<sp/>rng_state<sp/>The<sp/>RngState<sp/>instance<sp/>holding<sp/>pseudo-random<sp/>number<sp/>generator<sp/>state.</highlight></codeline>
<codeline lineno="2354"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>device<sp/>vector<sp/>containing<sp/>vertices<sp/>in<sp/>the<sp/>maximal<sp/>independent<sp/>set.</highlight></codeline>
<codeline lineno="2355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal">rmm::device_uvector&lt;vertex_t&gt;<sp/>maximal_independent_set(</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Find<sp/>a<sp/>Greedy<sp/>Vertex<sp/>Coloring</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2365"><highlight class="comment"><sp/>*<sp/>A<sp/>vertex<sp/>coloring<sp/>is<sp/>an<sp/>assignment<sp/>of<sp/>colors<sp/>or<sp/>labels<sp/>to<sp/>each<sp/>vertex<sp/>of<sp/>a<sp/>graph<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="2366"><highlight class="comment"><sp/>*<sp/>no<sp/>two<sp/>adjacent<sp/>vertices<sp/>have<sp/>the<sp/>same<sp/>color<sp/>or<sp/>label.<sp/>Finding<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>colors</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"><sp/>*<sp/>needed<sp/>to<sp/>color<sp/>the<sp/>vertices<sp/>of<sp/>a<sp/>graph<sp/>is<sp/>an<sp/>NP-hard<sp/>problem<sp/>and<sp/>therefore<sp/>for<sp/>practical</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"><sp/>*<sp/>use<sp/>cases<sp/>greedy<sp/>coloring<sp/>is<sp/>used.<sp/>Here<sp/>we<sp/>provide<sp/>an<sp/>implementation<sp/>of<sp/>greedy<sp/>vertex</highlight></codeline>
<codeline lineno="2369"><highlight class="comment"><sp/>*<sp/>coloring<sp/>based<sp/>on<sp/>maximal<sp/>independent<sp/>set.</highlight></codeline>
<codeline lineno="2370"><highlight class="comment"><sp/>*<sp/>See</highlight></codeline>
<codeline lineno="2371"><highlight class="comment"><sp/>*<sp/>https://research.nvidia.com/sites/default/files/pubs/2015-05_Parallel-Graph-Coloring/nvr-2015-001.pdf</highlight></codeline>
<codeline lineno="2372"><highlight class="comment"><sp/>*<sp/>for<sp/>further<sp/>information.</highlight></codeline>
<codeline lineno="2373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2374"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2375"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2376"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="2377"><highlight class="comment"><sp/>*<sp/>@param<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,<sp/>and</highlight></codeline>
<codeline lineno="2378"><highlight class="comment"><sp/>*<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="2379"><highlight class="comment"><sp/>*<sp/>@param<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="2380"><highlight class="comment"><sp/>*<sp/>@param<sp/>rng_state<sp/>The<sp/>RngState<sp/>instance<sp/>holding<sp/>pseudo-random<sp/>number<sp/>generator<sp/>state.</highlight></codeline>
<codeline lineno="2381"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>device<sp/>vector<sp/>containing<sp/>color<sp/>for<sp/>each<sp/>vertex.</highlight></codeline>
<codeline lineno="2382"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal">rmm::device_uvector&lt;vertex_t&gt;<sp/>vertex_coloring(</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>raft::random::RngState&amp;<sp/>rng_state);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Approximate<sp/>Weighted<sp/>Matching</highlight></codeline>
<codeline lineno="2391"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2392"><highlight class="comment"><sp/>*<sp/>A<sp/>matching<sp/>in<sp/>an<sp/>undirected<sp/>graph<sp/>G<sp/>=<sp/>(V,<sp/>E)<sp/>is<sp/>a<sp/>pairing<sp/>of<sp/>adjacent<sp/>vertices</highlight></codeline>
<codeline lineno="2393"><highlight class="comment"><sp/>*<sp/>such<sp/>that<sp/>each<sp/>vertex<sp/>is<sp/>matched<sp/>with<sp/>at<sp/>most<sp/>one<sp/>other<sp/>vertex,<sp/>the<sp/>objective</highlight></codeline>
<codeline lineno="2394"><highlight class="comment"><sp/>*<sp/>being<sp/>to<sp/>match<sp/>as<sp/>many<sp/>vertices<sp/>as<sp/>possible<sp/>or<sp/>to<sp/>maximise<sp/>the<sp/>sum<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2395"><highlight class="comment"><sp/>*<sp/>weights<sp/>of<sp/>the<sp/>matched<sp/>edges.<sp/>Here<sp/>we<sp/>provide<sp/>an<sp/>implementation<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="2396"><highlight class="comment"><sp/>*<sp/>approximation<sp/>algorithm<sp/>to<sp/>the<sp/>weighted<sp/>Maximum<sp/>matching.<sp/>See</highlight></codeline>
<codeline lineno="2397"><highlight class="comment"><sp/>*<sp/>https://web.archive.org/web/20081031230449id_/http://www.ii.uib.no/~fredrikm/fredrik/papers/CP75.pdf</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"><sp/>*<sp/>for<sp/>further<sp/>information.</highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>vertex_t<sp/>Type<sp/>of<sp/>vertex<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>edge_t<sp/>Type<sp/>of<sp/>edge<sp/>identifiers.<sp/>Needs<sp/>to<sp/>be<sp/>an<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="2402"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>multi_gpu<sp/>Flag<sp/>indicating<sp/>whether<sp/>template<sp/>instantiation<sp/>should<sp/>target<sp/>single-GPU<sp/>(false)</highlight></codeline>
<codeline lineno="2403"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>handle<sp/>RAFT<sp/>handle<sp/>object<sp/>to<sp/>encapsulate<sp/>resources<sp/>(e.g.<sp/>CUDA<sp/>stream,<sp/>communicator,</highlight></codeline>
<codeline lineno="2404"><highlight class="comment"><sp/>*<sp/>and<sp/>handles<sp/>to<sp/>various<sp/>CUDA<sp/>libraries)<sp/>to<sp/>run<sp/>graph<sp/>algorithms.</highlight></codeline>
<codeline lineno="2405"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>graph_view<sp/>Graph<sp/>view<sp/>object.</highlight></codeline>
<codeline lineno="2406"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>edge_weight_view<sp/>View<sp/>object<sp/>holding<sp/>edge<sp/>weights<sp/>for<sp/>@p<sp/>graph_view.</highlight></codeline>
<codeline lineno="2407"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>tuple<sp/>of<sp/>device<sp/>vector<sp/>of<sp/>matched<sp/>vertex<sp/>ids<sp/>and<sp/>sum<sp/>of<sp/>the<sp/>weights<sp/>of<sp/>the<sp/>matched</highlight></codeline>
<codeline lineno="2408"><highlight class="comment"><sp/>*<sp/>edges.</highlight></codeline>
<codeline lineno="2409"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vertex_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>edge_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>weight_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_gpu&gt;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal">std::tuple&lt;rmm::device_uvector&lt;vertex_t&gt;,<sp/>weight_t&gt;<sp/>approximate_weighted_matching(</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>raft::handle_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/>graph_view_t&lt;vertex_t,<sp/>edge_t,<sp/>false,<sp/>multi_gpu&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph_view,</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/>edge_property_view_t&lt;edge_t,<sp/>weight_t<sp/>const*&gt;<sp/>edge_weight_view);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cugraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/include/cugraph/algorithms.hpp"/>
  </compounddef>
</doxygen>
