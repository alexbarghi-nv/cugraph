<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="COOtoCSR_8cuh" kind="file" language="C++">
    <compoundname>COOtoCSR.cuh</compoundname>
    <includes refid="functions_8hpp" local="no">cugraph/legacy/functions.hpp</includes>
    <includes refid="include_2cugraph_2legacy_2graph_8hpp" local="no">cugraph/legacy/graph.hpp</includes>
    <includes refid="include_2cugraph_2utilities_2error_8hpp" local="no">cugraph/utilities/error.hpp</includes>
    <includes local="no">rmm/exec_policy.hpp</includes>
    <includes local="no">rmm/resource_ref.hpp</includes>
    <includes local="no">cub/device/device_radix_sort.cuh</includes>
    <includes local="no">cub/device/device_run_length_encode.cuh</includes>
    <includes local="no">thrust/device_ptr.h</includes>
    <includes local="no">thrust/extrema.h</includes>
    <includes local="no">thrust/fill.h</includes>
    <includes local="no">thrust/for_each.h</includes>
    <includes local="no">thrust/functional.h</includes>
    <includes local="no">thrust/iterator/counting_iterator.h</includes>
    <includes local="no">thrust/iterator/reverse_iterator.h</includes>
    <includes local="no">thrust/iterator/zip_iterator.h</includes>
    <includes local="no">thrust/scan.h</includes>
    <includes local="no">thrust/sort.h</includes>
    <includes local="no">thrust/tuple.h</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="COOtoCSR_8cu" local="yes">COOtoCSR.cu</includedby>
    <includedby refid="barnes__hut_8cuh" local="yes">barnes_hut.cuh</includedby>
    <includedby refid="exact__fa2_8cuh" local="yes">exact_fa2.cuh</includedby>
    <includedby refid="louvain_8cuh" local="yes">louvain.cuh</includedby>
    <incdepgraph>
      <node id="12">
        <label>eidecl_graph.hpp</label>
        <link refid="legacy_2eidecl__graph_8hpp_source"/>
      </node>
      <node id="2">
        <label>cugraph/legacy/functions.hpp</label>
        <link refid="functions_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cugraph/legacy/graph.hpp</label>
        <link refid="include_2cugraph_2legacy_2graph_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cugraph/utilities/error.hpp</label>
        <link refid="include_2cugraph_2utilities_2error_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>COOtoCSR.cuh</label>
        <link refid="COOtoCSR_8cuh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="16">
        <label>cub/device/device_radix_sort.cuh</label>
      </node>
      <node id="17">
        <label>cub/device/device_run_length_encode.cuh</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="14">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="4">
        <label>raft/core/handle.hpp</label>
      </node>
      <node id="5">
        <label>rmm/device_buffer.hpp</label>
      </node>
      <node id="15">
        <label>rmm/exec_policy.hpp</label>
      </node>
      <node id="6">
        <label>rmm/resource_ref.hpp</label>
      </node>
      <node id="18">
        <label>thrust/device_ptr.h</label>
      </node>
      <node id="19">
        <label>thrust/extrema.h</label>
      </node>
      <node id="20">
        <label>thrust/fill.h</label>
      </node>
      <node id="21">
        <label>thrust/for_each.h</label>
      </node>
      <node id="22">
        <label>thrust/functional.h</label>
      </node>
      <node id="23">
        <label>thrust/iterator/counting_iterator.h</label>
      </node>
      <node id="24">
        <label>thrust/iterator/reverse_iterator.h</label>
      </node>
      <node id="25">
        <label>thrust/iterator/zip_iterator.h</label>
      </node>
      <node id="26">
        <label>thrust/scan.h</label>
      </node>
      <node id="27">
        <label>thrust/sort.h</label>
      </node>
      <node id="28">
        <label>thrust/tuple.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>louvain.cuh</label>
        <link refid="louvain_8cuh_source"/>
      </node>
      <node id="1">
        <label>COOtoCSR.cuh</label>
        <link refid="COOtoCSR_8cuh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>barnes_hut.cuh</label>
        <link refid="barnes__hut_8cuh_source"/>
      </node>
      <node id="3">
        <label>exact_fa2.cuh</label>
        <link refid="exact__fa2_8cuh_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacecugraph">cugraph</innernamespace>
    <innernamespace refid="namespacecugraph_1_1detail">cugraph::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>COOtoCSR_kernels.cuh</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Mar<sp/>8,<sp/>2018</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>jwyles</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/legacy/functions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/legacy/graph.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cugraph/utilities/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rmm/exec_policy.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rmm/resource_ref.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cub/device/device_radix_sort.cuh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cub/device/device_run_length_encode.cuh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/device_ptr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/extrema.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/fill.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/for_each.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/functional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/iterator/counting_iterator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/iterator/reverse_iterator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/iterator/zip_iterator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/scan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/sort.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrust/tuple.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cugraph<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">VT<sp/>sort(legacy::GraphCOOView&lt;VT,<sp/>ET,<sp/>WT&gt;&amp;<sp/>graph,<sp/>rmm::cuda_stream_view<sp/>stream_view)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>VT<sp/>max_src_id;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>VT<sp/>max_dst_id;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.has_data())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::stable_sort_by_key(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmm::exec_policy(stream_view),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph.dst_indices,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph.dst_indices<sp/>+<sp/>graph.number_of_edges,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thrust::make_zip_iterator(thrust::make_tuple(graph.src_indices,<sp/>graph.edge_data)));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>RAFT_CUDA_TRY(cudaMemcpy(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;max_dst_id,<sp/>&amp;(graph.dst_indices[graph.number_of_edges<sp/>-<sp/>1]),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(VT),<sp/>cudaMemcpyDefault));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::stable_sort_by_key(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmm::exec_policy(stream_view),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph.src_indices,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>graph.src_indices<sp/>+<sp/>graph.number_of_edges,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thrust::make_zip_iterator(thrust::make_tuple(graph.dst_indices,<sp/>graph.edge_data)));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>RAFT_CUDA_TRY(cudaMemcpy(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;max_src_id,<sp/>&amp;(graph.src_indices[graph.number_of_edges<sp/>-<sp/>1]),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(VT),<sp/>cudaMemcpyDefault));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::stable_sort_by_key(rmm::exec_policy(stream_view),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.dst_indices,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.dst_indices<sp/>+<sp/>graph.number_of_edges,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.src_indices);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>RAFT_CUDA_TRY(cudaMemcpy(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;max_dst_id,<sp/>&amp;(graph.dst_indices[graph.number_of_edges<sp/>-<sp/>1]),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(VT),<sp/>cudaMemcpyDefault));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::stable_sort_by_key(rmm::exec_policy(stream_view),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.src_indices,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.src_indices<sp/>+<sp/>graph.number_of_edges,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.dst_indices);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>RAFT_CUDA_TRY(cudaMemcpy(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;max_src_id,<sp/>&amp;(graph.src_indices[graph.number_of_edges<sp/>-<sp/>1]),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(VT),<sp/>cudaMemcpyDefault));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(max_src_id,<sp/>max_dst_id)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill_offset(VT*<sp/>source,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ET*<sp/>offsets,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>number_of_vertices,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ET<sp/>number_of_edges,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::cuda_stream_view<sp/>stream_view)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>thrust::fill(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>rmm::exec_policy(stream_view),<sp/>offsets,<sp/>offsets<sp/>+<sp/>number_of_vertices<sp/>+<sp/>1,<sp/>number_of_edges);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>thrust::for_each(rmm::exec_policy(stream_view),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrust::make_counting_iterator&lt;ET&gt;(1),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrust::make_counting_iterator&lt;ET&gt;(number_of_edges),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[source,<sp/>offsets]<sp/>__device__(ET<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>source[index];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>source[index<sp/>-<sp/>1])<sp/>{<sp/>offsets[id]<sp/>=<sp/>index;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>thrust::device_ptr&lt;VT&gt;<sp/>src<sp/>=<sp/>thrust::device_pointer_cast(source);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>thrust::device_ptr&lt;ET&gt;<sp/>off<sp/>=<sp/>thrust::device_pointer_cast(offsets);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>off[src[0]]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ET{0};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>thrust::make_reverse_iterator(offsets<sp/>+<sp/>number_of_vertices<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>thrust::inclusive_scan(rmm::exec_policy(stream_view),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>+<sp/>number_of_vertices<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrust::minimum&lt;ET&gt;());</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">rmm::device_buffer<sp/>create_offset(VT*<sp/>source,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>number_of_vertices,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ET<sp/>number_of_edges,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::cuda_stream_view<sp/>stream_view,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_async_resource_ref<sp/>mr)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>array<sp/>needs<sp/>an<sp/>extra<sp/>element<sp/>at<sp/>the<sp/>end<sp/>to<sp/>contain<sp/>the<sp/>ending<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>last<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>rmm::device_buffer<sp/>offsets_buffer(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ET)<sp/>*<sp/>(number_of_vertices<sp/>+<sp/>1),<sp/>stream_view,<sp/>mr);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>ET*<sp/>offsets<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ET*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(offsets_buffer.data());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>fill_offset(source,<sp/>offsets,<sp/>number_of_vertices,<sp/>number_of_edges,<sp/>stream_view);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offsets_buffer;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">std::unique_ptr&lt;legacy::GraphCSR&lt;VT,<sp/>ET,<sp/>WT&gt;&gt;<sp/>coo_to_csr(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,<sp/>rmm::device_async_resource_ref<sp/>mr)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>rmm::cuda_stream_view<sp/>stream_view;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>legacy::GraphCOO&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/>temp_graph(graph,<sp/>stream_view.value(),<sp/>mr);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/>temp_graph_view<sp/>=<sp/>temp_graph.view();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>VT<sp/>total_vertex_count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>detail::sort(temp_graph_view,<sp/>stream_view);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>rmm::device_buffer<sp/>offsets<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>detail::create_offset(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_graph.src_indices(),<sp/>total_vertex_count,<sp/>temp_graph.number_of_edges(),<sp/>stream_view,<sp/>mr);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>coo_contents<sp/>=<sp/>temp_graph.release();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>legacy::GraphSparseContents&lt;VT,<sp/>ET,<sp/>WT&gt;<sp/>csr_contents{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>total_vertex_count,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>coo_contents.number_of_edges,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_unique&lt;rmm::device_buffer&gt;(std::move(offsets)),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::move(coo_contents.dst_indices),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::move(coo_contents.edge_data)};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;legacy::GraphCSR&lt;VT,<sp/>ET,<sp/>WT&gt;&gt;(std::move(csr_contents));</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ET,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WT&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace(legacy::GraphCOOView&lt;VT,<sp/>ET,<sp/>WT&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacy::GraphCSRView&lt;VT,<sp/>ET,<sp/>WT&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>rmm::cuda_stream_view<sp/>stream_view;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>detail::sort(graph,<sp/>stream_view);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>detail::fill_offset(graph.src_indices,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.offsets,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.number_of_vertices,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.number_of_edges,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_view);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>RAFT_CUDA_TRY(cudaMemcpy(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>result.indices,<sp/>graph.dst_indices,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(VT)<sp/>*<sp/>graph.number_of_edges,<sp/>cudaMemcpyDefault));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.has_data())</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>RAFT_CUDA_TRY(cudaMemcpy(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.edge_data,<sp/>graph.edge_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WT)<sp/>*<sp/>graph.number_of_edges,<sp/>cudaMemcpyDefault));</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Explicit<sp/>Instantiation<sp/>Declarations<sp/>(EIDecl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>attempt<sp/>decrease<sp/>in<sp/>compile<sp/>time:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>uint32_t<sp/>+<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;legacy::GraphCSR&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">coo_to_csr&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;(legacy::GraphCOOView&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_async_resource_ref);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>uint32_t<sp/>+<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;legacy::GraphCSR&lt;uint32_t,<sp/>uint32_t,<sp/>double&gt;&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">coo_to_csr&lt;uint32_t,<sp/>uint32_t,<sp/>double&gt;(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;uint32_t,<sp/>uint32_t,<sp/>double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,<sp/>rmm::device_async_resource_ref);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int<sp/>+<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;legacy::GraphCSR&lt;int32_t,<sp/>int32_t,<sp/>float&gt;&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">coo_to_csr&lt;int32_t,<sp/>int32_t,<sp/>float&gt;(legacy::GraphCOOView&lt;int32_t,<sp/>int32_t,<sp/>float&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_async_resource_ref);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int<sp/>+<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;legacy::GraphCSR&lt;int32_t,<sp/>int32_t,<sp/>double&gt;&gt;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">coo_to_csr&lt;int32_t,<sp/>int32_t,<sp/>double&gt;(legacy::GraphCOOView&lt;int32_t,<sp/>int32_t,<sp/>double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_async_resource_ref);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int64_t<sp/>+<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;legacy::GraphCSR&lt;int64_t,<sp/>int64_t,<sp/>float&gt;&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">coo_to_csr&lt;int64_t,<sp/>int64_t,<sp/>float&gt;(legacy::GraphCOOView&lt;int64_t,<sp/>int64_t,<sp/>float&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_async_resource_ref);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int64_t<sp/>+<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;legacy::GraphCSR&lt;int64_t,<sp/>int64_t,<sp/>double&gt;&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">coo_to_csr&lt;int64_t,<sp/>int64_t,<sp/>double&gt;(legacy::GraphCOOView&lt;int64_t,<sp/>int64_t,<sp/>double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmm::device_async_resource_ref);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in-place<sp/>versions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>uint32_t<sp/>+<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>uint32_t<sp/>+<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace&lt;uint32_t,<sp/>uint32_t,<sp/>double&gt;(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;uint32_t,<sp/>uint32_t,<sp/>double&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;uint32_t,<sp/>uint32_t,<sp/>double&gt;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int<sp/>+<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace&lt;int32_t,<sp/>int32_t,<sp/>float&gt;(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;int32_t,<sp/>int32_t,<sp/>float&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;int32_t,<sp/>int32_t,<sp/>float&gt;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int<sp/>+<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace&lt;int32_t,<sp/>int32_t,<sp/>double&gt;(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;int32_t,<sp/>int32_t,<sp/>double&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;int32_t,<sp/>int32_t,<sp/>double&gt;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int64_t<sp/>+<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace&lt;int64_t,<sp/>int64_t,<sp/>float&gt;(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;int64_t,<sp/>int64_t,<sp/>float&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;int64_t,<sp/>int64_t,<sp/>float&gt;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EIDecl<sp/>for<sp/>int64_t<sp/>+<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coo_to_csr_inplace&lt;int64_t,<sp/>int64_t,<sp/>double&gt;(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>legacy::GraphCOOView&lt;int64_t,<sp/>int64_t,<sp/>double&gt;&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>legacy::GraphCSRView&lt;int64_t,<sp/>int64_t,<sp/>double&gt;&amp;<sp/>result);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cugraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nfs/abarghi/cugraph6/cpp/src/converters/legacy/COOtoCSR.cuh"/>
  </compounddef>
</doxygen>
